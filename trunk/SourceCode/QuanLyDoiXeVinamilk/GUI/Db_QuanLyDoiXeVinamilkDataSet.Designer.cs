//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GUI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Db_QuanLyDoiXeVinamilkDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Db_QuanLyDoiXeVinamilkDataSet : global::System.Data.DataSet {
        
        private CAP_NHIEN_LIEUDataTable tableCAP_NHIEN_LIEU;
        
        private CHITIET_CAPNHIENLIEUDataTable tableCHITIET_CAPNHIENLIEU;
        
        private CHITIET_HOADONDataTable tableCHITIET_HOADON;
        
        private CHITIETPCXE_TAIXEDataTable tableCHITIETPCXE_TAIXE;
        
        private DIA_DIEMDataTable tableDIA_DIEM;
        
        private HANG_XEDataTable tableHANG_XE;
        
        private HOA_DONDataTable tableHOA_DON;
        
        private LOAI_DIA_DIEMDataTable tableLOAI_DIA_DIEM;
        
        private LOAI_HANGDataTable tableLOAI_HANG;
        
        private LOAI_NHAN_VIENDataTable tableLOAI_NHAN_VIEN;
        
        private MAT_HANGDataTable tableMAT_HANG;
        
        private NHAN_VIENDataTable tableNHAN_VIEN;
        
        private PHANCONGXE_TAIXEDataTable tablePHANCONGXE_TAIXE;
        
        private THAMSODataTable tableTHAMSO;
        
        private TRANG_THAIDataTable tableTRANG_THAI;
        
        private TRONG_TAIDataTable tableTRONG_TAI;
        
        private XEDataTable tableXE;
        
        private global::System.Data.DataRelation relationNHAN_VIENCAP_NHIEN_LIEU;
        
        private global::System.Data.DataRelation relationXECHITIET_CAPNHIENLIEU;
        
        private global::System.Data.DataRelation relationDIA_DIEMCHITIET_HOADON;
        
        private global::System.Data.DataRelation relationHOA_DONCHITIET_HOADON;
        
        private global::System.Data.DataRelation relationMAT_HANGCHITIET_HOADON;
        
        private global::System.Data.DataRelation relationTRANG_THAICHITIET_HOADON;
        
        private global::System.Data.DataRelation relationNHAN_VIENCHITIETPCXE_TAIXE;
        
        private global::System.Data.DataRelation relationPHANCONGXE_TAIXECHITIETPCXE_TAIXE;
        
        private global::System.Data.DataRelation relationXECHITIETPCXE_TAIXE;
        
        private global::System.Data.DataRelation relationLOAI_DIA_DIEMDIA_DIEM;
        
        private global::System.Data.DataRelation relationXEHOA_DON;
        
        private global::System.Data.DataRelation relationLOAI_HANGMAT_HANG;
        
        private global::System.Data.DataRelation relationLOAI_NHAN_VIENNHAN_VIEN;
        
        private global::System.Data.DataRelation relationHANG_XEXE;
        
        private global::System.Data.DataRelation relationLOAI_HANGXE;
        
        private global::System.Data.DataRelation relationNHAN_VIENXE;
        
        private global::System.Data.DataRelation relationTRONG_TAIXE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Db_QuanLyDoiXeVinamilkDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Db_QuanLyDoiXeVinamilkDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CAP_NHIEN_LIEU"] != null)) {
                    base.Tables.Add(new CAP_NHIEN_LIEUDataTable(ds.Tables["CAP_NHIEN_LIEU"]));
                }
                if ((ds.Tables["CHITIET_CAPNHIENLIEU"] != null)) {
                    base.Tables.Add(new CHITIET_CAPNHIENLIEUDataTable(ds.Tables["CHITIET_CAPNHIENLIEU"]));
                }
                if ((ds.Tables["CHITIET_HOADON"] != null)) {
                    base.Tables.Add(new CHITIET_HOADONDataTable(ds.Tables["CHITIET_HOADON"]));
                }
                if ((ds.Tables["CHITIETPCXE_TAIXE"] != null)) {
                    base.Tables.Add(new CHITIETPCXE_TAIXEDataTable(ds.Tables["CHITIETPCXE_TAIXE"]));
                }
                if ((ds.Tables["DIA_DIEM"] != null)) {
                    base.Tables.Add(new DIA_DIEMDataTable(ds.Tables["DIA_DIEM"]));
                }
                if ((ds.Tables["HANG_XE"] != null)) {
                    base.Tables.Add(new HANG_XEDataTable(ds.Tables["HANG_XE"]));
                }
                if ((ds.Tables["HOA_DON"] != null)) {
                    base.Tables.Add(new HOA_DONDataTable(ds.Tables["HOA_DON"]));
                }
                if ((ds.Tables["LOAI_DIA_DIEM"] != null)) {
                    base.Tables.Add(new LOAI_DIA_DIEMDataTable(ds.Tables["LOAI_DIA_DIEM"]));
                }
                if ((ds.Tables["LOAI_HANG"] != null)) {
                    base.Tables.Add(new LOAI_HANGDataTable(ds.Tables["LOAI_HANG"]));
                }
                if ((ds.Tables["LOAI_NHAN_VIEN"] != null)) {
                    base.Tables.Add(new LOAI_NHAN_VIENDataTable(ds.Tables["LOAI_NHAN_VIEN"]));
                }
                if ((ds.Tables["MAT_HANG"] != null)) {
                    base.Tables.Add(new MAT_HANGDataTable(ds.Tables["MAT_HANG"]));
                }
                if ((ds.Tables["NHAN_VIEN"] != null)) {
                    base.Tables.Add(new NHAN_VIENDataTable(ds.Tables["NHAN_VIEN"]));
                }
                if ((ds.Tables["PHANCONGXE_TAIXE"] != null)) {
                    base.Tables.Add(new PHANCONGXE_TAIXEDataTable(ds.Tables["PHANCONGXE_TAIXE"]));
                }
                if ((ds.Tables["THAMSO"] != null)) {
                    base.Tables.Add(new THAMSODataTable(ds.Tables["THAMSO"]));
                }
                if ((ds.Tables["TRANG_THAI"] != null)) {
                    base.Tables.Add(new TRANG_THAIDataTable(ds.Tables["TRANG_THAI"]));
                }
                if ((ds.Tables["TRONG_TAI"] != null)) {
                    base.Tables.Add(new TRONG_TAIDataTable(ds.Tables["TRONG_TAI"]));
                }
                if ((ds.Tables["XE"] != null)) {
                    base.Tables.Add(new XEDataTable(ds.Tables["XE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAP_NHIEN_LIEUDataTable CAP_NHIEN_LIEU {
            get {
                return this.tableCAP_NHIEN_LIEU;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHITIET_CAPNHIENLIEUDataTable CHITIET_CAPNHIENLIEU {
            get {
                return this.tableCHITIET_CAPNHIENLIEU;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHITIET_HOADONDataTable CHITIET_HOADON {
            get {
                return this.tableCHITIET_HOADON;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHITIETPCXE_TAIXEDataTable CHITIETPCXE_TAIXE {
            get {
                return this.tableCHITIETPCXE_TAIXE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DIA_DIEMDataTable DIA_DIEM {
            get {
                return this.tableDIA_DIEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HANG_XEDataTable HANG_XE {
            get {
                return this.tableHANG_XE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HOA_DONDataTable HOA_DON {
            get {
                return this.tableHOA_DON;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_DIA_DIEMDataTable LOAI_DIA_DIEM {
            get {
                return this.tableLOAI_DIA_DIEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_HANGDataTable LOAI_HANG {
            get {
                return this.tableLOAI_HANG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_NHAN_VIENDataTable LOAI_NHAN_VIEN {
            get {
                return this.tableLOAI_NHAN_VIEN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAT_HANGDataTable MAT_HANG {
            get {
                return this.tableMAT_HANG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NHAN_VIENDataTable NHAN_VIEN {
            get {
                return this.tableNHAN_VIEN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHANCONGXE_TAIXEDataTable PHANCONGXE_TAIXE {
            get {
                return this.tablePHANCONGXE_TAIXE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THAMSODataTable THAMSO {
            get {
                return this.tableTHAMSO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRANG_THAIDataTable TRANG_THAI {
            get {
                return this.tableTRANG_THAI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRONG_TAIDataTable TRONG_TAI {
            get {
                return this.tableTRONG_TAI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public XEDataTable XE {
            get {
                return this.tableXE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Db_QuanLyDoiXeVinamilkDataSet cln = ((Db_QuanLyDoiXeVinamilkDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CAP_NHIEN_LIEU"] != null)) {
                    base.Tables.Add(new CAP_NHIEN_LIEUDataTable(ds.Tables["CAP_NHIEN_LIEU"]));
                }
                if ((ds.Tables["CHITIET_CAPNHIENLIEU"] != null)) {
                    base.Tables.Add(new CHITIET_CAPNHIENLIEUDataTable(ds.Tables["CHITIET_CAPNHIENLIEU"]));
                }
                if ((ds.Tables["CHITIET_HOADON"] != null)) {
                    base.Tables.Add(new CHITIET_HOADONDataTable(ds.Tables["CHITIET_HOADON"]));
                }
                if ((ds.Tables["CHITIETPCXE_TAIXE"] != null)) {
                    base.Tables.Add(new CHITIETPCXE_TAIXEDataTable(ds.Tables["CHITIETPCXE_TAIXE"]));
                }
                if ((ds.Tables["DIA_DIEM"] != null)) {
                    base.Tables.Add(new DIA_DIEMDataTable(ds.Tables["DIA_DIEM"]));
                }
                if ((ds.Tables["HANG_XE"] != null)) {
                    base.Tables.Add(new HANG_XEDataTable(ds.Tables["HANG_XE"]));
                }
                if ((ds.Tables["HOA_DON"] != null)) {
                    base.Tables.Add(new HOA_DONDataTable(ds.Tables["HOA_DON"]));
                }
                if ((ds.Tables["LOAI_DIA_DIEM"] != null)) {
                    base.Tables.Add(new LOAI_DIA_DIEMDataTable(ds.Tables["LOAI_DIA_DIEM"]));
                }
                if ((ds.Tables["LOAI_HANG"] != null)) {
                    base.Tables.Add(new LOAI_HANGDataTable(ds.Tables["LOAI_HANG"]));
                }
                if ((ds.Tables["LOAI_NHAN_VIEN"] != null)) {
                    base.Tables.Add(new LOAI_NHAN_VIENDataTable(ds.Tables["LOAI_NHAN_VIEN"]));
                }
                if ((ds.Tables["MAT_HANG"] != null)) {
                    base.Tables.Add(new MAT_HANGDataTable(ds.Tables["MAT_HANG"]));
                }
                if ((ds.Tables["NHAN_VIEN"] != null)) {
                    base.Tables.Add(new NHAN_VIENDataTable(ds.Tables["NHAN_VIEN"]));
                }
                if ((ds.Tables["PHANCONGXE_TAIXE"] != null)) {
                    base.Tables.Add(new PHANCONGXE_TAIXEDataTable(ds.Tables["PHANCONGXE_TAIXE"]));
                }
                if ((ds.Tables["THAMSO"] != null)) {
                    base.Tables.Add(new THAMSODataTable(ds.Tables["THAMSO"]));
                }
                if ((ds.Tables["TRANG_THAI"] != null)) {
                    base.Tables.Add(new TRANG_THAIDataTable(ds.Tables["TRANG_THAI"]));
                }
                if ((ds.Tables["TRONG_TAI"] != null)) {
                    base.Tables.Add(new TRONG_TAIDataTable(ds.Tables["TRONG_TAI"]));
                }
                if ((ds.Tables["XE"] != null)) {
                    base.Tables.Add(new XEDataTable(ds.Tables["XE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCAP_NHIEN_LIEU = ((CAP_NHIEN_LIEUDataTable)(base.Tables["CAP_NHIEN_LIEU"]));
            if ((initTable == true)) {
                if ((this.tableCAP_NHIEN_LIEU != null)) {
                    this.tableCAP_NHIEN_LIEU.InitVars();
                }
            }
            this.tableCHITIET_CAPNHIENLIEU = ((CHITIET_CAPNHIENLIEUDataTable)(base.Tables["CHITIET_CAPNHIENLIEU"]));
            if ((initTable == true)) {
                if ((this.tableCHITIET_CAPNHIENLIEU != null)) {
                    this.tableCHITIET_CAPNHIENLIEU.InitVars();
                }
            }
            this.tableCHITIET_HOADON = ((CHITIET_HOADONDataTable)(base.Tables["CHITIET_HOADON"]));
            if ((initTable == true)) {
                if ((this.tableCHITIET_HOADON != null)) {
                    this.tableCHITIET_HOADON.InitVars();
                }
            }
            this.tableCHITIETPCXE_TAIXE = ((CHITIETPCXE_TAIXEDataTable)(base.Tables["CHITIETPCXE_TAIXE"]));
            if ((initTable == true)) {
                if ((this.tableCHITIETPCXE_TAIXE != null)) {
                    this.tableCHITIETPCXE_TAIXE.InitVars();
                }
            }
            this.tableDIA_DIEM = ((DIA_DIEMDataTable)(base.Tables["DIA_DIEM"]));
            if ((initTable == true)) {
                if ((this.tableDIA_DIEM != null)) {
                    this.tableDIA_DIEM.InitVars();
                }
            }
            this.tableHANG_XE = ((HANG_XEDataTable)(base.Tables["HANG_XE"]));
            if ((initTable == true)) {
                if ((this.tableHANG_XE != null)) {
                    this.tableHANG_XE.InitVars();
                }
            }
            this.tableHOA_DON = ((HOA_DONDataTable)(base.Tables["HOA_DON"]));
            if ((initTable == true)) {
                if ((this.tableHOA_DON != null)) {
                    this.tableHOA_DON.InitVars();
                }
            }
            this.tableLOAI_DIA_DIEM = ((LOAI_DIA_DIEMDataTable)(base.Tables["LOAI_DIA_DIEM"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_DIA_DIEM != null)) {
                    this.tableLOAI_DIA_DIEM.InitVars();
                }
            }
            this.tableLOAI_HANG = ((LOAI_HANGDataTable)(base.Tables["LOAI_HANG"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_HANG != null)) {
                    this.tableLOAI_HANG.InitVars();
                }
            }
            this.tableLOAI_NHAN_VIEN = ((LOAI_NHAN_VIENDataTable)(base.Tables["LOAI_NHAN_VIEN"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_NHAN_VIEN != null)) {
                    this.tableLOAI_NHAN_VIEN.InitVars();
                }
            }
            this.tableMAT_HANG = ((MAT_HANGDataTable)(base.Tables["MAT_HANG"]));
            if ((initTable == true)) {
                if ((this.tableMAT_HANG != null)) {
                    this.tableMAT_HANG.InitVars();
                }
            }
            this.tableNHAN_VIEN = ((NHAN_VIENDataTable)(base.Tables["NHAN_VIEN"]));
            if ((initTable == true)) {
                if ((this.tableNHAN_VIEN != null)) {
                    this.tableNHAN_VIEN.InitVars();
                }
            }
            this.tablePHANCONGXE_TAIXE = ((PHANCONGXE_TAIXEDataTable)(base.Tables["PHANCONGXE_TAIXE"]));
            if ((initTable == true)) {
                if ((this.tablePHANCONGXE_TAIXE != null)) {
                    this.tablePHANCONGXE_TAIXE.InitVars();
                }
            }
            this.tableTHAMSO = ((THAMSODataTable)(base.Tables["THAMSO"]));
            if ((initTable == true)) {
                if ((this.tableTHAMSO != null)) {
                    this.tableTHAMSO.InitVars();
                }
            }
            this.tableTRANG_THAI = ((TRANG_THAIDataTable)(base.Tables["TRANG_THAI"]));
            if ((initTable == true)) {
                if ((this.tableTRANG_THAI != null)) {
                    this.tableTRANG_THAI.InitVars();
                }
            }
            this.tableTRONG_TAI = ((TRONG_TAIDataTable)(base.Tables["TRONG_TAI"]));
            if ((initTable == true)) {
                if ((this.tableTRONG_TAI != null)) {
                    this.tableTRONG_TAI.InitVars();
                }
            }
            this.tableXE = ((XEDataTable)(base.Tables["XE"]));
            if ((initTable == true)) {
                if ((this.tableXE != null)) {
                    this.tableXE.InitVars();
                }
            }
            this.relationNHAN_VIENCAP_NHIEN_LIEU = this.Relations["NHAN_VIENCAP_NHIEN_LIEU"];
            this.relationXECHITIET_CAPNHIENLIEU = this.Relations["XECHITIET_CAPNHIENLIEU"];
            this.relationDIA_DIEMCHITIET_HOADON = this.Relations["DIA_DIEMCHITIET_HOADON"];
            this.relationHOA_DONCHITIET_HOADON = this.Relations["HOA_DONCHITIET_HOADON"];
            this.relationMAT_HANGCHITIET_HOADON = this.Relations["MAT_HANGCHITIET_HOADON"];
            this.relationTRANG_THAICHITIET_HOADON = this.Relations["TRANG_THAICHITIET_HOADON"];
            this.relationNHAN_VIENCHITIETPCXE_TAIXE = this.Relations["NHAN_VIENCHITIETPCXE_TAIXE"];
            this.relationPHANCONGXE_TAIXECHITIETPCXE_TAIXE = this.Relations["PHANCONGXE_TAIXECHITIETPCXE_TAIXE"];
            this.relationXECHITIETPCXE_TAIXE = this.Relations["XECHITIETPCXE_TAIXE"];
            this.relationLOAI_DIA_DIEMDIA_DIEM = this.Relations["LOAI_DIA_DIEMDIA_DIEM"];
            this.relationXEHOA_DON = this.Relations["XEHOA_DON"];
            this.relationLOAI_HANGMAT_HANG = this.Relations["LOAI_HANGMAT_HANG"];
            this.relationLOAI_NHAN_VIENNHAN_VIEN = this.Relations["LOAI_NHAN_VIENNHAN_VIEN"];
            this.relationHANG_XEXE = this.Relations["HANG_XEXE"];
            this.relationLOAI_HANGXE = this.Relations["LOAI_HANGXE"];
            this.relationNHAN_VIENXE = this.Relations["NHAN_VIENXE"];
            this.relationTRONG_TAIXE = this.Relations["TRONG_TAIXE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Db_QuanLyDoiXeVinamilkDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Db_QuanLyDoiXeVinamilkDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCAP_NHIEN_LIEU = new CAP_NHIEN_LIEUDataTable();
            base.Tables.Add(this.tableCAP_NHIEN_LIEU);
            this.tableCHITIET_CAPNHIENLIEU = new CHITIET_CAPNHIENLIEUDataTable();
            base.Tables.Add(this.tableCHITIET_CAPNHIENLIEU);
            this.tableCHITIET_HOADON = new CHITIET_HOADONDataTable();
            base.Tables.Add(this.tableCHITIET_HOADON);
            this.tableCHITIETPCXE_TAIXE = new CHITIETPCXE_TAIXEDataTable();
            base.Tables.Add(this.tableCHITIETPCXE_TAIXE);
            this.tableDIA_DIEM = new DIA_DIEMDataTable();
            base.Tables.Add(this.tableDIA_DIEM);
            this.tableHANG_XE = new HANG_XEDataTable();
            base.Tables.Add(this.tableHANG_XE);
            this.tableHOA_DON = new HOA_DONDataTable();
            base.Tables.Add(this.tableHOA_DON);
            this.tableLOAI_DIA_DIEM = new LOAI_DIA_DIEMDataTable();
            base.Tables.Add(this.tableLOAI_DIA_DIEM);
            this.tableLOAI_HANG = new LOAI_HANGDataTable();
            base.Tables.Add(this.tableLOAI_HANG);
            this.tableLOAI_NHAN_VIEN = new LOAI_NHAN_VIENDataTable();
            base.Tables.Add(this.tableLOAI_NHAN_VIEN);
            this.tableMAT_HANG = new MAT_HANGDataTable();
            base.Tables.Add(this.tableMAT_HANG);
            this.tableNHAN_VIEN = new NHAN_VIENDataTable();
            base.Tables.Add(this.tableNHAN_VIEN);
            this.tablePHANCONGXE_TAIXE = new PHANCONGXE_TAIXEDataTable();
            base.Tables.Add(this.tablePHANCONGXE_TAIXE);
            this.tableTHAMSO = new THAMSODataTable();
            base.Tables.Add(this.tableTHAMSO);
            this.tableTRANG_THAI = new TRANG_THAIDataTable();
            base.Tables.Add(this.tableTRANG_THAI);
            this.tableTRONG_TAI = new TRONG_TAIDataTable();
            base.Tables.Add(this.tableTRONG_TAI);
            this.tableXE = new XEDataTable();
            base.Tables.Add(this.tableXE);
            this.relationNHAN_VIENCAP_NHIEN_LIEU = new global::System.Data.DataRelation("NHAN_VIENCAP_NHIEN_LIEU", new global::System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MANHANVIENColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAP_NHIEN_LIEU.MANHANVIENCAPColumn}, false);
            this.Relations.Add(this.relationNHAN_VIENCAP_NHIEN_LIEU);
            this.relationXECHITIET_CAPNHIENLIEU = new global::System.Data.DataRelation("XECHITIET_CAPNHIENLIEU", new global::System.Data.DataColumn[] {
                        this.tableXE.BIENSOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIET_CAPNHIENLIEU.BIENSOXEDUOCAPColumn}, false);
            this.Relations.Add(this.relationXECHITIET_CAPNHIENLIEU);
            this.relationDIA_DIEMCHITIET_HOADON = new global::System.Data.DataRelation("DIA_DIEMCHITIET_HOADON", new global::System.Data.DataColumn[] {
                        this.tableDIA_DIEM.MADIADIEMColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIET_HOADON.MADIADIEMColumn}, false);
            this.Relations.Add(this.relationDIA_DIEMCHITIET_HOADON);
            this.relationHOA_DONCHITIET_HOADON = new global::System.Data.DataRelation("HOA_DONCHITIET_HOADON", new global::System.Data.DataColumn[] {
                        this.tableHOA_DON.MAHOADONColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIET_HOADON.MAHOADONColumn}, false);
            this.Relations.Add(this.relationHOA_DONCHITIET_HOADON);
            this.relationMAT_HANGCHITIET_HOADON = new global::System.Data.DataRelation("MAT_HANGCHITIET_HOADON", new global::System.Data.DataColumn[] {
                        this.tableMAT_HANG.MAMATHANGColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIET_HOADON.MAMATHANGColumn}, false);
            this.Relations.Add(this.relationMAT_HANGCHITIET_HOADON);
            this.relationTRANG_THAICHITIET_HOADON = new global::System.Data.DataRelation("TRANG_THAICHITIET_HOADON", new global::System.Data.DataColumn[] {
                        this.tableTRANG_THAI.MATRANGTHAIColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIET_HOADON.MATRANGTHAIColumn}, false);
            this.Relations.Add(this.relationTRANG_THAICHITIET_HOADON);
            this.relationNHAN_VIENCHITIETPCXE_TAIXE = new global::System.Data.DataRelation("NHAN_VIENCHITIETPCXE_TAIXE", new global::System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MANHANVIENColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIETPCXE_TAIXE.MATAIXEColumn}, false);
            this.Relations.Add(this.relationNHAN_VIENCHITIETPCXE_TAIXE);
            this.relationPHANCONGXE_TAIXECHITIETPCXE_TAIXE = new global::System.Data.DataRelation("PHANCONGXE_TAIXECHITIETPCXE_TAIXE", new global::System.Data.DataColumn[] {
                        this.tablePHANCONGXE_TAIXE.MAPHANCONGColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIETPCXE_TAIXE.MAPHANCONGColumn}, false);
            this.Relations.Add(this.relationPHANCONGXE_TAIXECHITIETPCXE_TAIXE);
            this.relationXECHITIETPCXE_TAIXE = new global::System.Data.DataRelation("XECHITIETPCXE_TAIXE", new global::System.Data.DataColumn[] {
                        this.tableXE.BIENSOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIETPCXE_TAIXE.BIENSOXEColumn}, false);
            this.Relations.Add(this.relationXECHITIETPCXE_TAIXE);
            this.relationLOAI_DIA_DIEMDIA_DIEM = new global::System.Data.DataRelation("LOAI_DIA_DIEMDIA_DIEM", new global::System.Data.DataColumn[] {
                        this.tableLOAI_DIA_DIEM.MALOAIColumn}, new global::System.Data.DataColumn[] {
                        this.tableDIA_DIEM.MALOAIColumn}, false);
            this.Relations.Add(this.relationLOAI_DIA_DIEMDIA_DIEM);
            this.relationXEHOA_DON = new global::System.Data.DataRelation("XEHOA_DON", new global::System.Data.DataColumn[] {
                        this.tableXE.BIENSOColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOA_DON.XEGIAOHANGColumn}, false);
            this.Relations.Add(this.relationXEHOA_DON);
            this.relationLOAI_HANGMAT_HANG = new global::System.Data.DataRelation("LOAI_HANGMAT_HANG", new global::System.Data.DataColumn[] {
                        this.tableLOAI_HANG.MALOAIColumn}, new global::System.Data.DataColumn[] {
                        this.tableMAT_HANG.MALOAIColumn}, false);
            this.Relations.Add(this.relationLOAI_HANGMAT_HANG);
            this.relationLOAI_NHAN_VIENNHAN_VIEN = new global::System.Data.DataRelation("LOAI_NHAN_VIENNHAN_VIEN", new global::System.Data.DataColumn[] {
                        this.tableLOAI_NHAN_VIEN.MaColumn}, new global::System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MaLoaiNhanVienColumn}, false);
            this.Relations.Add(this.relationLOAI_NHAN_VIENNHAN_VIEN);
            this.relationHANG_XEXE = new global::System.Data.DataRelation("HANG_XEXE", new global::System.Data.DataColumn[] {
                        this.tableHANG_XE.MAHANGColumn}, new global::System.Data.DataColumn[] {
                        this.tableXE.MAHANGXEColumn}, false);
            this.Relations.Add(this.relationHANG_XEXE);
            this.relationLOAI_HANGXE = new global::System.Data.DataRelation("LOAI_HANGXE", new global::System.Data.DataColumn[] {
                        this.tableLOAI_HANG.MALOAIColumn}, new global::System.Data.DataColumn[] {
                        this.tableXE.MALOAIHANGColumn}, false);
            this.Relations.Add(this.relationLOAI_HANGXE);
            this.relationNHAN_VIENXE = new global::System.Data.DataRelation("NHAN_VIENXE", new global::System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MANHANVIENColumn}, new global::System.Data.DataColumn[] {
                        this.tableXE.MANHANVIENTIEPNHANColumn}, false);
            this.Relations.Add(this.relationNHAN_VIENXE);
            this.relationTRONG_TAIXE = new global::System.Data.DataRelation("TRONG_TAIXE", new global::System.Data.DataColumn[] {
                        this.tableTRONG_TAI.MATRONGTAIColumn}, new global::System.Data.DataColumn[] {
                        this.tableXE.MATRONGTAIColumn}, false);
            this.Relations.Add(this.relationTRONG_TAIXE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCAP_NHIEN_LIEU() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHITIET_CAPNHIENLIEU() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHITIET_HOADON() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHITIETPCXE_TAIXE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDIA_DIEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHANG_XE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHOA_DON() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_DIA_DIEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_HANG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_NHAN_VIEN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMAT_HANG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNHAN_VIEN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHANCONGXE_TAIXE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTHAMSO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRANG_THAI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRONG_TAI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeXE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CAP_NHIEN_LIEURowChangeEventHandler(object sender, CAP_NHIEN_LIEURowChangeEvent e);
        
        public delegate void CHITIET_CAPNHIENLIEURowChangeEventHandler(object sender, CHITIET_CAPNHIENLIEURowChangeEvent e);
        
        public delegate void CHITIET_HOADONRowChangeEventHandler(object sender, CHITIET_HOADONRowChangeEvent e);
        
        public delegate void CHITIETPCXE_TAIXERowChangeEventHandler(object sender, CHITIETPCXE_TAIXERowChangeEvent e);
        
        public delegate void DIA_DIEMRowChangeEventHandler(object sender, DIA_DIEMRowChangeEvent e);
        
        public delegate void HANG_XERowChangeEventHandler(object sender, HANG_XERowChangeEvent e);
        
        public delegate void HOA_DONRowChangeEventHandler(object sender, HOA_DONRowChangeEvent e);
        
        public delegate void LOAI_DIA_DIEMRowChangeEventHandler(object sender, LOAI_DIA_DIEMRowChangeEvent e);
        
        public delegate void LOAI_HANGRowChangeEventHandler(object sender, LOAI_HANGRowChangeEvent e);
        
        public delegate void LOAI_NHAN_VIENRowChangeEventHandler(object sender, LOAI_NHAN_VIENRowChangeEvent e);
        
        public delegate void MAT_HANGRowChangeEventHandler(object sender, MAT_HANGRowChangeEvent e);
        
        public delegate void NHAN_VIENRowChangeEventHandler(object sender, NHAN_VIENRowChangeEvent e);
        
        public delegate void PHANCONGXE_TAIXERowChangeEventHandler(object sender, PHANCONGXE_TAIXERowChangeEvent e);
        
        public delegate void THAMSORowChangeEventHandler(object sender, THAMSORowChangeEvent e);
        
        public delegate void TRANG_THAIRowChangeEventHandler(object sender, TRANG_THAIRowChangeEvent e);
        
        public delegate void TRONG_TAIRowChangeEventHandler(object sender, TRONG_TAIRowChangeEvent e);
        
        public delegate void XERowChangeEventHandler(object sender, XERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAP_NHIEN_LIEUDataTable : global::System.Data.TypedTableBase<CAP_NHIEN_LIEURow> {
            
            private global::System.Data.DataColumn columnMA;
            
            private global::System.Data.DataColumn columnNGAYCAP;
            
            private global::System.Data.DataColumn columnMANHANVIENCAP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEUDataTable() {
                this.TableName = "CAP_NHIEN_LIEU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAP_NHIEN_LIEUDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CAP_NHIEN_LIEUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAColumn {
                get {
                    return this.columnMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCAPColumn {
                get {
                    return this.columnNGAYCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANHANVIENCAPColumn {
                get {
                    return this.columnMANHANVIENCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURow this[int index] {
                get {
                    return ((CAP_NHIEN_LIEURow)(this.Rows[index]));
                }
            }
            
            public event CAP_NHIEN_LIEURowChangeEventHandler CAP_NHIEN_LIEURowChanging;
            
            public event CAP_NHIEN_LIEURowChangeEventHandler CAP_NHIEN_LIEURowChanged;
            
            public event CAP_NHIEN_LIEURowChangeEventHandler CAP_NHIEN_LIEURowDeleting;
            
            public event CAP_NHIEN_LIEURowChangeEventHandler CAP_NHIEN_LIEURowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCAP_NHIEN_LIEURow(CAP_NHIEN_LIEURow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURow AddCAP_NHIEN_LIEURow(System.DateTime NGAYCAP, NHAN_VIENRow parentNHAN_VIENRowByNHAN_VIENCAP_NHIEN_LIEU) {
                CAP_NHIEN_LIEURow rowCAP_NHIEN_LIEURow = ((CAP_NHIEN_LIEURow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NGAYCAP,
                        null};
                if ((parentNHAN_VIENRowByNHAN_VIENCAP_NHIEN_LIEU != null)) {
                    columnValuesArray[2] = parentNHAN_VIENRowByNHAN_VIENCAP_NHIEN_LIEU[0];
                }
                rowCAP_NHIEN_LIEURow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAP_NHIEN_LIEURow);
                return rowCAP_NHIEN_LIEURow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURow FindByMA(int MA) {
                return ((CAP_NHIEN_LIEURow)(this.Rows.Find(new object[] {
                            MA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CAP_NHIEN_LIEUDataTable cln = ((CAP_NHIEN_LIEUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAP_NHIEN_LIEUDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA = base.Columns["MA"];
                this.columnNGAYCAP = base.Columns["NGAYCAP"];
                this.columnMANHANVIENCAP = base.Columns["MANHANVIENCAP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA = new global::System.Data.DataColumn("MA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA);
                this.columnNGAYCAP = new global::System.Data.DataColumn("NGAYCAP", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCAP);
                this.columnMANHANVIENCAP = new global::System.Data.DataColumn("MANHANVIENCAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANHANVIENCAP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA}, true));
                this.columnMA.AutoIncrement = true;
                this.columnMA.AutoIncrementSeed = -1;
                this.columnMA.AutoIncrementStep = -1;
                this.columnMA.AllowDBNull = false;
                this.columnMA.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURow NewCAP_NHIEN_LIEURow() {
                return ((CAP_NHIEN_LIEURow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAP_NHIEN_LIEURow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CAP_NHIEN_LIEURow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAP_NHIEN_LIEURowChanged != null)) {
                    this.CAP_NHIEN_LIEURowChanged(this, new CAP_NHIEN_LIEURowChangeEvent(((CAP_NHIEN_LIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAP_NHIEN_LIEURowChanging != null)) {
                    this.CAP_NHIEN_LIEURowChanging(this, new CAP_NHIEN_LIEURowChangeEvent(((CAP_NHIEN_LIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAP_NHIEN_LIEURowDeleted != null)) {
                    this.CAP_NHIEN_LIEURowDeleted(this, new CAP_NHIEN_LIEURowChangeEvent(((CAP_NHIEN_LIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAP_NHIEN_LIEURowDeleting != null)) {
                    this.CAP_NHIEN_LIEURowDeleting(this, new CAP_NHIEN_LIEURowChangeEvent(((CAP_NHIEN_LIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCAP_NHIEN_LIEURow(CAP_NHIEN_LIEURow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAP_NHIEN_LIEUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHITIET_CAPNHIENLIEUDataTable : global::System.Data.TypedTableBase<CHITIET_CAPNHIENLIEURow> {
            
            private global::System.Data.DataColumn columnMACHITIET;
            
            private global::System.Data.DataColumn columnMACAPNHIENLIEU;
            
            private global::System.Data.DataColumn columnBIENSOXEDUOCAP;
            
            private global::System.Data.DataColumn columnCHISOCU;
            
            private global::System.Data.DataColumn columnSOLITCAP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEUDataTable() {
                this.TableName = "CHITIET_CAPNHIENLIEU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIET_CAPNHIENLIEUDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHITIET_CAPNHIENLIEUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACHITIETColumn {
                get {
                    return this.columnMACHITIET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACAPNHIENLIEUColumn {
                get {
                    return this.columnMACAPNHIENLIEU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIENSOXEDUOCAPColumn {
                get {
                    return this.columnBIENSOXEDUOCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHISOCUColumn {
                get {
                    return this.columnCHISOCU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLITCAPColumn {
                get {
                    return this.columnSOLITCAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURow this[int index] {
                get {
                    return ((CHITIET_CAPNHIENLIEURow)(this.Rows[index]));
                }
            }
            
            public event CHITIET_CAPNHIENLIEURowChangeEventHandler CHITIET_CAPNHIENLIEURowChanging;
            
            public event CHITIET_CAPNHIENLIEURowChangeEventHandler CHITIET_CAPNHIENLIEURowChanged;
            
            public event CHITIET_CAPNHIENLIEURowChangeEventHandler CHITIET_CAPNHIENLIEURowDeleting;
            
            public event CHITIET_CAPNHIENLIEURowChangeEventHandler CHITIET_CAPNHIENLIEURowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHITIET_CAPNHIENLIEURow(CHITIET_CAPNHIENLIEURow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURow AddCHITIET_CAPNHIENLIEURow(string MACAPNHIENLIEU, XERow parentXERowByXECHITIET_CAPNHIENLIEU, int CHISOCU, int SOLITCAP) {
                CHITIET_CAPNHIENLIEURow rowCHITIET_CAPNHIENLIEURow = ((CHITIET_CAPNHIENLIEURow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MACAPNHIENLIEU,
                        null,
                        CHISOCU,
                        SOLITCAP};
                if ((parentXERowByXECHITIET_CAPNHIENLIEU != null)) {
                    columnValuesArray[2] = parentXERowByXECHITIET_CAPNHIENLIEU[0];
                }
                rowCHITIET_CAPNHIENLIEURow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHITIET_CAPNHIENLIEURow);
                return rowCHITIET_CAPNHIENLIEURow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURow FindByMACHITIET(int MACHITIET) {
                return ((CHITIET_CAPNHIENLIEURow)(this.Rows.Find(new object[] {
                            MACHITIET})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CHITIET_CAPNHIENLIEUDataTable cln = ((CHITIET_CAPNHIENLIEUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHITIET_CAPNHIENLIEUDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMACHITIET = base.Columns["MACHITIET"];
                this.columnMACAPNHIENLIEU = base.Columns["MACAPNHIENLIEU"];
                this.columnBIENSOXEDUOCAP = base.Columns["BIENSOXEDUOCAP"];
                this.columnCHISOCU = base.Columns["CHISOCU"];
                this.columnSOLITCAP = base.Columns["SOLITCAP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMACHITIET = new global::System.Data.DataColumn("MACHITIET", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACHITIET);
                this.columnMACAPNHIENLIEU = new global::System.Data.DataColumn("MACAPNHIENLIEU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACAPNHIENLIEU);
                this.columnBIENSOXEDUOCAP = new global::System.Data.DataColumn("BIENSOXEDUOCAP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIENSOXEDUOCAP);
                this.columnCHISOCU = new global::System.Data.DataColumn("CHISOCU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHISOCU);
                this.columnSOLITCAP = new global::System.Data.DataColumn("SOLITCAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLITCAP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMACHITIET}, true));
                this.columnMACHITIET.AutoIncrement = true;
                this.columnMACHITIET.AutoIncrementSeed = -1;
                this.columnMACHITIET.AutoIncrementStep = -1;
                this.columnMACHITIET.AllowDBNull = false;
                this.columnMACHITIET.Unique = true;
                this.columnMACAPNHIENLIEU.MaxLength = 255;
                this.columnBIENSOXEDUOCAP.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURow NewCHITIET_CAPNHIENLIEURow() {
                return ((CHITIET_CAPNHIENLIEURow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHITIET_CAPNHIENLIEURow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CHITIET_CAPNHIENLIEURow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHITIET_CAPNHIENLIEURowChanged != null)) {
                    this.CHITIET_CAPNHIENLIEURowChanged(this, new CHITIET_CAPNHIENLIEURowChangeEvent(((CHITIET_CAPNHIENLIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHITIET_CAPNHIENLIEURowChanging != null)) {
                    this.CHITIET_CAPNHIENLIEURowChanging(this, new CHITIET_CAPNHIENLIEURowChangeEvent(((CHITIET_CAPNHIENLIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHITIET_CAPNHIENLIEURowDeleted != null)) {
                    this.CHITIET_CAPNHIENLIEURowDeleted(this, new CHITIET_CAPNHIENLIEURowChangeEvent(((CHITIET_CAPNHIENLIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHITIET_CAPNHIENLIEURowDeleting != null)) {
                    this.CHITIET_CAPNHIENLIEURowDeleting(this, new CHITIET_CAPNHIENLIEURowChangeEvent(((CHITIET_CAPNHIENLIEURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHITIET_CAPNHIENLIEURow(CHITIET_CAPNHIENLIEURow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHITIET_CAPNHIENLIEUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHITIET_HOADONDataTable : global::System.Data.TypedTableBase<CHITIET_HOADONRow> {
            
            private global::System.Data.DataColumn columnMACHITIET;
            
            private global::System.Data.DataColumn columnMAHOADON;
            
            private global::System.Data.DataColumn columnMADIADIEM;
            
            private global::System.Data.DataColumn columnMAMATHANG;
            
            private global::System.Data.DataColumn columnSOLUONG;
            
            private global::System.Data.DataColumn columnMATRANGTHAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONDataTable() {
                this.TableName = "CHITIET_HOADON";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIET_HOADONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHITIET_HOADONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MACHITIETColumn {
                get {
                    return this.columnMACHITIET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHOADONColumn {
                get {
                    return this.columnMAHOADON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADIADIEMColumn {
                get {
                    return this.columnMADIADIEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAMATHANGColumn {
                get {
                    return this.columnMAMATHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLUONGColumn {
                get {
                    return this.columnSOLUONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATRANGTHAIColumn {
                get {
                    return this.columnMATRANGTHAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow this[int index] {
                get {
                    return ((CHITIET_HOADONRow)(this.Rows[index]));
                }
            }
            
            public event CHITIET_HOADONRowChangeEventHandler CHITIET_HOADONRowChanging;
            
            public event CHITIET_HOADONRowChangeEventHandler CHITIET_HOADONRowChanged;
            
            public event CHITIET_HOADONRowChangeEventHandler CHITIET_HOADONRowDeleting;
            
            public event CHITIET_HOADONRowChangeEventHandler CHITIET_HOADONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHITIET_HOADONRow(CHITIET_HOADONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow AddCHITIET_HOADONRow(HOA_DONRow parentHOA_DONRowByHOA_DONCHITIET_HOADON, DIA_DIEMRow parentDIA_DIEMRowByDIA_DIEMCHITIET_HOADON, MAT_HANGRow parentMAT_HANGRowByMAT_HANGCHITIET_HOADON, int SOLUONG, TRANG_THAIRow parentTRANG_THAIRowByTRANG_THAICHITIET_HOADON) {
                CHITIET_HOADONRow rowCHITIET_HOADONRow = ((CHITIET_HOADONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        SOLUONG,
                        null};
                if ((parentHOA_DONRowByHOA_DONCHITIET_HOADON != null)) {
                    columnValuesArray[1] = parentHOA_DONRowByHOA_DONCHITIET_HOADON[0];
                }
                if ((parentDIA_DIEMRowByDIA_DIEMCHITIET_HOADON != null)) {
                    columnValuesArray[2] = parentDIA_DIEMRowByDIA_DIEMCHITIET_HOADON[0];
                }
                if ((parentMAT_HANGRowByMAT_HANGCHITIET_HOADON != null)) {
                    columnValuesArray[3] = parentMAT_HANGRowByMAT_HANGCHITIET_HOADON[0];
                }
                if ((parentTRANG_THAIRowByTRANG_THAICHITIET_HOADON != null)) {
                    columnValuesArray[5] = parentTRANG_THAIRowByTRANG_THAICHITIET_HOADON[0];
                }
                rowCHITIET_HOADONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHITIET_HOADONRow);
                return rowCHITIET_HOADONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow FindByMACHITIET(int MACHITIET) {
                return ((CHITIET_HOADONRow)(this.Rows.Find(new object[] {
                            MACHITIET})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CHITIET_HOADONDataTable cln = ((CHITIET_HOADONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHITIET_HOADONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMACHITIET = base.Columns["MACHITIET"];
                this.columnMAHOADON = base.Columns["MAHOADON"];
                this.columnMADIADIEM = base.Columns["MADIADIEM"];
                this.columnMAMATHANG = base.Columns["MAMATHANG"];
                this.columnSOLUONG = base.Columns["SOLUONG"];
                this.columnMATRANGTHAI = base.Columns["MATRANGTHAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMACHITIET = new global::System.Data.DataColumn("MACHITIET", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACHITIET);
                this.columnMAHOADON = new global::System.Data.DataColumn("MAHOADON", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHOADON);
                this.columnMADIADIEM = new global::System.Data.DataColumn("MADIADIEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADIADIEM);
                this.columnMAMATHANG = new global::System.Data.DataColumn("MAMATHANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAMATHANG);
                this.columnSOLUONG = new global::System.Data.DataColumn("SOLUONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLUONG);
                this.columnMATRANGTHAI = new global::System.Data.DataColumn("MATRANGTHAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATRANGTHAI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMACHITIET}, true));
                this.columnMACHITIET.AutoIncrement = true;
                this.columnMACHITIET.AutoIncrementSeed = -1;
                this.columnMACHITIET.AutoIncrementStep = -1;
                this.columnMACHITIET.AllowDBNull = false;
                this.columnMACHITIET.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow NewCHITIET_HOADONRow() {
                return ((CHITIET_HOADONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHITIET_HOADONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CHITIET_HOADONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHITIET_HOADONRowChanged != null)) {
                    this.CHITIET_HOADONRowChanged(this, new CHITIET_HOADONRowChangeEvent(((CHITIET_HOADONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHITIET_HOADONRowChanging != null)) {
                    this.CHITIET_HOADONRowChanging(this, new CHITIET_HOADONRowChangeEvent(((CHITIET_HOADONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHITIET_HOADONRowDeleted != null)) {
                    this.CHITIET_HOADONRowDeleted(this, new CHITIET_HOADONRowChangeEvent(((CHITIET_HOADONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHITIET_HOADONRowDeleting != null)) {
                    this.CHITIET_HOADONRowDeleting(this, new CHITIET_HOADONRowChangeEvent(((CHITIET_HOADONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHITIET_HOADONRow(CHITIET_HOADONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHITIET_HOADONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHITIETPCXE_TAIXEDataTable : global::System.Data.TypedTableBase<CHITIETPCXE_TAIXERow> {
            
            private global::System.Data.DataColumn columnMA;
            
            private global::System.Data.DataColumn columnMAPHANCONG;
            
            private global::System.Data.DataColumn columnBIENSOXE;
            
            private global::System.Data.DataColumn columnMATAIXE;
            
            private global::System.Data.DataColumn columnTHOIGIANBATDAU;
            
            private global::System.Data.DataColumn columnTHOIGIANKETTHUC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXEDataTable() {
                this.TableName = "CHITIETPCXE_TAIXE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIETPCXE_TAIXEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHITIETPCXE_TAIXEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAColumn {
                get {
                    return this.columnMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAPHANCONGColumn {
                get {
                    return this.columnMAPHANCONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIENSOXEColumn {
                get {
                    return this.columnBIENSOXE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATAIXEColumn {
                get {
                    return this.columnMATAIXE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THOIGIANBATDAUColumn {
                get {
                    return this.columnTHOIGIANBATDAU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THOIGIANKETTHUCColumn {
                get {
                    return this.columnTHOIGIANKETTHUC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow this[int index] {
                get {
                    return ((CHITIETPCXE_TAIXERow)(this.Rows[index]));
                }
            }
            
            public event CHITIETPCXE_TAIXERowChangeEventHandler CHITIETPCXE_TAIXERowChanging;
            
            public event CHITIETPCXE_TAIXERowChangeEventHandler CHITIETPCXE_TAIXERowChanged;
            
            public event CHITIETPCXE_TAIXERowChangeEventHandler CHITIETPCXE_TAIXERowDeleting;
            
            public event CHITIETPCXE_TAIXERowChangeEventHandler CHITIETPCXE_TAIXERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHITIETPCXE_TAIXERow(CHITIETPCXE_TAIXERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow AddCHITIETPCXE_TAIXERow(PHANCONGXE_TAIXERow parentPHANCONGXE_TAIXERowByPHANCONGXE_TAIXECHITIETPCXE_TAIXE, XERow parentXERowByXECHITIETPCXE_TAIXE, NHAN_VIENRow parentNHAN_VIENRowByNHAN_VIENCHITIETPCXE_TAIXE, string THOIGIANBATDAU, string THOIGIANKETTHUC) {
                CHITIETPCXE_TAIXERow rowCHITIETPCXE_TAIXERow = ((CHITIETPCXE_TAIXERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        THOIGIANBATDAU,
                        THOIGIANKETTHUC};
                if ((parentPHANCONGXE_TAIXERowByPHANCONGXE_TAIXECHITIETPCXE_TAIXE != null)) {
                    columnValuesArray[1] = parentPHANCONGXE_TAIXERowByPHANCONGXE_TAIXECHITIETPCXE_TAIXE[0];
                }
                if ((parentXERowByXECHITIETPCXE_TAIXE != null)) {
                    columnValuesArray[2] = parentXERowByXECHITIETPCXE_TAIXE[0];
                }
                if ((parentNHAN_VIENRowByNHAN_VIENCHITIETPCXE_TAIXE != null)) {
                    columnValuesArray[3] = parentNHAN_VIENRowByNHAN_VIENCHITIETPCXE_TAIXE[0];
                }
                rowCHITIETPCXE_TAIXERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHITIETPCXE_TAIXERow);
                return rowCHITIETPCXE_TAIXERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow FindByMA(int MA) {
                return ((CHITIETPCXE_TAIXERow)(this.Rows.Find(new object[] {
                            MA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CHITIETPCXE_TAIXEDataTable cln = ((CHITIETPCXE_TAIXEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHITIETPCXE_TAIXEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA = base.Columns["MA"];
                this.columnMAPHANCONG = base.Columns["MAPHANCONG"];
                this.columnBIENSOXE = base.Columns["BIENSOXE"];
                this.columnMATAIXE = base.Columns["MATAIXE"];
                this.columnTHOIGIANBATDAU = base.Columns["THOIGIANBATDAU"];
                this.columnTHOIGIANKETTHUC = base.Columns["THOIGIANKETTHUC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA = new global::System.Data.DataColumn("MA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA);
                this.columnMAPHANCONG = new global::System.Data.DataColumn("MAPHANCONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAPHANCONG);
                this.columnBIENSOXE = new global::System.Data.DataColumn("BIENSOXE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIENSOXE);
                this.columnMATAIXE = new global::System.Data.DataColumn("MATAIXE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATAIXE);
                this.columnTHOIGIANBATDAU = new global::System.Data.DataColumn("THOIGIANBATDAU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHOIGIANBATDAU);
                this.columnTHOIGIANKETTHUC = new global::System.Data.DataColumn("THOIGIANKETTHUC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHOIGIANKETTHUC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA}, true));
                this.columnMA.AutoIncrement = true;
                this.columnMA.AutoIncrementSeed = -1;
                this.columnMA.AutoIncrementStep = -1;
                this.columnMA.AllowDBNull = false;
                this.columnMA.Unique = true;
                this.columnBIENSOXE.MaxLength = 255;
                this.columnTHOIGIANBATDAU.MaxLength = 255;
                this.columnTHOIGIANKETTHUC.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow NewCHITIETPCXE_TAIXERow() {
                return ((CHITIETPCXE_TAIXERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHITIETPCXE_TAIXERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CHITIETPCXE_TAIXERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHITIETPCXE_TAIXERowChanged != null)) {
                    this.CHITIETPCXE_TAIXERowChanged(this, new CHITIETPCXE_TAIXERowChangeEvent(((CHITIETPCXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHITIETPCXE_TAIXERowChanging != null)) {
                    this.CHITIETPCXE_TAIXERowChanging(this, new CHITIETPCXE_TAIXERowChangeEvent(((CHITIETPCXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHITIETPCXE_TAIXERowDeleted != null)) {
                    this.CHITIETPCXE_TAIXERowDeleted(this, new CHITIETPCXE_TAIXERowChangeEvent(((CHITIETPCXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHITIETPCXE_TAIXERowDeleting != null)) {
                    this.CHITIETPCXE_TAIXERowDeleting(this, new CHITIETPCXE_TAIXERowChangeEvent(((CHITIETPCXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHITIETPCXE_TAIXERow(CHITIETPCXE_TAIXERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHITIETPCXE_TAIXEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DIA_DIEMDataTable : global::System.Data.TypedTableBase<DIA_DIEMRow> {
            
            private global::System.Data.DataColumn columnMADIADIEM;
            
            private global::System.Data.DataColumn columnTENDIADIEM;
            
            private global::System.Data.DataColumn columnDIACHI;
            
            private global::System.Data.DataColumn columnTOADO;
            
            private global::System.Data.DataColumn columnMALOAI;
            
            private global::System.Data.DataColumn columnSODIENTHOAI;
            
            private global::System.Data.DataColumn columnNGUOILIENHE;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMDataTable() {
                this.TableName = "DIA_DIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DIA_DIEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DIA_DIEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADIADIEMColumn {
                get {
                    return this.columnMADIADIEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENDIADIEMColumn {
                get {
                    return this.columnTENDIADIEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIACHIColumn {
                get {
                    return this.columnDIACHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOADOColumn {
                get {
                    return this.columnTOADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIColumn {
                get {
                    return this.columnMALOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SODIENTHOAIColumn {
                get {
                    return this.columnSODIENTHOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGUOILIENHEColumn {
                get {
                    return this.columnNGUOILIENHE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow this[int index] {
                get {
                    return ((DIA_DIEMRow)(this.Rows[index]));
                }
            }
            
            public event DIA_DIEMRowChangeEventHandler DIA_DIEMRowChanging;
            
            public event DIA_DIEMRowChangeEventHandler DIA_DIEMRowChanged;
            
            public event DIA_DIEMRowChangeEventHandler DIA_DIEMRowDeleting;
            
            public event DIA_DIEMRowChangeEventHandler DIA_DIEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDIA_DIEMRow(DIA_DIEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow AddDIA_DIEMRow(string TENDIADIEM, string DIACHI, string TOADO, LOAI_DIA_DIEMRow parentLOAI_DIA_DIEMRowByLOAI_DIA_DIEMDIA_DIEM, int SODIENTHOAI, string NGUOILIENHE, string EMAIL) {
                DIA_DIEMRow rowDIA_DIEMRow = ((DIA_DIEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENDIADIEM,
                        DIACHI,
                        TOADO,
                        null,
                        SODIENTHOAI,
                        NGUOILIENHE,
                        EMAIL};
                if ((parentLOAI_DIA_DIEMRowByLOAI_DIA_DIEMDIA_DIEM != null)) {
                    columnValuesArray[4] = parentLOAI_DIA_DIEMRowByLOAI_DIA_DIEMDIA_DIEM[0];
                }
                rowDIA_DIEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDIA_DIEMRow);
                return rowDIA_DIEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow FindByMADIADIEM(int MADIADIEM) {
                return ((DIA_DIEMRow)(this.Rows.Find(new object[] {
                            MADIADIEM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DIA_DIEMDataTable cln = ((DIA_DIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DIA_DIEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADIADIEM = base.Columns["MADIADIEM"];
                this.columnTENDIADIEM = base.Columns["TENDIADIEM"];
                this.columnDIACHI = base.Columns["DIACHI"];
                this.columnTOADO = base.Columns["TOADO"];
                this.columnMALOAI = base.Columns["MALOAI"];
                this.columnSODIENTHOAI = base.Columns["SODIENTHOAI"];
                this.columnNGUOILIENHE = base.Columns["NGUOILIENHE"];
                this.columnEMAIL = base.Columns["EMAIL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADIADIEM = new global::System.Data.DataColumn("MADIADIEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADIADIEM);
                this.columnTENDIADIEM = new global::System.Data.DataColumn("TENDIADIEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENDIADIEM);
                this.columnDIACHI = new global::System.Data.DataColumn("DIACHI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIACHI);
                this.columnTOADO = new global::System.Data.DataColumn("TOADO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOADO);
                this.columnMALOAI = new global::System.Data.DataColumn("MALOAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAI);
                this.columnSODIENTHOAI = new global::System.Data.DataColumn("SODIENTHOAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSODIENTHOAI);
                this.columnNGUOILIENHE = new global::System.Data.DataColumn("NGUOILIENHE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGUOILIENHE);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMADIADIEM}, true));
                this.columnMADIADIEM.AutoIncrement = true;
                this.columnMADIADIEM.AutoIncrementSeed = -1;
                this.columnMADIADIEM.AutoIncrementStep = -1;
                this.columnMADIADIEM.AllowDBNull = false;
                this.columnMADIADIEM.Unique = true;
                this.columnTENDIADIEM.MaxLength = 50;
                this.columnDIACHI.MaxLength = 255;
                this.columnTOADO.MaxLength = 255;
                this.columnNGUOILIENHE.MaxLength = 255;
                this.columnEMAIL.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow NewDIA_DIEMRow() {
                return ((DIA_DIEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DIA_DIEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DIA_DIEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DIA_DIEMRowChanged != null)) {
                    this.DIA_DIEMRowChanged(this, new DIA_DIEMRowChangeEvent(((DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DIA_DIEMRowChanging != null)) {
                    this.DIA_DIEMRowChanging(this, new DIA_DIEMRowChangeEvent(((DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DIA_DIEMRowDeleted != null)) {
                    this.DIA_DIEMRowDeleted(this, new DIA_DIEMRowChangeEvent(((DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DIA_DIEMRowDeleting != null)) {
                    this.DIA_DIEMRowDeleting(this, new DIA_DIEMRowChangeEvent(((DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDIA_DIEMRow(DIA_DIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DIA_DIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HANG_XEDataTable : global::System.Data.TypedTableBase<HANG_XERow> {
            
            private global::System.Data.DataColumn columnMAHANG;
            
            private global::System.Data.DataColumn columnTENHANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XEDataTable() {
                this.TableName = "HANG_XE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANG_XEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HANG_XEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHANGColumn {
                get {
                    return this.columnMAHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENHANGColumn {
                get {
                    return this.columnTENHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERow this[int index] {
                get {
                    return ((HANG_XERow)(this.Rows[index]));
                }
            }
            
            public event HANG_XERowChangeEventHandler HANG_XERowChanging;
            
            public event HANG_XERowChangeEventHandler HANG_XERowChanged;
            
            public event HANG_XERowChangeEventHandler HANG_XERowDeleting;
            
            public event HANG_XERowChangeEventHandler HANG_XERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHANG_XERow(HANG_XERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERow AddHANG_XERow(string TENHANG) {
                HANG_XERow rowHANG_XERow = ((HANG_XERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENHANG};
                rowHANG_XERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHANG_XERow);
                return rowHANG_XERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERow FindByMAHANG(int MAHANG) {
                return ((HANG_XERow)(this.Rows.Find(new object[] {
                            MAHANG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HANG_XEDataTable cln = ((HANG_XEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HANG_XEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAHANG = base.Columns["MAHANG"];
                this.columnTENHANG = base.Columns["TENHANG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAHANG = new global::System.Data.DataColumn("MAHANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHANG);
                this.columnTENHANG = new global::System.Data.DataColumn("TENHANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENHANG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAHANG}, true));
                this.columnMAHANG.AutoIncrement = true;
                this.columnMAHANG.AutoIncrementSeed = -1;
                this.columnMAHANG.AutoIncrementStep = -1;
                this.columnMAHANG.AllowDBNull = false;
                this.columnMAHANG.Unique = true;
                this.columnTENHANG.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERow NewHANG_XERow() {
                return ((HANG_XERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HANG_XERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HANG_XERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HANG_XERowChanged != null)) {
                    this.HANG_XERowChanged(this, new HANG_XERowChangeEvent(((HANG_XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HANG_XERowChanging != null)) {
                    this.HANG_XERowChanging(this, new HANG_XERowChangeEvent(((HANG_XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HANG_XERowDeleted != null)) {
                    this.HANG_XERowDeleted(this, new HANG_XERowChangeEvent(((HANG_XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HANG_XERowDeleting != null)) {
                    this.HANG_XERowDeleting(this, new HANG_XERowChangeEvent(((HANG_XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHANG_XERow(HANG_XERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HANG_XEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HOA_DONDataTable : global::System.Data.TypedTableBase<HOA_DONRow> {
            
            private global::System.Data.DataColumn columnMAHOADON;
            
            private global::System.Data.DataColumn columnNGAYGIAOHANG;
            
            private global::System.Data.DataColumn columnNGAYLAP;
            
            private global::System.Data.DataColumn columnXEGIAOHANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONDataTable() {
                this.TableName = "HOA_DON";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOA_DONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HOA_DONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHOADONColumn {
                get {
                    return this.columnMAHOADON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYGIAOHANGColumn {
                get {
                    return this.columnNGAYGIAOHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYLAPColumn {
                get {
                    return this.columnNGAYLAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XEGIAOHANGColumn {
                get {
                    return this.columnXEGIAOHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow this[int index] {
                get {
                    return ((HOA_DONRow)(this.Rows[index]));
                }
            }
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowChanging;
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowChanged;
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowDeleting;
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHOA_DONRow(HOA_DONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow AddHOA_DONRow(System.DateTime NGAYGIAOHANG, System.DateTime NGAYLAP, XERow parentXERowByXEHOA_DON) {
                HOA_DONRow rowHOA_DONRow = ((HOA_DONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NGAYGIAOHANG,
                        NGAYLAP,
                        null};
                if ((parentXERowByXEHOA_DON != null)) {
                    columnValuesArray[3] = parentXERowByXEHOA_DON[0];
                }
                rowHOA_DONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHOA_DONRow);
                return rowHOA_DONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow FindByMAHOADON(int MAHOADON) {
                return ((HOA_DONRow)(this.Rows.Find(new object[] {
                            MAHOADON})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HOA_DONDataTable cln = ((HOA_DONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HOA_DONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAHOADON = base.Columns["MAHOADON"];
                this.columnNGAYGIAOHANG = base.Columns["NGAYGIAOHANG"];
                this.columnNGAYLAP = base.Columns["NGAYLAP"];
                this.columnXEGIAOHANG = base.Columns["XEGIAOHANG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAHOADON = new global::System.Data.DataColumn("MAHOADON", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHOADON);
                this.columnNGAYGIAOHANG = new global::System.Data.DataColumn("NGAYGIAOHANG", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYGIAOHANG);
                this.columnNGAYLAP = new global::System.Data.DataColumn("NGAYLAP", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYLAP);
                this.columnXEGIAOHANG = new global::System.Data.DataColumn("XEGIAOHANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXEGIAOHANG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAHOADON}, true));
                this.columnMAHOADON.AutoIncrement = true;
                this.columnMAHOADON.AutoIncrementSeed = -1;
                this.columnMAHOADON.AutoIncrementStep = -1;
                this.columnMAHOADON.AllowDBNull = false;
                this.columnMAHOADON.Unique = true;
                this.columnXEGIAOHANG.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow NewHOA_DONRow() {
                return ((HOA_DONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HOA_DONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HOA_DONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HOA_DONRowChanged != null)) {
                    this.HOA_DONRowChanged(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HOA_DONRowChanging != null)) {
                    this.HOA_DONRowChanging(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HOA_DONRowDeleted != null)) {
                    this.HOA_DONRowDeleted(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HOA_DONRowDeleting != null)) {
                    this.HOA_DONRowDeleting(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHOA_DONRow(HOA_DONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HOA_DONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_DIA_DIEMDataTable : global::System.Data.TypedTableBase<LOAI_DIA_DIEMRow> {
            
            private global::System.Data.DataColumn columnMALOAI;
            
            private global::System.Data.DataColumn columnTENLOAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMDataTable() {
                this.TableName = "LOAI_DIA_DIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_DIA_DIEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_DIA_DIEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIColumn {
                get {
                    return this.columnMALOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENLOAIColumn {
                get {
                    return this.columnTENLOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRow this[int index] {
                get {
                    return ((LOAI_DIA_DIEMRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_DIA_DIEMRowChangeEventHandler LOAI_DIA_DIEMRowChanging;
            
            public event LOAI_DIA_DIEMRowChangeEventHandler LOAI_DIA_DIEMRowChanged;
            
            public event LOAI_DIA_DIEMRowChangeEventHandler LOAI_DIA_DIEMRowDeleting;
            
            public event LOAI_DIA_DIEMRowChangeEventHandler LOAI_DIA_DIEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_DIA_DIEMRow(LOAI_DIA_DIEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRow AddLOAI_DIA_DIEMRow(string TENLOAI) {
                LOAI_DIA_DIEMRow rowLOAI_DIA_DIEMRow = ((LOAI_DIA_DIEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENLOAI};
                rowLOAI_DIA_DIEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOAI_DIA_DIEMRow);
                return rowLOAI_DIA_DIEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRow FindByMALOAI(int MALOAI) {
                return ((LOAI_DIA_DIEMRow)(this.Rows.Find(new object[] {
                            MALOAI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LOAI_DIA_DIEMDataTable cln = ((LOAI_DIA_DIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOAI_DIA_DIEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMALOAI = base.Columns["MALOAI"];
                this.columnTENLOAI = base.Columns["TENLOAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMALOAI = new global::System.Data.DataColumn("MALOAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAI);
                this.columnTENLOAI = new global::System.Data.DataColumn("TENLOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENLOAI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMALOAI}, true));
                this.columnMALOAI.AutoIncrement = true;
                this.columnMALOAI.AutoIncrementSeed = -1;
                this.columnMALOAI.AutoIncrementStep = -1;
                this.columnMALOAI.AllowDBNull = false;
                this.columnMALOAI.Unique = true;
                this.columnTENLOAI.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRow NewLOAI_DIA_DIEMRow() {
                return ((LOAI_DIA_DIEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOAI_DIA_DIEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LOAI_DIA_DIEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_DIA_DIEMRowChanged != null)) {
                    this.LOAI_DIA_DIEMRowChanged(this, new LOAI_DIA_DIEMRowChangeEvent(((LOAI_DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_DIA_DIEMRowChanging != null)) {
                    this.LOAI_DIA_DIEMRowChanging(this, new LOAI_DIA_DIEMRowChangeEvent(((LOAI_DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_DIA_DIEMRowDeleted != null)) {
                    this.LOAI_DIA_DIEMRowDeleted(this, new LOAI_DIA_DIEMRowChangeEvent(((LOAI_DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_DIA_DIEMRowDeleting != null)) {
                    this.LOAI_DIA_DIEMRowDeleting(this, new LOAI_DIA_DIEMRowChangeEvent(((LOAI_DIA_DIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_DIA_DIEMRow(LOAI_DIA_DIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_DIA_DIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_HANGDataTable : global::System.Data.TypedTableBase<LOAI_HANGRow> {
            
            private global::System.Data.DataColumn columnMALOAI;
            
            private global::System.Data.DataColumn columnTENLOAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGDataTable() {
                this.TableName = "LOAI_HANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_HANGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_HANGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIColumn {
                get {
                    return this.columnMALOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENLOAIColumn {
                get {
                    return this.columnTENLOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow this[int index] {
                get {
                    return ((LOAI_HANGRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_HANGRowChangeEventHandler LOAI_HANGRowChanging;
            
            public event LOAI_HANGRowChangeEventHandler LOAI_HANGRowChanged;
            
            public event LOAI_HANGRowChangeEventHandler LOAI_HANGRowDeleting;
            
            public event LOAI_HANGRowChangeEventHandler LOAI_HANGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_HANGRow(LOAI_HANGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow AddLOAI_HANGRow(string TENLOAI) {
                LOAI_HANGRow rowLOAI_HANGRow = ((LOAI_HANGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENLOAI};
                rowLOAI_HANGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOAI_HANGRow);
                return rowLOAI_HANGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow FindByMALOAI(int MALOAI) {
                return ((LOAI_HANGRow)(this.Rows.Find(new object[] {
                            MALOAI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LOAI_HANGDataTable cln = ((LOAI_HANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOAI_HANGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMALOAI = base.Columns["MALOAI"];
                this.columnTENLOAI = base.Columns["TENLOAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMALOAI = new global::System.Data.DataColumn("MALOAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAI);
                this.columnTENLOAI = new global::System.Data.DataColumn("TENLOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENLOAI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMALOAI}, true));
                this.columnMALOAI.AutoIncrement = true;
                this.columnMALOAI.AutoIncrementSeed = -1;
                this.columnMALOAI.AutoIncrementStep = -1;
                this.columnMALOAI.AllowDBNull = false;
                this.columnMALOAI.Unique = true;
                this.columnTENLOAI.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow NewLOAI_HANGRow() {
                return ((LOAI_HANGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOAI_HANGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LOAI_HANGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_HANGRowChanged != null)) {
                    this.LOAI_HANGRowChanged(this, new LOAI_HANGRowChangeEvent(((LOAI_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_HANGRowChanging != null)) {
                    this.LOAI_HANGRowChanging(this, new LOAI_HANGRowChangeEvent(((LOAI_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_HANGRowDeleted != null)) {
                    this.LOAI_HANGRowDeleted(this, new LOAI_HANGRowChangeEvent(((LOAI_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_HANGRowDeleting != null)) {
                    this.LOAI_HANGRowDeleting(this, new LOAI_HANGRowChangeEvent(((LOAI_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_HANGRow(LOAI_HANGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_HANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_NHAN_VIENDataTable : global::System.Data.TypedTableBase<LOAI_NHAN_VIENRow> {
            
            private global::System.Data.DataColumn columnMa;
            
            private global::System.Data.DataColumn columnTenLoai;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENDataTable() {
                this.TableName = "LOAI_NHAN_VIEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_NHAN_VIENDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_NHAN_VIENDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaColumn {
                get {
                    return this.columnMa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenLoaiColumn {
                get {
                    return this.columnTenLoai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRow this[int index] {
                get {
                    return ((LOAI_NHAN_VIENRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_NHAN_VIENRowChangeEventHandler LOAI_NHAN_VIENRowChanging;
            
            public event LOAI_NHAN_VIENRowChangeEventHandler LOAI_NHAN_VIENRowChanged;
            
            public event LOAI_NHAN_VIENRowChangeEventHandler LOAI_NHAN_VIENRowDeleting;
            
            public event LOAI_NHAN_VIENRowChangeEventHandler LOAI_NHAN_VIENRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_NHAN_VIENRow(LOAI_NHAN_VIENRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRow AddLOAI_NHAN_VIENRow(string TenLoai) {
                LOAI_NHAN_VIENRow rowLOAI_NHAN_VIENRow = ((LOAI_NHAN_VIENRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TenLoai};
                rowLOAI_NHAN_VIENRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOAI_NHAN_VIENRow);
                return rowLOAI_NHAN_VIENRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRow FindByMa(int Ma) {
                return ((LOAI_NHAN_VIENRow)(this.Rows.Find(new object[] {
                            Ma})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LOAI_NHAN_VIENDataTable cln = ((LOAI_NHAN_VIENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOAI_NHAN_VIENDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMa = base.Columns["Ma"];
                this.columnTenLoai = base.Columns["TenLoai"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMa = new global::System.Data.DataColumn("Ma", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa);
                this.columnTenLoai = new global::System.Data.DataColumn("TenLoai", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenLoai);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMa}, true));
                this.columnMa.AutoIncrement = true;
                this.columnMa.AutoIncrementSeed = -1;
                this.columnMa.AutoIncrementStep = -1;
                this.columnMa.AllowDBNull = false;
                this.columnMa.Unique = true;
                this.columnTenLoai.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRow NewLOAI_NHAN_VIENRow() {
                return ((LOAI_NHAN_VIENRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOAI_NHAN_VIENRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LOAI_NHAN_VIENRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_NHAN_VIENRowChanged != null)) {
                    this.LOAI_NHAN_VIENRowChanged(this, new LOAI_NHAN_VIENRowChangeEvent(((LOAI_NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_NHAN_VIENRowChanging != null)) {
                    this.LOAI_NHAN_VIENRowChanging(this, new LOAI_NHAN_VIENRowChangeEvent(((LOAI_NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_NHAN_VIENRowDeleted != null)) {
                    this.LOAI_NHAN_VIENRowDeleted(this, new LOAI_NHAN_VIENRowChangeEvent(((LOAI_NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_NHAN_VIENRowDeleting != null)) {
                    this.LOAI_NHAN_VIENRowDeleting(this, new LOAI_NHAN_VIENRowChangeEvent(((LOAI_NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_NHAN_VIENRow(LOAI_NHAN_VIENRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_NHAN_VIENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAT_HANGDataTable : global::System.Data.TypedTableBase<MAT_HANGRow> {
            
            private global::System.Data.DataColumn columnMAMATHANG;
            
            private global::System.Data.DataColumn columnTENMATHANG;
            
            private global::System.Data.DataColumn columnSOLUONG;
            
            private global::System.Data.DataColumn columnDONVITINH;
            
            private global::System.Data.DataColumn columnMALOAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGDataTable() {
                this.TableName = "MAT_HANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAT_HANGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MAT_HANGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAMATHANGColumn {
                get {
                    return this.columnMAMATHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENMATHANGColumn {
                get {
                    return this.columnTENMATHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLUONGColumn {
                get {
                    return this.columnSOLUONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DONVITINHColumn {
                get {
                    return this.columnDONVITINH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIColumn {
                get {
                    return this.columnMALOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow this[int index] {
                get {
                    return ((MAT_HANGRow)(this.Rows[index]));
                }
            }
            
            public event MAT_HANGRowChangeEventHandler MAT_HANGRowChanging;
            
            public event MAT_HANGRowChangeEventHandler MAT_HANGRowChanged;
            
            public event MAT_HANGRowChangeEventHandler MAT_HANGRowDeleting;
            
            public event MAT_HANGRowChangeEventHandler MAT_HANGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMAT_HANGRow(MAT_HANGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow AddMAT_HANGRow(string TENMATHANG, int SOLUONG, string DONVITINH, LOAI_HANGRow parentLOAI_HANGRowByLOAI_HANGMAT_HANG) {
                MAT_HANGRow rowMAT_HANGRow = ((MAT_HANGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENMATHANG,
                        SOLUONG,
                        DONVITINH,
                        null};
                if ((parentLOAI_HANGRowByLOAI_HANGMAT_HANG != null)) {
                    columnValuesArray[4] = parentLOAI_HANGRowByLOAI_HANGMAT_HANG[0];
                }
                rowMAT_HANGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMAT_HANGRow);
                return rowMAT_HANGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow FindByMAMATHANG(int MAMATHANG) {
                return ((MAT_HANGRow)(this.Rows.Find(new object[] {
                            MAMATHANG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MAT_HANGDataTable cln = ((MAT_HANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MAT_HANGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAMATHANG = base.Columns["MAMATHANG"];
                this.columnTENMATHANG = base.Columns["TENMATHANG"];
                this.columnSOLUONG = base.Columns["SOLUONG"];
                this.columnDONVITINH = base.Columns["DONVITINH"];
                this.columnMALOAI = base.Columns["MALOAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAMATHANG = new global::System.Data.DataColumn("MAMATHANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAMATHANG);
                this.columnTENMATHANG = new global::System.Data.DataColumn("TENMATHANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENMATHANG);
                this.columnSOLUONG = new global::System.Data.DataColumn("SOLUONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLUONG);
                this.columnDONVITINH = new global::System.Data.DataColumn("DONVITINH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONVITINH);
                this.columnMALOAI = new global::System.Data.DataColumn("MALOAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAMATHANG}, true));
                this.columnMAMATHANG.AutoIncrement = true;
                this.columnMAMATHANG.AutoIncrementSeed = -1;
                this.columnMAMATHANG.AutoIncrementStep = -1;
                this.columnMAMATHANG.AllowDBNull = false;
                this.columnMAMATHANG.Unique = true;
                this.columnTENMATHANG.MaxLength = 255;
                this.columnDONVITINH.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow NewMAT_HANGRow() {
                return ((MAT_HANGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MAT_HANGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MAT_HANGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MAT_HANGRowChanged != null)) {
                    this.MAT_HANGRowChanged(this, new MAT_HANGRowChangeEvent(((MAT_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MAT_HANGRowChanging != null)) {
                    this.MAT_HANGRowChanging(this, new MAT_HANGRowChangeEvent(((MAT_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MAT_HANGRowDeleted != null)) {
                    this.MAT_HANGRowDeleted(this, new MAT_HANGRowChangeEvent(((MAT_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MAT_HANGRowDeleting != null)) {
                    this.MAT_HANGRowDeleting(this, new MAT_HANGRowChangeEvent(((MAT_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMAT_HANGRow(MAT_HANGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAT_HANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NHAN_VIENDataTable : global::System.Data.TypedTableBase<NHAN_VIENRow> {
            
            private global::System.Data.DataColumn columnMANHANVIEN;
            
            private global::System.Data.DataColumn columnTENNHANVIEN;
            
            private global::System.Data.DataColumn columnSODIENTHOAI;
            
            private global::System.Data.DataColumn columnNgayVaoCongTy;
            
            private global::System.Data.DataColumn columnMaLoaiNhanVien;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENDataTable() {
                this.TableName = "NHAN_VIEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NHAN_VIENDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NHAN_VIENDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANHANVIENColumn {
                get {
                    return this.columnMANHANVIEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENNHANVIENColumn {
                get {
                    return this.columnTENNHANVIEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SODIENTHOAIColumn {
                get {
                    return this.columnSODIENTHOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NgayVaoCongTyColumn {
                get {
                    return this.columnNgayVaoCongTy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaLoaiNhanVienColumn {
                get {
                    return this.columnMaLoaiNhanVien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow this[int index] {
                get {
                    return ((NHAN_VIENRow)(this.Rows[index]));
                }
            }
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowChanging;
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowChanged;
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowDeleting;
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNHAN_VIENRow(NHAN_VIENRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow AddNHAN_VIENRow(string TENNHANVIEN, string SODIENTHOAI, System.DateTime NgayVaoCongTy, LOAI_NHAN_VIENRow parentLOAI_NHAN_VIENRowByLOAI_NHAN_VIENNHAN_VIEN) {
                NHAN_VIENRow rowNHAN_VIENRow = ((NHAN_VIENRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENNHANVIEN,
                        SODIENTHOAI,
                        NgayVaoCongTy,
                        null};
                if ((parentLOAI_NHAN_VIENRowByLOAI_NHAN_VIENNHAN_VIEN != null)) {
                    columnValuesArray[4] = parentLOAI_NHAN_VIENRowByLOAI_NHAN_VIENNHAN_VIEN[0];
                }
                rowNHAN_VIENRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNHAN_VIENRow);
                return rowNHAN_VIENRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow FindByMANHANVIEN(int MANHANVIEN) {
                return ((NHAN_VIENRow)(this.Rows.Find(new object[] {
                            MANHANVIEN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NHAN_VIENDataTable cln = ((NHAN_VIENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NHAN_VIENDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMANHANVIEN = base.Columns["MANHANVIEN"];
                this.columnTENNHANVIEN = base.Columns["TENNHANVIEN"];
                this.columnSODIENTHOAI = base.Columns["SODIENTHOAI"];
                this.columnNgayVaoCongTy = base.Columns["NgayVaoCongTy"];
                this.columnMaLoaiNhanVien = base.Columns["MaLoaiNhanVien"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMANHANVIEN = new global::System.Data.DataColumn("MANHANVIEN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANHANVIEN);
                this.columnTENNHANVIEN = new global::System.Data.DataColumn("TENNHANVIEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENNHANVIEN);
                this.columnSODIENTHOAI = new global::System.Data.DataColumn("SODIENTHOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSODIENTHOAI);
                this.columnNgayVaoCongTy = new global::System.Data.DataColumn("NgayVaoCongTy", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayVaoCongTy);
                this.columnMaLoaiNhanVien = new global::System.Data.DataColumn("MaLoaiNhanVien", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiNhanVien);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMANHANVIEN}, true));
                this.columnMANHANVIEN.AutoIncrement = true;
                this.columnMANHANVIEN.AutoIncrementSeed = -1;
                this.columnMANHANVIEN.AutoIncrementStep = -1;
                this.columnMANHANVIEN.AllowDBNull = false;
                this.columnMANHANVIEN.Unique = true;
                this.columnTENNHANVIEN.MaxLength = 100;
                this.columnSODIENTHOAI.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NewNHAN_VIENRow() {
                return ((NHAN_VIENRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NHAN_VIENRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NHAN_VIENRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NHAN_VIENRowChanged != null)) {
                    this.NHAN_VIENRowChanged(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NHAN_VIENRowChanging != null)) {
                    this.NHAN_VIENRowChanging(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NHAN_VIENRowDeleted != null)) {
                    this.NHAN_VIENRowDeleted(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NHAN_VIENRowDeleting != null)) {
                    this.NHAN_VIENRowDeleting(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNHAN_VIENRow(NHAN_VIENRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NHAN_VIENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHANCONGXE_TAIXEDataTable : global::System.Data.TypedTableBase<PHANCONGXE_TAIXERow> {
            
            private global::System.Data.DataColumn columnMAPHANCONG;
            
            private global::System.Data.DataColumn columnNGAYPHANCONG;
            
            private global::System.Data.DataColumn columnMANHANVIENPHANCONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXEDataTable() {
                this.TableName = "PHANCONGXE_TAIXE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHANCONGXE_TAIXEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHANCONGXE_TAIXEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAPHANCONGColumn {
                get {
                    return this.columnMAPHANCONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYPHANCONGColumn {
                get {
                    return this.columnNGAYPHANCONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANHANVIENPHANCONGColumn {
                get {
                    return this.columnMANHANVIENPHANCONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERow this[int index] {
                get {
                    return ((PHANCONGXE_TAIXERow)(this.Rows[index]));
                }
            }
            
            public event PHANCONGXE_TAIXERowChangeEventHandler PHANCONGXE_TAIXERowChanging;
            
            public event PHANCONGXE_TAIXERowChangeEventHandler PHANCONGXE_TAIXERowChanged;
            
            public event PHANCONGXE_TAIXERowChangeEventHandler PHANCONGXE_TAIXERowDeleting;
            
            public event PHANCONGXE_TAIXERowChangeEventHandler PHANCONGXE_TAIXERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHANCONGXE_TAIXERow(PHANCONGXE_TAIXERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERow AddPHANCONGXE_TAIXERow(System.DateTime NGAYPHANCONG, int MANHANVIENPHANCONG) {
                PHANCONGXE_TAIXERow rowPHANCONGXE_TAIXERow = ((PHANCONGXE_TAIXERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NGAYPHANCONG,
                        MANHANVIENPHANCONG};
                rowPHANCONGXE_TAIXERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPHANCONGXE_TAIXERow);
                return rowPHANCONGXE_TAIXERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERow FindByMAPHANCONG(int MAPHANCONG) {
                return ((PHANCONGXE_TAIXERow)(this.Rows.Find(new object[] {
                            MAPHANCONG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PHANCONGXE_TAIXEDataTable cln = ((PHANCONGXE_TAIXEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PHANCONGXE_TAIXEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAPHANCONG = base.Columns["MAPHANCONG"];
                this.columnNGAYPHANCONG = base.Columns["NGAYPHANCONG"];
                this.columnMANHANVIENPHANCONG = base.Columns["MANHANVIENPHANCONG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAPHANCONG = new global::System.Data.DataColumn("MAPHANCONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAPHANCONG);
                this.columnNGAYPHANCONG = new global::System.Data.DataColumn("NGAYPHANCONG", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYPHANCONG);
                this.columnMANHANVIENPHANCONG = new global::System.Data.DataColumn("MANHANVIENPHANCONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANHANVIENPHANCONG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAPHANCONG}, true));
                this.columnMAPHANCONG.AutoIncrement = true;
                this.columnMAPHANCONG.AutoIncrementSeed = -1;
                this.columnMAPHANCONG.AutoIncrementStep = -1;
                this.columnMAPHANCONG.AllowDBNull = false;
                this.columnMAPHANCONG.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERow NewPHANCONGXE_TAIXERow() {
                return ((PHANCONGXE_TAIXERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PHANCONGXE_TAIXERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PHANCONGXE_TAIXERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHANCONGXE_TAIXERowChanged != null)) {
                    this.PHANCONGXE_TAIXERowChanged(this, new PHANCONGXE_TAIXERowChangeEvent(((PHANCONGXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHANCONGXE_TAIXERowChanging != null)) {
                    this.PHANCONGXE_TAIXERowChanging(this, new PHANCONGXE_TAIXERowChangeEvent(((PHANCONGXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHANCONGXE_TAIXERowDeleted != null)) {
                    this.PHANCONGXE_TAIXERowDeleted(this, new PHANCONGXE_TAIXERowChangeEvent(((PHANCONGXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHANCONGXE_TAIXERowDeleting != null)) {
                    this.PHANCONGXE_TAIXERowDeleting(this, new PHANCONGXE_TAIXERowChangeEvent(((PHANCONGXE_TAIXERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHANCONGXE_TAIXERow(PHANCONGXE_TAIXERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHANCONGXE_TAIXEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THAMSODataTable : global::System.Data.TypedTableBase<THAMSORow> {
            
            private global::System.Data.DataColumn columnMa;
            
            private global::System.Data.DataColumn columnTENTHAMSO;
            
            private global::System.Data.DataColumn columnGiaTri;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSODataTable() {
                this.TableName = "THAMSO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THAMSODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected THAMSODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaColumn {
                get {
                    return this.columnMa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENTHAMSOColumn {
                get {
                    return this.columnTENTHAMSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiaTriColumn {
                get {
                    return this.columnGiaTri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSORow this[int index] {
                get {
                    return ((THAMSORow)(this.Rows[index]));
                }
            }
            
            public event THAMSORowChangeEventHandler THAMSORowChanging;
            
            public event THAMSORowChangeEventHandler THAMSORowChanged;
            
            public event THAMSORowChangeEventHandler THAMSORowDeleting;
            
            public event THAMSORowChangeEventHandler THAMSORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTHAMSORow(THAMSORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSORow AddTHAMSORow(string TENTHAMSO, string GiaTri) {
                THAMSORow rowTHAMSORow = ((THAMSORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENTHAMSO,
                        GiaTri};
                rowTHAMSORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHAMSORow);
                return rowTHAMSORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSORow FindByMa(int Ma) {
                return ((THAMSORow)(this.Rows.Find(new object[] {
                            Ma})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                THAMSODataTable cln = ((THAMSODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THAMSODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMa = base.Columns["Ma"];
                this.columnTENTHAMSO = base.Columns["TENTHAMSO"];
                this.columnGiaTri = base.Columns["GiaTri"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMa = new global::System.Data.DataColumn("Ma", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa);
                this.columnTENTHAMSO = new global::System.Data.DataColumn("TENTHAMSO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENTHAMSO);
                this.columnGiaTri = new global::System.Data.DataColumn("GiaTri", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiaTri);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMa}, true));
                this.columnMa.AutoIncrement = true;
                this.columnMa.AutoIncrementSeed = -1;
                this.columnMa.AutoIncrementStep = -1;
                this.columnMa.AllowDBNull = false;
                this.columnMa.Unique = true;
                this.columnTENTHAMSO.MaxLength = 255;
                this.columnGiaTri.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSORow NewTHAMSORow() {
                return ((THAMSORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THAMSORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(THAMSORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THAMSORowChanged != null)) {
                    this.THAMSORowChanged(this, new THAMSORowChangeEvent(((THAMSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THAMSORowChanging != null)) {
                    this.THAMSORowChanging(this, new THAMSORowChangeEvent(((THAMSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THAMSORowDeleted != null)) {
                    this.THAMSORowDeleted(this, new THAMSORowChangeEvent(((THAMSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THAMSORowDeleting != null)) {
                    this.THAMSORowDeleting(this, new THAMSORowChangeEvent(((THAMSORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTHAMSORow(THAMSORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THAMSODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRANG_THAIDataTable : global::System.Data.TypedTableBase<TRANG_THAIRow> {
            
            private global::System.Data.DataColumn columnMATRANGTHAI;
            
            private global::System.Data.DataColumn columnTENTRANGTHAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIDataTable() {
                this.TableName = "TRANG_THAI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANG_THAIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TRANG_THAIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATRANGTHAIColumn {
                get {
                    return this.columnMATRANGTHAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENTRANGTHAIColumn {
                get {
                    return this.columnTENTRANGTHAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRow this[int index] {
                get {
                    return ((TRANG_THAIRow)(this.Rows[index]));
                }
            }
            
            public event TRANG_THAIRowChangeEventHandler TRANG_THAIRowChanging;
            
            public event TRANG_THAIRowChangeEventHandler TRANG_THAIRowChanged;
            
            public event TRANG_THAIRowChangeEventHandler TRANG_THAIRowDeleting;
            
            public event TRANG_THAIRowChangeEventHandler TRANG_THAIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRANG_THAIRow(TRANG_THAIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRow AddTRANG_THAIRow(string TENTRANGTHAI) {
                TRANG_THAIRow rowTRANG_THAIRow = ((TRANG_THAIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TENTRANGTHAI};
                rowTRANG_THAIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRANG_THAIRow);
                return rowTRANG_THAIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRow FindByMATRANGTHAI(int MATRANGTHAI) {
                return ((TRANG_THAIRow)(this.Rows.Find(new object[] {
                            MATRANGTHAI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRANG_THAIDataTable cln = ((TRANG_THAIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRANG_THAIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMATRANGTHAI = base.Columns["MATRANGTHAI"];
                this.columnTENTRANGTHAI = base.Columns["TENTRANGTHAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMATRANGTHAI = new global::System.Data.DataColumn("MATRANGTHAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATRANGTHAI);
                this.columnTENTRANGTHAI = new global::System.Data.DataColumn("TENTRANGTHAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENTRANGTHAI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMATRANGTHAI}, true));
                this.columnMATRANGTHAI.AutoIncrement = true;
                this.columnMATRANGTHAI.AutoIncrementSeed = -1;
                this.columnMATRANGTHAI.AutoIncrementStep = -1;
                this.columnMATRANGTHAI.AllowDBNull = false;
                this.columnMATRANGTHAI.Unique = true;
                this.columnTENTRANGTHAI.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRow NewTRANG_THAIRow() {
                return ((TRANG_THAIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRANG_THAIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRANG_THAIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRANG_THAIRowChanged != null)) {
                    this.TRANG_THAIRowChanged(this, new TRANG_THAIRowChangeEvent(((TRANG_THAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRANG_THAIRowChanging != null)) {
                    this.TRANG_THAIRowChanging(this, new TRANG_THAIRowChangeEvent(((TRANG_THAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRANG_THAIRowDeleted != null)) {
                    this.TRANG_THAIRowDeleted(this, new TRANG_THAIRowChangeEvent(((TRANG_THAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRANG_THAIRowDeleting != null)) {
                    this.TRANG_THAIRowDeleting(this, new TRANG_THAIRowChangeEvent(((TRANG_THAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRANG_THAIRow(TRANG_THAIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRANG_THAIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRONG_TAIDataTable : global::System.Data.TypedTableBase<TRONG_TAIRow> {
            
            private global::System.Data.DataColumn columnMATRONGTAI;
            
            private global::System.Data.DataColumn columnGIATRI;
            
            private global::System.Data.DataColumn columnDONVI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIDataTable() {
                this.TableName = "TRONG_TAI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRONG_TAIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TRONG_TAIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATRONGTAIColumn {
                get {
                    return this.columnMATRONGTAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GIATRIColumn {
                get {
                    return this.columnGIATRI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DONVIColumn {
                get {
                    return this.columnDONVI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRow this[int index] {
                get {
                    return ((TRONG_TAIRow)(this.Rows[index]));
                }
            }
            
            public event TRONG_TAIRowChangeEventHandler TRONG_TAIRowChanging;
            
            public event TRONG_TAIRowChangeEventHandler TRONG_TAIRowChanged;
            
            public event TRONG_TAIRowChangeEventHandler TRONG_TAIRowDeleting;
            
            public event TRONG_TAIRowChangeEventHandler TRONG_TAIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRONG_TAIRow(TRONG_TAIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRow AddTRONG_TAIRow(int GIATRI, string DONVI) {
                TRONG_TAIRow rowTRONG_TAIRow = ((TRONG_TAIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        GIATRI,
                        DONVI};
                rowTRONG_TAIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRONG_TAIRow);
                return rowTRONG_TAIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRow FindByMATRONGTAI(int MATRONGTAI) {
                return ((TRONG_TAIRow)(this.Rows.Find(new object[] {
                            MATRONGTAI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRONG_TAIDataTable cln = ((TRONG_TAIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRONG_TAIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMATRONGTAI = base.Columns["MATRONGTAI"];
                this.columnGIATRI = base.Columns["GIATRI"];
                this.columnDONVI = base.Columns["DONVI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMATRONGTAI = new global::System.Data.DataColumn("MATRONGTAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATRONGTAI);
                this.columnGIATRI = new global::System.Data.DataColumn("GIATRI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIATRI);
                this.columnDONVI = new global::System.Data.DataColumn("DONVI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONVI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMATRONGTAI}, true));
                this.columnMATRONGTAI.AutoIncrement = true;
                this.columnMATRONGTAI.AutoIncrementSeed = -1;
                this.columnMATRONGTAI.AutoIncrementStep = -1;
                this.columnMATRONGTAI.AllowDBNull = false;
                this.columnMATRONGTAI.Unique = true;
                this.columnDONVI.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRow NewTRONG_TAIRow() {
                return ((TRONG_TAIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRONG_TAIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRONG_TAIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRONG_TAIRowChanged != null)) {
                    this.TRONG_TAIRowChanged(this, new TRONG_TAIRowChangeEvent(((TRONG_TAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRONG_TAIRowChanging != null)) {
                    this.TRONG_TAIRowChanging(this, new TRONG_TAIRowChangeEvent(((TRONG_TAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRONG_TAIRowDeleted != null)) {
                    this.TRONG_TAIRowDeleted(this, new TRONG_TAIRowChangeEvent(((TRONG_TAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRONG_TAIRowDeleting != null)) {
                    this.TRONG_TAIRowDeleting(this, new TRONG_TAIRowChangeEvent(((TRONG_TAIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRONG_TAIRow(TRONG_TAIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRONG_TAIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class XEDataTable : global::System.Data.TypedTableBase<XERow> {
            
            private global::System.Data.DataColumn columnBIENSO;
            
            private global::System.Data.DataColumn columnNGAYTIEPNHAN;
            
            private global::System.Data.DataColumn columnNAMSANXUAT;
            
            private global::System.Data.DataColumn columnMAHANGXE;
            
            private global::System.Data.DataColumn columnNGAYDANGKIEM;
            
            private global::System.Data.DataColumn columnHIEUXE;
            
            private global::System.Data.DataColumn columnSOKHUNG;
            
            private global::System.Data.DataColumn columnSOMAY;
            
            private global::System.Data.DataColumn columnMATRONGTAI;
            
            private global::System.Data.DataColumn columnMALOAIHANG;
            
            private global::System.Data.DataColumn columnMANHANVIENTIEPNHAN;
            
            private global::System.Data.DataColumn columnDINHMUC;
            
            private global::System.Data.DataColumn columnDUNGTICHBINH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XEDataTable() {
                this.TableName = "XE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal XEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected XEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIENSOColumn {
                get {
                    return this.columnBIENSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYTIEPNHANColumn {
                get {
                    return this.columnNGAYTIEPNHAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMSANXUATColumn {
                get {
                    return this.columnNAMSANXUAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHANGXEColumn {
                get {
                    return this.columnMAHANGXE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYDANGKIEMColumn {
                get {
                    return this.columnNGAYDANGKIEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIEUXEColumn {
                get {
                    return this.columnHIEUXE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOKHUNGColumn {
                get {
                    return this.columnSOKHUNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOMAYColumn {
                get {
                    return this.columnSOMAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MATRONGTAIColumn {
                get {
                    return this.columnMATRONGTAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIHANGColumn {
                get {
                    return this.columnMALOAIHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANHANVIENTIEPNHANColumn {
                get {
                    return this.columnMANHANVIENTIEPNHAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DINHMUCColumn {
                get {
                    return this.columnDINHMUC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUNGTICHBINHColumn {
                get {
                    return this.columnDUNGTICHBINH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow this[int index] {
                get {
                    return ((XERow)(this.Rows[index]));
                }
            }
            
            public event XERowChangeEventHandler XERowChanging;
            
            public event XERowChangeEventHandler XERowChanged;
            
            public event XERowChangeEventHandler XERowDeleting;
            
            public event XERowChangeEventHandler XERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddXERow(XERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow AddXERow(string BIENSO, System.DateTime NGAYTIEPNHAN, int NAMSANXUAT, HANG_XERow parentHANG_XERowByHANG_XEXE, System.DateTime NGAYDANGKIEM, string HIEUXE, string SOKHUNG, string SOMAY, TRONG_TAIRow parentTRONG_TAIRowByTRONG_TAIXE, LOAI_HANGRow parentLOAI_HANGRowByLOAI_HANGXE, NHAN_VIENRow parentNHAN_VIENRowByNHAN_VIENXE, double DINHMUC, double DUNGTICHBINH) {
                XERow rowXERow = ((XERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BIENSO,
                        NGAYTIEPNHAN,
                        NAMSANXUAT,
                        null,
                        NGAYDANGKIEM,
                        HIEUXE,
                        SOKHUNG,
                        SOMAY,
                        null,
                        null,
                        null,
                        DINHMUC,
                        DUNGTICHBINH};
                if ((parentHANG_XERowByHANG_XEXE != null)) {
                    columnValuesArray[3] = parentHANG_XERowByHANG_XEXE[0];
                }
                if ((parentTRONG_TAIRowByTRONG_TAIXE != null)) {
                    columnValuesArray[8] = parentTRONG_TAIRowByTRONG_TAIXE[0];
                }
                if ((parentLOAI_HANGRowByLOAI_HANGXE != null)) {
                    columnValuesArray[9] = parentLOAI_HANGRowByLOAI_HANGXE[0];
                }
                if ((parentNHAN_VIENRowByNHAN_VIENXE != null)) {
                    columnValuesArray[10] = parentNHAN_VIENRowByNHAN_VIENXE[0];
                }
                rowXERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowXERow);
                return rowXERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow FindByBIENSO(string BIENSO) {
                return ((XERow)(this.Rows.Find(new object[] {
                            BIENSO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                XEDataTable cln = ((XEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new XEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBIENSO = base.Columns["BIENSO"];
                this.columnNGAYTIEPNHAN = base.Columns["NGAYTIEPNHAN"];
                this.columnNAMSANXUAT = base.Columns["NAMSANXUAT"];
                this.columnMAHANGXE = base.Columns["MAHANGXE"];
                this.columnNGAYDANGKIEM = base.Columns["NGAYDANGKIEM"];
                this.columnHIEUXE = base.Columns["HIEUXE"];
                this.columnSOKHUNG = base.Columns["SOKHUNG"];
                this.columnSOMAY = base.Columns["SOMAY"];
                this.columnMATRONGTAI = base.Columns["MATRONGTAI"];
                this.columnMALOAIHANG = base.Columns["MALOAIHANG"];
                this.columnMANHANVIENTIEPNHAN = base.Columns["MANHANVIENTIEPNHAN"];
                this.columnDINHMUC = base.Columns["DINHMUC"];
                this.columnDUNGTICHBINH = base.Columns["DUNGTICHBINH"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBIENSO = new global::System.Data.DataColumn("BIENSO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIENSO);
                this.columnNGAYTIEPNHAN = new global::System.Data.DataColumn("NGAYTIEPNHAN", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYTIEPNHAN);
                this.columnNAMSANXUAT = new global::System.Data.DataColumn("NAMSANXUAT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMSANXUAT);
                this.columnMAHANGXE = new global::System.Data.DataColumn("MAHANGXE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHANGXE);
                this.columnNGAYDANGKIEM = new global::System.Data.DataColumn("NGAYDANGKIEM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYDANGKIEM);
                this.columnHIEUXE = new global::System.Data.DataColumn("HIEUXE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIEUXE);
                this.columnSOKHUNG = new global::System.Data.DataColumn("SOKHUNG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOKHUNG);
                this.columnSOMAY = new global::System.Data.DataColumn("SOMAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOMAY);
                this.columnMATRONGTAI = new global::System.Data.DataColumn("MATRONGTAI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATRONGTAI);
                this.columnMALOAIHANG = new global::System.Data.DataColumn("MALOAIHANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAIHANG);
                this.columnMANHANVIENTIEPNHAN = new global::System.Data.DataColumn("MANHANVIENTIEPNHAN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANHANVIENTIEPNHAN);
                this.columnDINHMUC = new global::System.Data.DataColumn("DINHMUC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDINHMUC);
                this.columnDUNGTICHBINH = new global::System.Data.DataColumn("DUNGTICHBINH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUNGTICHBINH);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBIENSO}, true));
                this.columnBIENSO.AllowDBNull = false;
                this.columnBIENSO.Unique = true;
                this.columnBIENSO.MaxLength = 255;
                this.columnHIEUXE.MaxLength = 50;
                this.columnSOKHUNG.MaxLength = 255;
                this.columnSOMAY.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow NewXERow() {
                return ((XERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new XERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(XERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.XERowChanged != null)) {
                    this.XERowChanged(this, new XERowChangeEvent(((XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.XERowChanging != null)) {
                    this.XERowChanging(this, new XERowChangeEvent(((XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.XERowDeleted != null)) {
                    this.XERowDeleted(this, new XERowChangeEvent(((XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.XERowDeleting != null)) {
                    this.XERowDeleting(this, new XERowChangeEvent(((XERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveXERow(XERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Db_QuanLyDoiXeVinamilkDataSet ds = new Db_QuanLyDoiXeVinamilkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "XEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CAP_NHIEN_LIEURow : global::System.Data.DataRow {
            
            private CAP_NHIEN_LIEUDataTable tableCAP_NHIEN_LIEU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAP_NHIEN_LIEURow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAP_NHIEN_LIEU = ((CAP_NHIEN_LIEUDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA {
                get {
                    return ((int)(this[this.tableCAP_NHIEN_LIEU.MAColumn]));
                }
                set {
                    this[this.tableCAP_NHIEN_LIEU.MAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYCAP {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCAP_NHIEN_LIEU.NGAYCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCAP\' in table \'CAP_NHIEN_LIEU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAP_NHIEN_LIEU.NGAYCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MANHANVIENCAP {
                get {
                    try {
                        return ((int)(this[this.tableCAP_NHIEN_LIEU.MANHANVIENCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MANHANVIENCAP\' in table \'CAP_NHIEN_LIEU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAP_NHIEN_LIEU.MANHANVIENCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NHAN_VIENRow {
                get {
                    return ((NHAN_VIENRow)(this.GetParentRow(this.Table.ParentRelations["NHAN_VIENCAP_NHIEN_LIEU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NHAN_VIENCAP_NHIEN_LIEU"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCAPNull() {
                return this.IsNull(this.tableCAP_NHIEN_LIEU.NGAYCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCAPNull() {
                this[this.tableCAP_NHIEN_LIEU.NGAYCAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANHANVIENCAPNull() {
                return this.IsNull(this.tableCAP_NHIEN_LIEU.MANHANVIENCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANHANVIENCAPNull() {
                this[this.tableCAP_NHIEN_LIEU.MANHANVIENCAPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHITIET_CAPNHIENLIEURow : global::System.Data.DataRow {
            
            private CHITIET_CAPNHIENLIEUDataTable tableCHITIET_CAPNHIENLIEU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIET_CAPNHIENLIEURow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHITIET_CAPNHIENLIEU = ((CHITIET_CAPNHIENLIEUDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MACHITIET {
                get {
                    return ((int)(this[this.tableCHITIET_CAPNHIENLIEU.MACHITIETColumn]));
                }
                set {
                    this[this.tableCHITIET_CAPNHIENLIEU.MACHITIETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MACAPNHIENLIEU {
                get {
                    try {
                        return ((string)(this[this.tableCHITIET_CAPNHIENLIEU.MACAPNHIENLIEUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MACAPNHIENLIEU\' in table \'CHITIET_CAPNHIENLIEU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_CAPNHIENLIEU.MACAPNHIENLIEUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIENSOXEDUOCAP {
                get {
                    try {
                        return ((string)(this[this.tableCHITIET_CAPNHIENLIEU.BIENSOXEDUOCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIENSOXEDUOCAP\' in table \'CHITIET_CAPNHIENLIEU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_CAPNHIENLIEU.BIENSOXEDUOCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CHISOCU {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_CAPNHIENLIEU.CHISOCUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHISOCU\' in table \'CHITIET_CAPNHIENLIEU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_CAPNHIENLIEU.CHISOCUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOLITCAP {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_CAPNHIENLIEU.SOLITCAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOLITCAP\' in table \'CHITIET_CAPNHIENLIEU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_CAPNHIENLIEU.SOLITCAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow XERow {
                get {
                    return ((XERow)(this.GetParentRow(this.Table.ParentRelations["XECHITIET_CAPNHIENLIEU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["XECHITIET_CAPNHIENLIEU"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMACAPNHIENLIEUNull() {
                return this.IsNull(this.tableCHITIET_CAPNHIENLIEU.MACAPNHIENLIEUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMACAPNHIENLIEUNull() {
                this[this.tableCHITIET_CAPNHIENLIEU.MACAPNHIENLIEUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIENSOXEDUOCAPNull() {
                return this.IsNull(this.tableCHITIET_CAPNHIENLIEU.BIENSOXEDUOCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIENSOXEDUOCAPNull() {
                this[this.tableCHITIET_CAPNHIENLIEU.BIENSOXEDUOCAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHISOCUNull() {
                return this.IsNull(this.tableCHITIET_CAPNHIENLIEU.CHISOCUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHISOCUNull() {
                this[this.tableCHITIET_CAPNHIENLIEU.CHISOCUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOLITCAPNull() {
                return this.IsNull(this.tableCHITIET_CAPNHIENLIEU.SOLITCAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOLITCAPNull() {
                this[this.tableCHITIET_CAPNHIENLIEU.SOLITCAPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHITIET_HOADONRow : global::System.Data.DataRow {
            
            private CHITIET_HOADONDataTable tableCHITIET_HOADON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIET_HOADONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHITIET_HOADON = ((CHITIET_HOADONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MACHITIET {
                get {
                    return ((int)(this[this.tableCHITIET_HOADON.MACHITIETColumn]));
                }
                set {
                    this[this.tableCHITIET_HOADON.MACHITIETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAHOADON {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_HOADON.MAHOADONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAHOADON\' in table \'CHITIET_HOADON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_HOADON.MAHOADONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADIADIEM {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_HOADON.MADIADIEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADIADIEM\' in table \'CHITIET_HOADON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_HOADON.MADIADIEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAMATHANG {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_HOADON.MAMATHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAMATHANG\' in table \'CHITIET_HOADON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_HOADON.MAMATHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOLUONG {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_HOADON.SOLUONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOLUONG\' in table \'CHITIET_HOADON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_HOADON.SOLUONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MATRANGTHAI {
                get {
                    try {
                        return ((int)(this[this.tableCHITIET_HOADON.MATRANGTHAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATRANGTHAI\' in table \'CHITIET_HOADON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIET_HOADON.MATRANGTHAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow DIA_DIEMRow {
                get {
                    return ((DIA_DIEMRow)(this.GetParentRow(this.Table.ParentRelations["DIA_DIEMCHITIET_HOADON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DIA_DIEMCHITIET_HOADON"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow HOA_DONRow {
                get {
                    return ((HOA_DONRow)(this.GetParentRow(this.Table.ParentRelations["HOA_DONCHITIET_HOADON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HOA_DONCHITIET_HOADON"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow MAT_HANGRow {
                get {
                    return ((MAT_HANGRow)(this.GetParentRow(this.Table.ParentRelations["MAT_HANGCHITIET_HOADON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MAT_HANGCHITIET_HOADON"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRow TRANG_THAIRow {
                get {
                    return ((TRANG_THAIRow)(this.GetParentRow(this.Table.ParentRelations["TRANG_THAICHITIET_HOADON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TRANG_THAICHITIET_HOADON"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAHOADONNull() {
                return this.IsNull(this.tableCHITIET_HOADON.MAHOADONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAHOADONNull() {
                this[this.tableCHITIET_HOADON.MAHOADONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADIADIEMNull() {
                return this.IsNull(this.tableCHITIET_HOADON.MADIADIEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADIADIEMNull() {
                this[this.tableCHITIET_HOADON.MADIADIEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAMATHANGNull() {
                return this.IsNull(this.tableCHITIET_HOADON.MAMATHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAMATHANGNull() {
                this[this.tableCHITIET_HOADON.MAMATHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOLUONGNull() {
                return this.IsNull(this.tableCHITIET_HOADON.SOLUONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOLUONGNull() {
                this[this.tableCHITIET_HOADON.SOLUONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATRANGTHAINull() {
                return this.IsNull(this.tableCHITIET_HOADON.MATRANGTHAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATRANGTHAINull() {
                this[this.tableCHITIET_HOADON.MATRANGTHAIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHITIETPCXE_TAIXERow : global::System.Data.DataRow {
            
            private CHITIETPCXE_TAIXEDataTable tableCHITIETPCXE_TAIXE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIETPCXE_TAIXERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHITIETPCXE_TAIXE = ((CHITIETPCXE_TAIXEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA {
                get {
                    return ((int)(this[this.tableCHITIETPCXE_TAIXE.MAColumn]));
                }
                set {
                    this[this.tableCHITIETPCXE_TAIXE.MAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAPHANCONG {
                get {
                    try {
                        return ((int)(this[this.tableCHITIETPCXE_TAIXE.MAPHANCONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAPHANCONG\' in table \'CHITIETPCXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETPCXE_TAIXE.MAPHANCONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIENSOXE {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETPCXE_TAIXE.BIENSOXEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIENSOXE\' in table \'CHITIETPCXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETPCXE_TAIXE.BIENSOXEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MATAIXE {
                get {
                    try {
                        return ((int)(this[this.tableCHITIETPCXE_TAIXE.MATAIXEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATAIXE\' in table \'CHITIETPCXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETPCXE_TAIXE.MATAIXEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THOIGIANBATDAU {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETPCXE_TAIXE.THOIGIANBATDAUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THOIGIANBATDAU\' in table \'CHITIETPCXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETPCXE_TAIXE.THOIGIANBATDAUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THOIGIANKETTHUC {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETPCXE_TAIXE.THOIGIANKETTHUCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THOIGIANKETTHUC\' in table \'CHITIETPCXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETPCXE_TAIXE.THOIGIANKETTHUCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NHAN_VIENRow {
                get {
                    return ((NHAN_VIENRow)(this.GetParentRow(this.Table.ParentRelations["NHAN_VIENCHITIETPCXE_TAIXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NHAN_VIENCHITIETPCXE_TAIXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERow PHANCONGXE_TAIXERow {
                get {
                    return ((PHANCONGXE_TAIXERow)(this.GetParentRow(this.Table.ParentRelations["PHANCONGXE_TAIXECHITIETPCXE_TAIXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PHANCONGXE_TAIXECHITIETPCXE_TAIXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow XERow {
                get {
                    return ((XERow)(this.GetParentRow(this.Table.ParentRelations["XECHITIETPCXE_TAIXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["XECHITIETPCXE_TAIXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAPHANCONGNull() {
                return this.IsNull(this.tableCHITIETPCXE_TAIXE.MAPHANCONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAPHANCONGNull() {
                this[this.tableCHITIETPCXE_TAIXE.MAPHANCONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIENSOXENull() {
                return this.IsNull(this.tableCHITIETPCXE_TAIXE.BIENSOXEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIENSOXENull() {
                this[this.tableCHITIETPCXE_TAIXE.BIENSOXEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATAIXENull() {
                return this.IsNull(this.tableCHITIETPCXE_TAIXE.MATAIXEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATAIXENull() {
                this[this.tableCHITIETPCXE_TAIXE.MATAIXEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHOIGIANBATDAUNull() {
                return this.IsNull(this.tableCHITIETPCXE_TAIXE.THOIGIANBATDAUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHOIGIANBATDAUNull() {
                this[this.tableCHITIETPCXE_TAIXE.THOIGIANBATDAUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHOIGIANKETTHUCNull() {
                return this.IsNull(this.tableCHITIETPCXE_TAIXE.THOIGIANKETTHUCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHOIGIANKETTHUCNull() {
                this[this.tableCHITIETPCXE_TAIXE.THOIGIANKETTHUCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DIA_DIEMRow : global::System.Data.DataRow {
            
            private DIA_DIEMDataTable tableDIA_DIEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DIA_DIEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDIA_DIEM = ((DIA_DIEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MADIADIEM {
                get {
                    return ((int)(this[this.tableDIA_DIEM.MADIADIEMColumn]));
                }
                set {
                    this[this.tableDIA_DIEM.MADIADIEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENDIADIEM {
                get {
                    try {
                        return ((string)(this[this.tableDIA_DIEM.TENDIADIEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENDIADIEM\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.TENDIADIEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIACHI {
                get {
                    try {
                        return ((string)(this[this.tableDIA_DIEM.DIACHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIACHI\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.DIACHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TOADO {
                get {
                    try {
                        return ((string)(this[this.tableDIA_DIEM.TOADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOADO\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.TOADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MALOAI {
                get {
                    try {
                        return ((int)(this[this.tableDIA_DIEM.MALOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MALOAI\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.MALOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SODIENTHOAI {
                get {
                    try {
                        return ((int)(this[this.tableDIA_DIEM.SODIENTHOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SODIENTHOAI\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.SODIENTHOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGUOILIENHE {
                get {
                    try {
                        return ((string)(this[this.tableDIA_DIEM.NGUOILIENHEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGUOILIENHE\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.NGUOILIENHEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableDIA_DIEM.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDIA_DIEM.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRow LOAI_DIA_DIEMRow {
                get {
                    return ((LOAI_DIA_DIEMRow)(this.GetParentRow(this.Table.ParentRelations["LOAI_DIA_DIEMDIA_DIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LOAI_DIA_DIEMDIA_DIEM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENDIADIEMNull() {
                return this.IsNull(this.tableDIA_DIEM.TENDIADIEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENDIADIEMNull() {
                this[this.tableDIA_DIEM.TENDIADIEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIACHINull() {
                return this.IsNull(this.tableDIA_DIEM.DIACHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIACHINull() {
                this[this.tableDIA_DIEM.DIACHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOADONull() {
                return this.IsNull(this.tableDIA_DIEM.TOADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOADONull() {
                this[this.tableDIA_DIEM.TOADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMALOAINull() {
                return this.IsNull(this.tableDIA_DIEM.MALOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMALOAINull() {
                this[this.tableDIA_DIEM.MALOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSODIENTHOAINull() {
                return this.IsNull(this.tableDIA_DIEM.SODIENTHOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSODIENTHOAINull() {
                this[this.tableDIA_DIEM.SODIENTHOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGUOILIENHENull() {
                return this.IsNull(this.tableDIA_DIEM.NGUOILIENHEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGUOILIENHENull() {
                this[this.tableDIA_DIEM.NGUOILIENHEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableDIA_DIEM.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableDIA_DIEM.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow[] GetCHITIET_HOADONRows() {
                if ((this.Table.ChildRelations["DIA_DIEMCHITIET_HOADON"] == null)) {
                    return new CHITIET_HOADONRow[0];
                }
                else {
                    return ((CHITIET_HOADONRow[])(base.GetChildRows(this.Table.ChildRelations["DIA_DIEMCHITIET_HOADON"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HANG_XERow : global::System.Data.DataRow {
            
            private HANG_XEDataTable tableHANG_XE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANG_XERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHANG_XE = ((HANG_XEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAHANG {
                get {
                    return ((int)(this[this.tableHANG_XE.MAHANGColumn]));
                }
                set {
                    this[this.tableHANG_XE.MAHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENHANG {
                get {
                    try {
                        return ((string)(this[this.tableHANG_XE.TENHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENHANG\' in table \'HANG_XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHANG_XE.TENHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENHANGNull() {
                return this.IsNull(this.tableHANG_XE.TENHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENHANGNull() {
                this[this.tableHANG_XE.TENHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow[] GetXERows() {
                if ((this.Table.ChildRelations["HANG_XEXE"] == null)) {
                    return new XERow[0];
                }
                else {
                    return ((XERow[])(base.GetChildRows(this.Table.ChildRelations["HANG_XEXE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HOA_DONRow : global::System.Data.DataRow {
            
            private HOA_DONDataTable tableHOA_DON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOA_DONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHOA_DON = ((HOA_DONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAHOADON {
                get {
                    return ((int)(this[this.tableHOA_DON.MAHOADONColumn]));
                }
                set {
                    this[this.tableHOA_DON.MAHOADONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYGIAOHANG {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHOA_DON.NGAYGIAOHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYGIAOHANG\' in table \'HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOA_DON.NGAYGIAOHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYLAP {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHOA_DON.NGAYLAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYLAP\' in table \'HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOA_DON.NGAYLAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XEGIAOHANG {
                get {
                    try {
                        return ((string)(this[this.tableHOA_DON.XEGIAOHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XEGIAOHANG\' in table \'HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOA_DON.XEGIAOHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow XERow {
                get {
                    return ((XERow)(this.GetParentRow(this.Table.ParentRelations["XEHOA_DON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["XEHOA_DON"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYGIAOHANGNull() {
                return this.IsNull(this.tableHOA_DON.NGAYGIAOHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYGIAOHANGNull() {
                this[this.tableHOA_DON.NGAYGIAOHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYLAPNull() {
                return this.IsNull(this.tableHOA_DON.NGAYLAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYLAPNull() {
                this[this.tableHOA_DON.NGAYLAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXEGIAOHANGNull() {
                return this.IsNull(this.tableHOA_DON.XEGIAOHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXEGIAOHANGNull() {
                this[this.tableHOA_DON.XEGIAOHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow[] GetCHITIET_HOADONRows() {
                if ((this.Table.ChildRelations["HOA_DONCHITIET_HOADON"] == null)) {
                    return new CHITIET_HOADONRow[0];
                }
                else {
                    return ((CHITIET_HOADONRow[])(base.GetChildRows(this.Table.ChildRelations["HOA_DONCHITIET_HOADON"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_DIA_DIEMRow : global::System.Data.DataRow {
            
            private LOAI_DIA_DIEMDataTable tableLOAI_DIA_DIEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_DIA_DIEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_DIA_DIEM = ((LOAI_DIA_DIEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MALOAI {
                get {
                    return ((int)(this[this.tableLOAI_DIA_DIEM.MALOAIColumn]));
                }
                set {
                    this[this.tableLOAI_DIA_DIEM.MALOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENLOAI {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_DIA_DIEM.TENLOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENLOAI\' in table \'LOAI_DIA_DIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_DIA_DIEM.TENLOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENLOAINull() {
                return this.IsNull(this.tableLOAI_DIA_DIEM.TENLOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENLOAINull() {
                this[this.tableLOAI_DIA_DIEM.TENLOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow[] GetDIA_DIEMRows() {
                if ((this.Table.ChildRelations["LOAI_DIA_DIEMDIA_DIEM"] == null)) {
                    return new DIA_DIEMRow[0];
                }
                else {
                    return ((DIA_DIEMRow[])(base.GetChildRows(this.Table.ChildRelations["LOAI_DIA_DIEMDIA_DIEM"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_HANGRow : global::System.Data.DataRow {
            
            private LOAI_HANGDataTable tableLOAI_HANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_HANGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_HANG = ((LOAI_HANGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MALOAI {
                get {
                    return ((int)(this[this.tableLOAI_HANG.MALOAIColumn]));
                }
                set {
                    this[this.tableLOAI_HANG.MALOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENLOAI {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_HANG.TENLOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENLOAI\' in table \'LOAI_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_HANG.TENLOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENLOAINull() {
                return this.IsNull(this.tableLOAI_HANG.TENLOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENLOAINull() {
                this[this.tableLOAI_HANG.TENLOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow[] GetMAT_HANGRows() {
                if ((this.Table.ChildRelations["LOAI_HANGMAT_HANG"] == null)) {
                    return new MAT_HANGRow[0];
                }
                else {
                    return ((MAT_HANGRow[])(base.GetChildRows(this.Table.ChildRelations["LOAI_HANGMAT_HANG"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow[] GetXERows() {
                if ((this.Table.ChildRelations["LOAI_HANGXE"] == null)) {
                    return new XERow[0];
                }
                else {
                    return ((XERow[])(base.GetChildRows(this.Table.ChildRelations["LOAI_HANGXE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_NHAN_VIENRow : global::System.Data.DataRow {
            
            private LOAI_NHAN_VIENDataTable tableLOAI_NHAN_VIEN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_NHAN_VIENRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_NHAN_VIEN = ((LOAI_NHAN_VIENDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ma {
                get {
                    return ((int)(this[this.tableLOAI_NHAN_VIEN.MaColumn]));
                }
                set {
                    this[this.tableLOAI_NHAN_VIEN.MaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenLoai {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_NHAN_VIEN.TenLoaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenLoai\' in table \'LOAI_NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_NHAN_VIEN.TenLoaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenLoaiNull() {
                return this.IsNull(this.tableLOAI_NHAN_VIEN.TenLoaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenLoaiNull() {
                this[this.tableLOAI_NHAN_VIEN.TenLoaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow[] GetNHAN_VIENRows() {
                if ((this.Table.ChildRelations["LOAI_NHAN_VIENNHAN_VIEN"] == null)) {
                    return new NHAN_VIENRow[0];
                }
                else {
                    return ((NHAN_VIENRow[])(base.GetChildRows(this.Table.ChildRelations["LOAI_NHAN_VIENNHAN_VIEN"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MAT_HANGRow : global::System.Data.DataRow {
            
            private MAT_HANGDataTable tableMAT_HANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAT_HANGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMAT_HANG = ((MAT_HANGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAMATHANG {
                get {
                    return ((int)(this[this.tableMAT_HANG.MAMATHANGColumn]));
                }
                set {
                    this[this.tableMAT_HANG.MAMATHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENMATHANG {
                get {
                    try {
                        return ((string)(this[this.tableMAT_HANG.TENMATHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENMATHANG\' in table \'MAT_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAT_HANG.TENMATHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOLUONG {
                get {
                    try {
                        return ((int)(this[this.tableMAT_HANG.SOLUONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOLUONG\' in table \'MAT_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAT_HANG.SOLUONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DONVITINH {
                get {
                    try {
                        return ((string)(this[this.tableMAT_HANG.DONVITINHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DONVITINH\' in table \'MAT_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAT_HANG.DONVITINHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MALOAI {
                get {
                    try {
                        return ((int)(this[this.tableMAT_HANG.MALOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MALOAI\' in table \'MAT_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAT_HANG.MALOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow LOAI_HANGRow {
                get {
                    return ((LOAI_HANGRow)(this.GetParentRow(this.Table.ParentRelations["LOAI_HANGMAT_HANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LOAI_HANGMAT_HANG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENMATHANGNull() {
                return this.IsNull(this.tableMAT_HANG.TENMATHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENMATHANGNull() {
                this[this.tableMAT_HANG.TENMATHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOLUONGNull() {
                return this.IsNull(this.tableMAT_HANG.SOLUONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOLUONGNull() {
                this[this.tableMAT_HANG.SOLUONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONVITINHNull() {
                return this.IsNull(this.tableMAT_HANG.DONVITINHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONVITINHNull() {
                this[this.tableMAT_HANG.DONVITINHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMALOAINull() {
                return this.IsNull(this.tableMAT_HANG.MALOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMALOAINull() {
                this[this.tableMAT_HANG.MALOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow[] GetCHITIET_HOADONRows() {
                if ((this.Table.ChildRelations["MAT_HANGCHITIET_HOADON"] == null)) {
                    return new CHITIET_HOADONRow[0];
                }
                else {
                    return ((CHITIET_HOADONRow[])(base.GetChildRows(this.Table.ChildRelations["MAT_HANGCHITIET_HOADON"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NHAN_VIENRow : global::System.Data.DataRow {
            
            private NHAN_VIENDataTable tableNHAN_VIEN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NHAN_VIENRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNHAN_VIEN = ((NHAN_VIENDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MANHANVIEN {
                get {
                    return ((int)(this[this.tableNHAN_VIEN.MANHANVIENColumn]));
                }
                set {
                    this[this.tableNHAN_VIEN.MANHANVIENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENNHANVIEN {
                get {
                    try {
                        return ((string)(this[this.tableNHAN_VIEN.TENNHANVIENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENNHANVIEN\' in table \'NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNHAN_VIEN.TENNHANVIENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SODIENTHOAI {
                get {
                    try {
                        return ((string)(this[this.tableNHAN_VIEN.SODIENTHOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SODIENTHOAI\' in table \'NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNHAN_VIEN.SODIENTHOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayVaoCongTy {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNHAN_VIEN.NgayVaoCongTyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NgayVaoCongTy\' in table \'NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNHAN_VIEN.NgayVaoCongTyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaLoaiNhanVien {
                get {
                    try {
                        return ((int)(this[this.tableNHAN_VIEN.MaLoaiNhanVienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaLoaiNhanVien\' in table \'NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNHAN_VIEN.MaLoaiNhanVienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRow LOAI_NHAN_VIENRow {
                get {
                    return ((LOAI_NHAN_VIENRow)(this.GetParentRow(this.Table.ParentRelations["LOAI_NHAN_VIENNHAN_VIEN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LOAI_NHAN_VIENNHAN_VIEN"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNHANVIENNull() {
                return this.IsNull(this.tableNHAN_VIEN.TENNHANVIENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNHANVIENNull() {
                this[this.tableNHAN_VIEN.TENNHANVIENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSODIENTHOAINull() {
                return this.IsNull(this.tableNHAN_VIEN.SODIENTHOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSODIENTHOAINull() {
                this[this.tableNHAN_VIEN.SODIENTHOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayVaoCongTyNull() {
                return this.IsNull(this.tableNHAN_VIEN.NgayVaoCongTyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayVaoCongTyNull() {
                this[this.tableNHAN_VIEN.NgayVaoCongTyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaLoaiNhanVienNull() {
                return this.IsNull(this.tableNHAN_VIEN.MaLoaiNhanVienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaLoaiNhanVienNull() {
                this[this.tableNHAN_VIEN.MaLoaiNhanVienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURow[] GetCAP_NHIEN_LIEURows() {
                if ((this.Table.ChildRelations["NHAN_VIENCAP_NHIEN_LIEU"] == null)) {
                    return new CAP_NHIEN_LIEURow[0];
                }
                else {
                    return ((CAP_NHIEN_LIEURow[])(base.GetChildRows(this.Table.ChildRelations["NHAN_VIENCAP_NHIEN_LIEU"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow[] GetCHITIETPCXE_TAIXERows() {
                if ((this.Table.ChildRelations["NHAN_VIENCHITIETPCXE_TAIXE"] == null)) {
                    return new CHITIETPCXE_TAIXERow[0];
                }
                else {
                    return ((CHITIETPCXE_TAIXERow[])(base.GetChildRows(this.Table.ChildRelations["NHAN_VIENCHITIETPCXE_TAIXE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow[] GetXERows() {
                if ((this.Table.ChildRelations["NHAN_VIENXE"] == null)) {
                    return new XERow[0];
                }
                else {
                    return ((XERow[])(base.GetChildRows(this.Table.ChildRelations["NHAN_VIENXE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHANCONGXE_TAIXERow : global::System.Data.DataRow {
            
            private PHANCONGXE_TAIXEDataTable tablePHANCONGXE_TAIXE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHANCONGXE_TAIXERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHANCONGXE_TAIXE = ((PHANCONGXE_TAIXEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAPHANCONG {
                get {
                    return ((int)(this[this.tablePHANCONGXE_TAIXE.MAPHANCONGColumn]));
                }
                set {
                    this[this.tablePHANCONGXE_TAIXE.MAPHANCONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYPHANCONG {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePHANCONGXE_TAIXE.NGAYPHANCONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYPHANCONG\' in table \'PHANCONGXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHANCONGXE_TAIXE.NGAYPHANCONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MANHANVIENPHANCONG {
                get {
                    try {
                        return ((int)(this[this.tablePHANCONGXE_TAIXE.MANHANVIENPHANCONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MANHANVIENPHANCONG\' in table \'PHANCONGXE_TAIXE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHANCONGXE_TAIXE.MANHANVIENPHANCONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYPHANCONGNull() {
                return this.IsNull(this.tablePHANCONGXE_TAIXE.NGAYPHANCONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYPHANCONGNull() {
                this[this.tablePHANCONGXE_TAIXE.NGAYPHANCONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANHANVIENPHANCONGNull() {
                return this.IsNull(this.tablePHANCONGXE_TAIXE.MANHANVIENPHANCONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANHANVIENPHANCONGNull() {
                this[this.tablePHANCONGXE_TAIXE.MANHANVIENPHANCONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow[] GetCHITIETPCXE_TAIXERows() {
                if ((this.Table.ChildRelations["PHANCONGXE_TAIXECHITIETPCXE_TAIXE"] == null)) {
                    return new CHITIETPCXE_TAIXERow[0];
                }
                else {
                    return ((CHITIETPCXE_TAIXERow[])(base.GetChildRows(this.Table.ChildRelations["PHANCONGXE_TAIXECHITIETPCXE_TAIXE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class THAMSORow : global::System.Data.DataRow {
            
            private THAMSODataTable tableTHAMSO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THAMSORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHAMSO = ((THAMSODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ma {
                get {
                    return ((int)(this[this.tableTHAMSO.MaColumn]));
                }
                set {
                    this[this.tableTHAMSO.MaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENTHAMSO {
                get {
                    try {
                        return ((string)(this[this.tableTHAMSO.TENTHAMSOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENTHAMSO\' in table \'THAMSO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHAMSO.TENTHAMSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GiaTri {
                get {
                    try {
                        return ((string)(this[this.tableTHAMSO.GiaTriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiaTri\' in table \'THAMSO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHAMSO.GiaTriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENTHAMSONull() {
                return this.IsNull(this.tableTHAMSO.TENTHAMSOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENTHAMSONull() {
                this[this.tableTHAMSO.TENTHAMSOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiaTriNull() {
                return this.IsNull(this.tableTHAMSO.GiaTriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiaTriNull() {
                this[this.tableTHAMSO.GiaTriColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TRANG_THAIRow : global::System.Data.DataRow {
            
            private TRANG_THAIDataTable tableTRANG_THAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANG_THAIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRANG_THAI = ((TRANG_THAIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MATRANGTHAI {
                get {
                    return ((int)(this[this.tableTRANG_THAI.MATRANGTHAIColumn]));
                }
                set {
                    this[this.tableTRANG_THAI.MATRANGTHAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENTRANGTHAI {
                get {
                    try {
                        return ((string)(this[this.tableTRANG_THAI.TENTRANGTHAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENTRANGTHAI\' in table \'TRANG_THAI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRANG_THAI.TENTRANGTHAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENTRANGTHAINull() {
                return this.IsNull(this.tableTRANG_THAI.TENTRANGTHAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENTRANGTHAINull() {
                this[this.tableTRANG_THAI.TENTRANGTHAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow[] GetCHITIET_HOADONRows() {
                if ((this.Table.ChildRelations["TRANG_THAICHITIET_HOADON"] == null)) {
                    return new CHITIET_HOADONRow[0];
                }
                else {
                    return ((CHITIET_HOADONRow[])(base.GetChildRows(this.Table.ChildRelations["TRANG_THAICHITIET_HOADON"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TRONG_TAIRow : global::System.Data.DataRow {
            
            private TRONG_TAIDataTable tableTRONG_TAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRONG_TAIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRONG_TAI = ((TRONG_TAIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MATRONGTAI {
                get {
                    return ((int)(this[this.tableTRONG_TAI.MATRONGTAIColumn]));
                }
                set {
                    this[this.tableTRONG_TAI.MATRONGTAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GIATRI {
                get {
                    try {
                        return ((int)(this[this.tableTRONG_TAI.GIATRIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GIATRI\' in table \'TRONG_TAI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRONG_TAI.GIATRIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DONVI {
                get {
                    try {
                        return ((string)(this[this.tableTRONG_TAI.DONVIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DONVI\' in table \'TRONG_TAI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRONG_TAI.DONVIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIATRINull() {
                return this.IsNull(this.tableTRONG_TAI.GIATRIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIATRINull() {
                this[this.tableTRONG_TAI.GIATRIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONVINull() {
                return this.IsNull(this.tableTRONG_TAI.DONVIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONVINull() {
                this[this.tableTRONG_TAI.DONVIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow[] GetXERows() {
                if ((this.Table.ChildRelations["TRONG_TAIXE"] == null)) {
                    return new XERow[0];
                }
                else {
                    return ((XERow[])(base.GetChildRows(this.Table.ChildRelations["TRONG_TAIXE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class XERow : global::System.Data.DataRow {
            
            private XEDataTable tableXE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal XERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableXE = ((XEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIENSO {
                get {
                    return ((string)(this[this.tableXE.BIENSOColumn]));
                }
                set {
                    this[this.tableXE.BIENSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYTIEPNHAN {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableXE.NGAYTIEPNHANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYTIEPNHAN\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.NGAYTIEPNHANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAMSANXUAT {
                get {
                    try {
                        return ((int)(this[this.tableXE.NAMSANXUATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMSANXUAT\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.NAMSANXUATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MAHANGXE {
                get {
                    try {
                        return ((int)(this[this.tableXE.MAHANGXEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAHANGXE\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.MAHANGXEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYDANGKIEM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableXE.NGAYDANGKIEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYDANGKIEM\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.NGAYDANGKIEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIEUXE {
                get {
                    try {
                        return ((string)(this[this.tableXE.HIEUXEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIEUXE\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.HIEUXEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOKHUNG {
                get {
                    try {
                        return ((string)(this[this.tableXE.SOKHUNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOKHUNG\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.SOKHUNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOMAY {
                get {
                    try {
                        return ((string)(this[this.tableXE.SOMAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOMAY\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.SOMAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MATRONGTAI {
                get {
                    try {
                        return ((int)(this[this.tableXE.MATRONGTAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATRONGTAI\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.MATRONGTAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MALOAIHANG {
                get {
                    try {
                        return ((int)(this[this.tableXE.MALOAIHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MALOAIHANG\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.MALOAIHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MANHANVIENTIEPNHAN {
                get {
                    try {
                        return ((int)(this[this.tableXE.MANHANVIENTIEPNHANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MANHANVIENTIEPNHAN\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.MANHANVIENTIEPNHANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DINHMUC {
                get {
                    try {
                        return ((double)(this[this.tableXE.DINHMUCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DINHMUC\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.DINHMUCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DUNGTICHBINH {
                get {
                    try {
                        return ((double)(this[this.tableXE.DUNGTICHBINHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUNGTICHBINH\' in table \'XE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXE.DUNGTICHBINHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERow HANG_XERow {
                get {
                    return ((HANG_XERow)(this.GetParentRow(this.Table.ParentRelations["HANG_XEXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HANG_XEXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow LOAI_HANGRow {
                get {
                    return ((LOAI_HANGRow)(this.GetParentRow(this.Table.ParentRelations["LOAI_HANGXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LOAI_HANGXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NHAN_VIENRow {
                get {
                    return ((NHAN_VIENRow)(this.GetParentRow(this.Table.ParentRelations["NHAN_VIENXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NHAN_VIENXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRow TRONG_TAIRow {
                get {
                    return ((TRONG_TAIRow)(this.GetParentRow(this.Table.ParentRelations["TRONG_TAIXE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TRONG_TAIXE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYTIEPNHANNull() {
                return this.IsNull(this.tableXE.NGAYTIEPNHANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYTIEPNHANNull() {
                this[this.tableXE.NGAYTIEPNHANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMSANXUATNull() {
                return this.IsNull(this.tableXE.NAMSANXUATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMSANXUATNull() {
                this[this.tableXE.NAMSANXUATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAHANGXENull() {
                return this.IsNull(this.tableXE.MAHANGXEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAHANGXENull() {
                this[this.tableXE.MAHANGXEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYDANGKIEMNull() {
                return this.IsNull(this.tableXE.NGAYDANGKIEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYDANGKIEMNull() {
                this[this.tableXE.NGAYDANGKIEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIEUXENull() {
                return this.IsNull(this.tableXE.HIEUXEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIEUXENull() {
                this[this.tableXE.HIEUXEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOKHUNGNull() {
                return this.IsNull(this.tableXE.SOKHUNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOKHUNGNull() {
                this[this.tableXE.SOKHUNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOMAYNull() {
                return this.IsNull(this.tableXE.SOMAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOMAYNull() {
                this[this.tableXE.SOMAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMATRONGTAINull() {
                return this.IsNull(this.tableXE.MATRONGTAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMATRONGTAINull() {
                this[this.tableXE.MATRONGTAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMALOAIHANGNull() {
                return this.IsNull(this.tableXE.MALOAIHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMALOAIHANGNull() {
                this[this.tableXE.MALOAIHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANHANVIENTIEPNHANNull() {
                return this.IsNull(this.tableXE.MANHANVIENTIEPNHANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANHANVIENTIEPNHANNull() {
                this[this.tableXE.MANHANVIENTIEPNHANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDINHMUCNull() {
                return this.IsNull(this.tableXE.DINHMUCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDINHMUCNull() {
                this[this.tableXE.DINHMUCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDUNGTICHBINHNull() {
                return this.IsNull(this.tableXE.DUNGTICHBINHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDUNGTICHBINHNull() {
                this[this.tableXE.DUNGTICHBINHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURow[] GetCHITIET_CAPNHIENLIEURows() {
                if ((this.Table.ChildRelations["XECHITIET_CAPNHIENLIEU"] == null)) {
                    return new CHITIET_CAPNHIENLIEURow[0];
                }
                else {
                    return ((CHITIET_CAPNHIENLIEURow[])(base.GetChildRows(this.Table.ChildRelations["XECHITIET_CAPNHIENLIEU"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow[] GetCHITIETPCXE_TAIXERows() {
                if ((this.Table.ChildRelations["XECHITIETPCXE_TAIXE"] == null)) {
                    return new CHITIETPCXE_TAIXERow[0];
                }
                else {
                    return ((CHITIETPCXE_TAIXERow[])(base.GetChildRows(this.Table.ChildRelations["XECHITIETPCXE_TAIXE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow[] GetHOA_DONRows() {
                if ((this.Table.ChildRelations["XEHOA_DON"] == null)) {
                    return new HOA_DONRow[0];
                }
                else {
                    return ((HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["XEHOA_DON"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CAP_NHIEN_LIEURowChangeEvent : global::System.EventArgs {
            
            private CAP_NHIEN_LIEURow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURowChangeEvent(CAP_NHIEN_LIEURow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAP_NHIEN_LIEURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHITIET_CAPNHIENLIEURowChangeEvent : global::System.EventArgs {
            
            private CHITIET_CAPNHIENLIEURow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURowChangeEvent(CHITIET_CAPNHIENLIEURow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_CAPNHIENLIEURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHITIET_HOADONRowChangeEvent : global::System.EventArgs {
            
            private CHITIET_HOADONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRowChangeEvent(CHITIET_HOADONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIET_HOADONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHITIETPCXE_TAIXERowChangeEvent : global::System.EventArgs {
            
            private CHITIETPCXE_TAIXERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERowChangeEvent(CHITIETPCXE_TAIXERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETPCXE_TAIXERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DIA_DIEMRowChangeEvent : global::System.EventArgs {
            
            private DIA_DIEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRowChangeEvent(DIA_DIEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DIA_DIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HANG_XERowChangeEvent : global::System.EventArgs {
            
            private HANG_XERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERowChangeEvent(HANG_XERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_XERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HOA_DONRowChangeEvent : global::System.EventArgs {
            
            private HOA_DONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRowChangeEvent(HOA_DONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_DIA_DIEMRowChangeEvent : global::System.EventArgs {
            
            private LOAI_DIA_DIEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRowChangeEvent(LOAI_DIA_DIEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DIA_DIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_HANGRowChangeEvent : global::System.EventArgs {
            
            private LOAI_HANGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRowChangeEvent(LOAI_HANGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_HANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_NHAN_VIENRowChangeEvent : global::System.EventArgs {
            
            private LOAI_NHAN_VIENRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRowChangeEvent(LOAI_NHAN_VIENRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NHAN_VIENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MAT_HANGRowChangeEvent : global::System.EventArgs {
            
            private MAT_HANGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRowChangeEvent(MAT_HANGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_HANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NHAN_VIENRowChangeEvent : global::System.EventArgs {
            
            private NHAN_VIENRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRowChangeEvent(NHAN_VIENRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHANCONGXE_TAIXERowChangeEvent : global::System.EventArgs {
            
            private PHANCONGXE_TAIXERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERowChangeEvent(PHANCONGXE_TAIXERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHANCONGXE_TAIXERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class THAMSORowChangeEvent : global::System.EventArgs {
            
            private THAMSORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSORowChangeEvent(THAMSORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAMSORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TRANG_THAIRowChangeEvent : global::System.EventArgs {
            
            private TRANG_THAIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRowChangeEvent(TRANG_THAIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANG_THAIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TRONG_TAIRowChangeEvent : global::System.EventArgs {
            
            private TRONG_TAIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRowChangeEvent(TRONG_TAIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRONG_TAIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class XERowChangeEvent : global::System.EventArgs {
            
            private XERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERowChangeEvent(XERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GUI.Db_QuanLyDoiXeVinamilkDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAP_NHIEN_LIEUTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CAP_NHIEN_LIEUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAP_NHIEN_LIEU";
            tableMapping.ColumnMappings.Add("MA", "MA");
            tableMapping.ColumnMappings.Add("NGAYCAP", "NGAYCAP");
            tableMapping.ColumnMappings.Add("MANHANVIENCAP", "MANHANVIENCAP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `CAP_NHIEN_LIEU` WHERE ((`MA` = ?) AND ((? = 1 AND `NGAYCAP` IS NULL)" +
                " OR (`NGAYCAP` = ?)) AND ((? = 1 AND `MANHANVIENCAP` IS NULL) OR (`MANHANVIENCAP" +
                "` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYCAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYCAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MANHANVIENCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIENCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENCAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `CAP_NHIEN_LIEU` (`NGAYCAP`, `MANHANVIENCAP`) VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYCAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MANHANVIENCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `CAP_NHIEN_LIEU` SET `NGAYCAP` = ?, `MANHANVIENCAP` = ? WHERE ((`MA` = ?) " +
                "AND ((? = 1 AND `NGAYCAP` IS NULL) OR (`NGAYCAP` = ?)) AND ((? = 1 AND `MANHANVI" +
                "ENCAP` IS NULL) OR (`MANHANVIENCAP` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYCAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MANHANVIENCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYCAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYCAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MANHANVIENCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIENCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENCAP", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MA, NGAYCAP, MANHANVIENCAP FROM CAP_NHIEN_LIEU";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.CAP_NHIEN_LIEUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.CAP_NHIEN_LIEUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.CAP_NHIEN_LIEUDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.CAP_NHIEN_LIEUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.CAP_NHIEN_LIEUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CAP_NHIEN_LIEU");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MA, global::System.Nullable<global::System.DateTime> Original_NGAYCAP, global::System.Nullable<int> Original_MANHANVIENCAP) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MA));
            if ((Original_NGAYCAP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_NGAYCAP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MANHANVIENCAP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MANHANVIENCAP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> NGAYCAP, global::System.Nullable<int> MANHANVIENCAP) {
            if ((NGAYCAP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(NGAYCAP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MANHANVIENCAP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MANHANVIENCAP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> NGAYCAP, global::System.Nullable<int> MANHANVIENCAP, int Original_MA, global::System.Nullable<global::System.DateTime> Original_NGAYCAP, global::System.Nullable<int> Original_MANHANVIENCAP) {
            if ((NGAYCAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(NGAYCAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MANHANVIENCAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MANHANVIENCAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_MA));
            if ((Original_NGAYCAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_NGAYCAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MANHANVIENCAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_MANHANVIENCAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHITIET_CAPNHIENLIEUTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHITIET_CAPNHIENLIEUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHITIET_CAPNHIENLIEU";
            tableMapping.ColumnMappings.Add("MACHITIET", "MACHITIET");
            tableMapping.ColumnMappings.Add("MACAPNHIENLIEU", "MACAPNHIENLIEU");
            tableMapping.ColumnMappings.Add("BIENSOXEDUOCAP", "BIENSOXEDUOCAP");
            tableMapping.ColumnMappings.Add("CHISOCU", "CHISOCU");
            tableMapping.ColumnMappings.Add("SOLITCAP", "SOLITCAP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `CHITIET_CAPNHIENLIEU` WHERE ((`MACHITIET` = ?) AND ((? = 1 AND `MACAPNHIENLIEU` IS NULL) OR (`MACAPNHIENLIEU` = ?)) AND ((? = 1 AND `BIENSOXEDUOCAP` IS NULL) OR (`BIENSOXEDUOCAP` = ?)) AND ((? = 1 AND `CHISOCU` IS NULL) OR (`CHISOCU` = ?)) AND ((? = 1 AND `SOLITCAP` IS NULL) OR (`SOLITCAP` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MACHITIET", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACHITIET", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MACAPNHIENLIEU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACAPNHIENLIEU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MACAPNHIENLIEU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACAPNHIENLIEU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BIENSOXEDUOCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXEDUOCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BIENSOXEDUOCAP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXEDUOCAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CHISOCU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CHISOCU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CHISOCU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CHISOCU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOLITCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLITCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOLITCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLITCAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `CHITIET_CAPNHIENLIEU` (`MACAPNHIENLIEU`, `BIENSOXEDUOCAP`, `CHISOCU`" +
                ", `SOLITCAP`) VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MACAPNHIENLIEU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACAPNHIENLIEU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BIENSOXEDUOCAP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXEDUOCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CHISOCU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CHISOCU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOLITCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLITCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `CHITIET_CAPNHIENLIEU` SET `MACAPNHIENLIEU` = ?, `BIENSOXEDUOCAP` = ?, `CHISOCU` = ?, `SOLITCAP` = ? WHERE ((`MACHITIET` = ?) AND ((? = 1 AND `MACAPNHIENLIEU` IS NULL) OR (`MACAPNHIENLIEU` = ?)) AND ((? = 1 AND `BIENSOXEDUOCAP` IS NULL) OR (`BIENSOXEDUOCAP` = ?)) AND ((? = 1 AND `CHISOCU` IS NULL) OR (`CHISOCU` = ?)) AND ((? = 1 AND `SOLITCAP` IS NULL) OR (`SOLITCAP` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MACAPNHIENLIEU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACAPNHIENLIEU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BIENSOXEDUOCAP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXEDUOCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CHISOCU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CHISOCU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOLITCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLITCAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MACHITIET", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACHITIET", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MACAPNHIENLIEU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACAPNHIENLIEU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MACAPNHIENLIEU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACAPNHIENLIEU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BIENSOXEDUOCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXEDUOCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BIENSOXEDUOCAP", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXEDUOCAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CHISOCU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CHISOCU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CHISOCU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CHISOCU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOLITCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLITCAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOLITCAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLITCAP", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MACHITIET, MACAPNHIENLIEU, BIENSOXEDUOCAP, CHISOCU, SOLITCAP FROM CHITIET_" +
                "CAPNHIENLIEU";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.CHITIET_CAPNHIENLIEUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.CHITIET_CAPNHIENLIEUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.CHITIET_CAPNHIENLIEUDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.CHITIET_CAPNHIENLIEUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.CHITIET_CAPNHIENLIEUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHITIET_CAPNHIENLIEU");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MACHITIET, string Original_MACAPNHIENLIEU, string Original_BIENSOXEDUOCAP, global::System.Nullable<int> Original_CHISOCU, global::System.Nullable<int> Original_SOLITCAP) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MACHITIET));
            if ((Original_MACAPNHIENLIEU == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MACAPNHIENLIEU));
            }
            if ((Original_BIENSOXEDUOCAP == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BIENSOXEDUOCAP));
            }
            if ((Original_CHISOCU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_CHISOCU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SOLITCAP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SOLITCAP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MACAPNHIENLIEU, string BIENSOXEDUOCAP, global::System.Nullable<int> CHISOCU, global::System.Nullable<int> SOLITCAP) {
            if ((MACAPNHIENLIEU == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MACAPNHIENLIEU));
            }
            if ((BIENSOXEDUOCAP == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BIENSOXEDUOCAP));
            }
            if ((CHISOCU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(CHISOCU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SOLITCAP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SOLITCAP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MACAPNHIENLIEU, string BIENSOXEDUOCAP, global::System.Nullable<int> CHISOCU, global::System.Nullable<int> SOLITCAP, int Original_MACHITIET, string Original_MACAPNHIENLIEU, string Original_BIENSOXEDUOCAP, global::System.Nullable<int> Original_CHISOCU, global::System.Nullable<int> Original_SOLITCAP) {
            if ((MACAPNHIENLIEU == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MACAPNHIENLIEU));
            }
            if ((BIENSOXEDUOCAP == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BIENSOXEDUOCAP));
            }
            if ((CHISOCU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CHISOCU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SOLITCAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SOLITCAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_MACHITIET));
            if ((Original_MACAPNHIENLIEU == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MACAPNHIENLIEU));
            }
            if ((Original_BIENSOXEDUOCAP == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_BIENSOXEDUOCAP));
            }
            if ((Original_CHISOCU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_CHISOCU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_SOLITCAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_SOLITCAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHITIET_HOADONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHITIET_HOADONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHITIET_HOADON";
            tableMapping.ColumnMappings.Add("MACHITIET", "MACHITIET");
            tableMapping.ColumnMappings.Add("MAHOADON", "MAHOADON");
            tableMapping.ColumnMappings.Add("MADIADIEM", "MADIADIEM");
            tableMapping.ColumnMappings.Add("MAMATHANG", "MAMATHANG");
            tableMapping.ColumnMappings.Add("SOLUONG", "SOLUONG");
            tableMapping.ColumnMappings.Add("MATRANGTHAI", "MATRANGTHAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `CHITIET_HOADON` WHERE ((`MACHITIET` = ?) AND ((? = 1 AND `MAHOADON` IS NULL) OR (`MAHOADON` = ?)) AND ((? = 1 AND `MADIADIEM` IS NULL) OR (`MADIADIEM` = ?)) AND ((? = 1 AND `MAMATHANG` IS NULL) OR (`MAMATHANG` = ?)) AND ((? = 1 AND `SOLUONG` IS NULL) OR (`SOLUONG` = ?)) AND ((? = 1 AND `MATRANGTHAI` IS NULL) OR (`MATRANGTHAI` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MACHITIET", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACHITIET", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `CHITIET_HOADON` (`MAHOADON`, `MADIADIEM`, `MAMATHANG`, `SOLUONG`, `M" +
                "ATRANGTHAI`) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `CHITIET_HOADON` SET `MAHOADON` = ?, `MADIADIEM` = ?, `MAMATHANG` = ?, `SOLUONG` = ?, `MATRANGTHAI` = ? WHERE ((`MACHITIET` = ?) AND ((? = 1 AND `MAHOADON` IS NULL) OR (`MAHOADON` = ?)) AND ((? = 1 AND `MADIADIEM` IS NULL) OR (`MADIADIEM` = ?)) AND ((? = 1 AND `MAMATHANG` IS NULL) OR (`MAMATHANG` = ?)) AND ((? = 1 AND `SOLUONG` IS NULL) OR (`SOLUONG` = ?)) AND ((? = 1 AND `MATRANGTHAI` IS NULL) OR (`MATRANGTHAI` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MACHITIET", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MACHITIET", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MACHITIET, MAHOADON, MADIADIEM, MAMATHANG, SOLUONG, MATRANGTHAI FROM CHITI" +
                "ET_HOADON";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.CHITIET_HOADONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.CHITIET_HOADONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.CHITIET_HOADONDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.CHITIET_HOADONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.CHITIET_HOADONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHITIET_HOADON");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MACHITIET, global::System.Nullable<int> Original_MAHOADON, global::System.Nullable<int> Original_MADIADIEM, global::System.Nullable<int> Original_MAMATHANG, global::System.Nullable<int> Original_SOLUONG, global::System.Nullable<int> Original_MATRANGTHAI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MACHITIET));
            if ((Original_MAHOADON.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MAHOADON.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MADIADIEM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MADIADIEM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MAMATHANG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_MAMATHANG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SOLUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SOLUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_MATRANGTHAI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_MATRANGTHAI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> MAHOADON, global::System.Nullable<int> MADIADIEM, global::System.Nullable<int> MAMATHANG, global::System.Nullable<int> SOLUONG, global::System.Nullable<int> MATRANGTHAI) {
            if ((MAHOADON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MAHOADON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MADIADIEM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MADIADIEM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MAMATHANG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(MAMATHANG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SOLUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SOLUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MATRANGTHAI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(MATRANGTHAI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> MAHOADON, global::System.Nullable<int> MADIADIEM, global::System.Nullable<int> MAMATHANG, global::System.Nullable<int> SOLUONG, global::System.Nullable<int> MATRANGTHAI, int Original_MACHITIET, global::System.Nullable<int> Original_MAHOADON, global::System.Nullable<int> Original_MADIADIEM, global::System.Nullable<int> Original_MAMATHANG, global::System.Nullable<int> Original_SOLUONG, global::System.Nullable<int> Original_MATRANGTHAI) {
            if ((MAHOADON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(MAHOADON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MADIADIEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MADIADIEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MAMATHANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(MAMATHANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SOLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SOLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MATRANGTHAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(MATRANGTHAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_MACHITIET));
            if ((Original_MAHOADON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_MAHOADON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MADIADIEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_MADIADIEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_MAMATHANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_MAMATHANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_SOLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_SOLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MATRANGTHAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_MATRANGTHAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHITIETPCXE_TAIXETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHITIETPCXE_TAIXETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHITIETPCXE_TAIXE";
            tableMapping.ColumnMappings.Add("MA", "MA");
            tableMapping.ColumnMappings.Add("MAPHANCONG", "MAPHANCONG");
            tableMapping.ColumnMappings.Add("BIENSOXE", "BIENSOXE");
            tableMapping.ColumnMappings.Add("MATAIXE", "MATAIXE");
            tableMapping.ColumnMappings.Add("THOIGIANBATDAU", "THOIGIANBATDAU");
            tableMapping.ColumnMappings.Add("THOIGIANKETTHUC", "THOIGIANKETTHUC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `CHITIETPCXE_TAIXE` WHERE ((`MA` = ?) AND ((? = 1 AND `MAPHANCONG` IS NULL) OR (`MAPHANCONG` = ?)) AND ((? = 1 AND `BIENSOXE` IS NULL) OR (`BIENSOXE` = ?)) AND ((? = 1 AND `MATAIXE` IS NULL) OR (`MATAIXE` = ?)) AND ((? = 1 AND `THOIGIANBATDAU` IS NULL) OR (`THOIGIANBATDAU` = ?)) AND ((? = 1 AND `THOIGIANKETTHUC` IS NULL) OR (`THOIGIANKETTHUC` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BIENSOXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BIENSOXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MATAIXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATAIXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATAIXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATAIXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_THOIGIANBATDAU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANBATDAU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_THOIGIANBATDAU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANBATDAU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_THOIGIANKETTHUC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANKETTHUC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_THOIGIANKETTHUC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANKETTHUC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `CHITIETPCXE_TAIXE` (`MAPHANCONG`, `BIENSOXE`, `MATAIXE`, `THOIGIANBA" +
                "TDAU`, `THOIGIANKETTHUC`) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BIENSOXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MATAIXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATAIXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("THOIGIANBATDAU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANBATDAU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("THOIGIANKETTHUC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANKETTHUC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `CHITIETPCXE_TAIXE` SET `MAPHANCONG` = ?, `BIENSOXE` = ?, `MATAIXE` = ?, `THOIGIANBATDAU` = ?, `THOIGIANKETTHUC` = ? WHERE ((`MA` = ?) AND ((? = 1 AND `MAPHANCONG` IS NULL) OR (`MAPHANCONG` = ?)) AND ((? = 1 AND `BIENSOXE` IS NULL) OR (`BIENSOXE` = ?)) AND ((? = 1 AND `MATAIXE` IS NULL) OR (`MATAIXE` = ?)) AND ((? = 1 AND `THOIGIANBATDAU` IS NULL) OR (`THOIGIANBATDAU` = ?)) AND ((? = 1 AND `THOIGIANKETTHUC` IS NULL) OR (`THOIGIANKETTHUC` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BIENSOXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MATAIXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATAIXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("THOIGIANBATDAU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANBATDAU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("THOIGIANKETTHUC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANKETTHUC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BIENSOXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BIENSOXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSOXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MATAIXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATAIXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATAIXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATAIXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_THOIGIANBATDAU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANBATDAU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_THOIGIANBATDAU", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANBATDAU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_THOIGIANKETTHUC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANKETTHUC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_THOIGIANKETTHUC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "THOIGIANKETTHUC", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MA, MAPHANCONG, BIENSOXE, MATAIXE, THOIGIANBATDAU, THOIGIANKETTHUC FROM CH" +
                "ITIETPCXE_TAIXE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.CHITIETPCXE_TAIXEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.CHITIETPCXE_TAIXEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.CHITIETPCXE_TAIXEDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.CHITIETPCXE_TAIXEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.CHITIETPCXE_TAIXEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHITIETPCXE_TAIXE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MA, global::System.Nullable<int> Original_MAPHANCONG, string Original_BIENSOXE, global::System.Nullable<int> Original_MATAIXE, string Original_THOIGIANBATDAU, string Original_THOIGIANKETTHUC) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MA));
            if ((Original_MAPHANCONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MAPHANCONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_BIENSOXE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BIENSOXE));
            }
            if ((Original_MATAIXE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_MATAIXE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_THOIGIANBATDAU == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_THOIGIANBATDAU));
            }
            if ((Original_THOIGIANKETTHUC == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_THOIGIANKETTHUC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> MAPHANCONG, string BIENSOXE, global::System.Nullable<int> MATAIXE, string THOIGIANBATDAU, string THOIGIANKETTHUC) {
            if ((MAPHANCONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MAPHANCONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BIENSOXE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BIENSOXE));
            }
            if ((MATAIXE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(MATAIXE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((THOIGIANBATDAU == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(THOIGIANBATDAU));
            }
            if ((THOIGIANKETTHUC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(THOIGIANKETTHUC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> MAPHANCONG, string BIENSOXE, global::System.Nullable<int> MATAIXE, string THOIGIANBATDAU, string THOIGIANKETTHUC, int Original_MA, global::System.Nullable<int> Original_MAPHANCONG, string Original_BIENSOXE, global::System.Nullable<int> Original_MATAIXE, string Original_THOIGIANBATDAU, string Original_THOIGIANKETTHUC) {
            if ((MAPHANCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(MAPHANCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BIENSOXE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BIENSOXE));
            }
            if ((MATAIXE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(MATAIXE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((THOIGIANBATDAU == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(THOIGIANBATDAU));
            }
            if ((THOIGIANKETTHUC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(THOIGIANKETTHUC));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_MA));
            if ((Original_MAPHANCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_MAPHANCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_BIENSOXE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_BIENSOXE));
            }
            if ((Original_MATAIXE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_MATAIXE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_THOIGIANBATDAU == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_THOIGIANBATDAU));
            }
            if ((Original_THOIGIANKETTHUC == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_THOIGIANKETTHUC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DIA_DIEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DIA_DIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DIA_DIEM";
            tableMapping.ColumnMappings.Add("MADIADIEM", "MADIADIEM");
            tableMapping.ColumnMappings.Add("TENDIADIEM", "TENDIADIEM");
            tableMapping.ColumnMappings.Add("DIACHI", "DIACHI");
            tableMapping.ColumnMappings.Add("TOADO", "TOADO");
            tableMapping.ColumnMappings.Add("MALOAI", "MALOAI");
            tableMapping.ColumnMappings.Add("SODIENTHOAI", "SODIENTHOAI");
            tableMapping.ColumnMappings.Add("NGUOILIENHE", "NGUOILIENHE");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `DIA_DIEM` WHERE ((`MADIADIEM` = ?) AND ((? = 1 AND `TENDIADIEM` IS NULL) OR (`TENDIADIEM` = ?)) AND ((? = 1 AND `DIACHI` IS NULL) OR (`DIACHI` = ?)) AND ((? = 1 AND `TOADO` IS NULL) OR (`TOADO` = ?)) AND ((? = 1 AND `MALOAI` IS NULL) OR (`MALOAI` = ?)) AND ((? = 1 AND `SODIENTHOAI` IS NULL) OR (`SODIENTHOAI` = ?)) AND ((? = 1 AND `NGUOILIENHE` IS NULL) OR (`NGUOILIENHE` = ?)) AND ((? = 1 AND `EMAIL` IS NULL) OR (`EMAIL` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENDIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENDIADIEM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENDIADIEM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENDIADIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DIACHI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DIACHI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DIACHI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DIACHI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TOADO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOADO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TOADO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOADO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGUOILIENHE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGUOILIENHE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGUOILIENHE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGUOILIENHE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EMAIL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMAIL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMAIL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `DIA_DIEM` (`TENDIADIEM`, `DIACHI`, `TOADO`, `MALOAI`, `SODIENTHOAI`," +
                " `NGUOILIENHE`, `EMAIL`) VALUES (?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENDIADIEM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENDIADIEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DIACHI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DIACHI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TOADO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOADO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGUOILIENHE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGUOILIENHE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `DIA_DIEM` SET `TENDIADIEM` = ?, `DIACHI` = ?, `TOADO` = ?, `MALOAI` = ?, `SODIENTHOAI` = ?, `NGUOILIENHE` = ?, `EMAIL` = ? WHERE ((`MADIADIEM` = ?) AND ((? = 1 AND `TENDIADIEM` IS NULL) OR (`TENDIADIEM` = ?)) AND ((? = 1 AND `DIACHI` IS NULL) OR (`DIACHI` = ?)) AND ((? = 1 AND `TOADO` IS NULL) OR (`TOADO` = ?)) AND ((? = 1 AND `MALOAI` IS NULL) OR (`MALOAI` = ?)) AND ((? = 1 AND `SODIENTHOAI` IS NULL) OR (`SODIENTHOAI` = ?)) AND ((? = 1 AND `NGUOILIENHE` IS NULL) OR (`NGUOILIENHE` = ?)) AND ((? = 1 AND `EMAIL` IS NULL) OR (`EMAIL` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENDIADIEM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENDIADIEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DIACHI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DIACHI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TOADO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOADO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGUOILIENHE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGUOILIENHE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MADIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MADIADIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENDIADIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENDIADIEM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENDIADIEM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENDIADIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DIACHI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DIACHI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DIACHI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DIACHI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TOADO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOADO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TOADO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOADO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGUOILIENHE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGUOILIENHE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGUOILIENHE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGUOILIENHE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EMAIL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMAIL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMAIL", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MADIADIEM, TENDIADIEM, DIACHI, TOADO, MALOAI, SODIENTHOAI, NGUOILIENHE, EM" +
                "AIL FROM DIA_DIEM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.DIA_DIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.DIA_DIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.DIA_DIEMDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.DIA_DIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.DIA_DIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DIA_DIEM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MADIADIEM, string Original_TENDIADIEM, string Original_DIACHI, string Original_TOADO, global::System.Nullable<int> Original_MALOAI, global::System.Nullable<int> Original_SODIENTHOAI, string Original_NGUOILIENHE, string Original_EMAIL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MADIADIEM));
            if ((Original_TENDIADIEM == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENDIADIEM));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DIACHI));
            }
            if ((Original_TOADO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TOADO));
            }
            if ((Original_MALOAI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MALOAI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_SODIENTHOAI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_SODIENTHOAI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_NGUOILIENHE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_NGUOILIENHE));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EMAIL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENDIADIEM, string DIACHI, string TOADO, global::System.Nullable<int> MALOAI, global::System.Nullable<int> SODIENTHOAI, string NGUOILIENHE, string EMAIL) {
            if ((TENDIADIEM == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENDIADIEM));
            }
            if ((DIACHI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DIACHI));
            }
            if ((TOADO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TOADO));
            }
            if ((MALOAI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MALOAI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SODIENTHOAI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(SODIENTHOAI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NGUOILIENHE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NGUOILIENHE));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(EMAIL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENDIADIEM, string DIACHI, string TOADO, global::System.Nullable<int> MALOAI, global::System.Nullable<int> SODIENTHOAI, string NGUOILIENHE, string EMAIL, int Original_MADIADIEM, string Original_TENDIADIEM, string Original_DIACHI, string Original_TOADO, global::System.Nullable<int> Original_MALOAI, global::System.Nullable<int> Original_SODIENTHOAI, string Original_NGUOILIENHE, string Original_EMAIL) {
            if ((TENDIADIEM == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENDIADIEM));
            }
            if ((DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DIACHI));
            }
            if ((TOADO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TOADO));
            }
            if ((MALOAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MALOAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SODIENTHOAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(SODIENTHOAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NGUOILIENHE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NGUOILIENHE));
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(EMAIL));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_MADIADIEM));
            if ((Original_TENDIADIEM == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TENDIADIEM));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DIACHI));
            }
            if ((Original_TOADO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_TOADO));
            }
            if ((Original_MALOAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_MALOAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_SODIENTHOAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_SODIENTHOAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_NGUOILIENHE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_NGUOILIENHE));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_EMAIL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HANG_XETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HANG_XETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HANG_XE";
            tableMapping.ColumnMappings.Add("MAHANG", "MAHANG");
            tableMapping.ColumnMappings.Add("TENHANG", "TENHANG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `HANG_XE` WHERE ((`MAHANG` = ?) AND ((? = 1 AND `TENHANG` IS NULL) OR" +
                " (`TENHANG` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `HANG_XE` (`TENHANG`) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `HANG_XE` SET `TENHANG` = ? WHERE ((`MAHANG` = ?) AND ((? = 1 AND `TENHANG" +
                "` IS NULL) OR (`TENHANG` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENHANG", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAHANG, TENHANG FROM HANG_XE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.HANG_XEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.HANG_XEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.HANG_XEDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.HANG_XEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.HANG_XEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HANG_XE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MAHANG, string Original_TENHANG) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MAHANG));
            if ((Original_TENHANG == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENHANG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENHANG) {
            if ((TENHANG == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENHANG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENHANG, int Original_MAHANG, string Original_TENHANG) {
            if ((TENHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENHANG));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_MAHANG));
            if ((Original_TENHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TENHANG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HOA_DONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HOA_DONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HOA_DON";
            tableMapping.ColumnMappings.Add("MAHOADON", "MAHOADON");
            tableMapping.ColumnMappings.Add("NGAYGIAOHANG", "NGAYGIAOHANG");
            tableMapping.ColumnMappings.Add("NGAYLAP", "NGAYLAP");
            tableMapping.ColumnMappings.Add("XEGIAOHANG", "XEGIAOHANG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `HOA_DON` WHERE ((`MAHOADON` = ?) AND ((? = 1 AND `NGAYGIAOHANG` IS N" +
                "ULL) OR (`NGAYGIAOHANG` = ?)) AND ((? = 1 AND `NGAYLAP` IS NULL) OR (`NGAYLAP` =" +
                " ?)) AND ((? = 1 AND `XEGIAOHANG` IS NULL) OR (`XEGIAOHANG` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYGIAOHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYGIAOHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYGIAOHANG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYGIAOHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYLAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYLAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYLAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYLAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_XEGIAOHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XEGIAOHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_XEGIAOHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XEGIAOHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `HOA_DON` (`NGAYGIAOHANG`, `NGAYLAP`, `XEGIAOHANG`) VALUES (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYGIAOHANG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYGIAOHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYLAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYLAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XEGIAOHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XEGIAOHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `HOA_DON` SET `NGAYGIAOHANG` = ?, `NGAYLAP` = ?, `XEGIAOHANG` = ? WHERE ((`MAHOADON` = ?) AND ((? = 1 AND `NGAYGIAOHANG` IS NULL) OR (`NGAYGIAOHANG` = ?)) AND ((? = 1 AND `NGAYLAP` IS NULL) OR (`NGAYLAP` = ?)) AND ((? = 1 AND `XEGIAOHANG` IS NULL) OR (`XEGIAOHANG` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYGIAOHANG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYGIAOHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYLAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYLAP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XEGIAOHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XEGIAOHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHOADON", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHOADON", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYGIAOHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYGIAOHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYGIAOHANG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYGIAOHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYLAP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYLAP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYLAP", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYLAP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_XEGIAOHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XEGIAOHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_XEGIAOHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XEGIAOHANG", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAHOADON, NGAYGIAOHANG, NGAYLAP, XEGIAOHANG FROM HOA_DON";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.HOA_DONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.HOA_DONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.HOA_DONDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.HOA_DONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.HOA_DONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HOA_DON");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MAHOADON, global::System.Nullable<global::System.DateTime> Original_NGAYGIAOHANG, global::System.Nullable<global::System.DateTime> Original_NGAYLAP, string Original_XEGIAOHANG) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MAHOADON));
            if ((Original_NGAYGIAOHANG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_NGAYGIAOHANG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_NGAYLAP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_NGAYLAP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_XEGIAOHANG == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_XEGIAOHANG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> NGAYGIAOHANG, global::System.Nullable<global::System.DateTime> NGAYLAP, string XEGIAOHANG) {
            if ((NGAYGIAOHANG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(NGAYGIAOHANG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((NGAYLAP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(NGAYLAP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((XEGIAOHANG == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(XEGIAOHANG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> NGAYGIAOHANG, global::System.Nullable<global::System.DateTime> NGAYLAP, string XEGIAOHANG, int Original_MAHOADON, global::System.Nullable<global::System.DateTime> Original_NGAYGIAOHANG, global::System.Nullable<global::System.DateTime> Original_NGAYLAP, string Original_XEGIAOHANG) {
            if ((NGAYGIAOHANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(NGAYGIAOHANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((NGAYLAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(NGAYLAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((XEGIAOHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(XEGIAOHANG));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_MAHOADON));
            if ((Original_NGAYGIAOHANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_NGAYGIAOHANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_NGAYLAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_NGAYLAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_XEGIAOHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_XEGIAOHANG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_DIA_DIEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_DIA_DIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_DIA_DIEM";
            tableMapping.ColumnMappings.Add("MALOAI", "MALOAI");
            tableMapping.ColumnMappings.Add("TENLOAI", "TENLOAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `LOAI_DIA_DIEM` WHERE ((`MALOAI` = ?) AND ((? = 1 AND `TENLOAI` IS NU" +
                "LL) OR (`TENLOAI` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENLOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `LOAI_DIA_DIEM` (`TENLOAI`) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `LOAI_DIA_DIEM` SET `TENLOAI` = ? WHERE ((`MALOAI` = ?) AND ((? = 1 AND `T" +
                "ENLOAI` IS NULL) OR (`TENLOAI` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENLOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MALOAI, TENLOAI FROM LOAI_DIA_DIEM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.LOAI_DIA_DIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.LOAI_DIA_DIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.LOAI_DIA_DIEMDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.LOAI_DIA_DIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.LOAI_DIA_DIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_DIA_DIEM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MALOAI, string Original_TENLOAI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MALOAI));
            if ((Original_TENLOAI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENLOAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENLOAI) {
            if ((TENLOAI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENLOAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENLOAI, int Original_MALOAI, string Original_TENLOAI) {
            if ((TENLOAI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENLOAI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_MALOAI));
            if ((Original_TENLOAI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TENLOAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_HANGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_HANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_HANG";
            tableMapping.ColumnMappings.Add("MALOAI", "MALOAI");
            tableMapping.ColumnMappings.Add("TENLOAI", "TENLOAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `LOAI_HANG` WHERE ((`MALOAI` = ?) AND ((? = 1 AND `TENLOAI` IS NULL) " +
                "OR (`TENLOAI` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENLOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `LOAI_HANG` (`TENLOAI`) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `LOAI_HANG` SET `TENLOAI` = ? WHERE ((`MALOAI` = ?) AND ((? = 1 AND `TENLO" +
                "AI` IS NULL) OR (`TENLOAI` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENLOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENLOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENLOAI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MALOAI, TENLOAI FROM LOAI_HANG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.LOAI_HANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.LOAI_HANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.LOAI_HANGDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.LOAI_HANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.LOAI_HANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_HANG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MALOAI, string Original_TENLOAI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MALOAI));
            if ((Original_TENLOAI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENLOAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENLOAI) {
            if ((TENLOAI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENLOAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENLOAI, int Original_MALOAI, string Original_TENLOAI) {
            if ((TENLOAI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENLOAI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_MALOAI));
            if ((Original_TENLOAI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TENLOAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_NHAN_VIENTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_NHAN_VIENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_NHAN_VIEN";
            tableMapping.ColumnMappings.Add("Ma", "Ma");
            tableMapping.ColumnMappings.Add("TenLoai", "TenLoai");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `LOAI_NHAN_VIEN` WHERE ((`Ma` = ?) AND ((? = 1 AND `TenLoai` IS NULL)" +
                " OR (`TenLoai` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ma", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ma", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TenLoai", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TenLoai", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TenLoai", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TenLoai", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `LOAI_NHAN_VIEN` (`TenLoai`) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TenLoai", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TenLoai", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `LOAI_NHAN_VIEN` SET `TenLoai` = ? WHERE ((`Ma` = ?) AND ((? = 1 AND `TenL" +
                "oai` IS NULL) OR (`TenLoai` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TenLoai", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TenLoai", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ma", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ma", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TenLoai", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TenLoai", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TenLoai", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TenLoai", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ma, TenLoai FROM LOAI_NHAN_VIEN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.LOAI_NHAN_VIENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.LOAI_NHAN_VIENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.LOAI_NHAN_VIENDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.LOAI_NHAN_VIENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.LOAI_NHAN_VIENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_NHAN_VIEN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Ma, string Original_TenLoai) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Ma));
            if ((Original_TenLoai == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenLoai));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TenLoai) {
            if ((TenLoai == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TenLoai));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TenLoai, int Original_Ma, string Original_TenLoai) {
            if ((TenLoai == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TenLoai));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Ma));
            if ((Original_TenLoai == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TenLoai));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MAT_HANGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MAT_HANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MAT_HANG";
            tableMapping.ColumnMappings.Add("MAMATHANG", "MAMATHANG");
            tableMapping.ColumnMappings.Add("TENMATHANG", "TENMATHANG");
            tableMapping.ColumnMappings.Add("SOLUONG", "SOLUONG");
            tableMapping.ColumnMappings.Add("DONVITINH", "DONVITINH");
            tableMapping.ColumnMappings.Add("MALOAI", "MALOAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `MAT_HANG` WHERE ((`MAMATHANG` = ?) AND ((? = 1 AND `TENMATHANG` IS NULL) OR (`TENMATHANG` = ?)) AND ((? = 1 AND `SOLUONG` IS NULL) OR (`SOLUONG` = ?)) AND ((? = 1 AND `DONVITINH` IS NULL) OR (`DONVITINH` = ?)) AND ((? = 1 AND `MALOAI` IS NULL) OR (`MALOAI` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENMATHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENMATHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENMATHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DONVITINH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVITINH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DONVITINH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVITINH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `MAT_HANG` (`TENMATHANG`, `SOLUONG`, `DONVITINH`, `MALOAI`) VALUES (?" +
                ", ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENMATHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENMATHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DONVITINH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVITINH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `MAT_HANG` SET `TENMATHANG` = ?, `SOLUONG` = ?, `DONVITINH` = ?, `MALOAI` = ? WHERE ((`MAMATHANG` = ?) AND ((? = 1 AND `TENMATHANG` IS NULL) OR (`TENMATHANG` = ?)) AND ((? = 1 AND `SOLUONG` IS NULL) OR (`SOLUONG` = ?)) AND ((? = 1 AND `DONVITINH` IS NULL) OR (`DONVITINH` = ?)) AND ((? = 1 AND `MALOAI` IS NULL) OR (`MALOAI` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENMATHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENMATHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DONVITINH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVITINH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAMATHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENMATHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENMATHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENMATHANG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENMATHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOLUONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOLUONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DONVITINH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVITINH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DONVITINH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVITINH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAMATHANG, TENMATHANG, SOLUONG, DONVITINH, MALOAI FROM MAT_HANG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.MAT_HANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.MAT_HANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.MAT_HANGDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.MAT_HANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.MAT_HANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MAT_HANG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MAMATHANG, string Original_TENMATHANG, global::System.Nullable<int> Original_SOLUONG, string Original_DONVITINH, global::System.Nullable<int> Original_MALOAI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MAMATHANG));
            if ((Original_TENMATHANG == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENMATHANG));
            }
            if ((Original_SOLUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SOLUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DONVITINH == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DONVITINH));
            }
            if ((Original_MALOAI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MALOAI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENMATHANG, global::System.Nullable<int> SOLUONG, string DONVITINH, global::System.Nullable<int> MALOAI) {
            if ((TENMATHANG == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENMATHANG));
            }
            if ((SOLUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SOLUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DONVITINH == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DONVITINH));
            }
            if ((MALOAI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MALOAI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENMATHANG, global::System.Nullable<int> SOLUONG, string DONVITINH, global::System.Nullable<int> MALOAI, int Original_MAMATHANG, string Original_TENMATHANG, global::System.Nullable<int> Original_SOLUONG, string Original_DONVITINH, global::System.Nullable<int> Original_MALOAI) {
            if ((TENMATHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENMATHANG));
            }
            if ((SOLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SOLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DONVITINH == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DONVITINH));
            }
            if ((MALOAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MALOAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_MAMATHANG));
            if ((Original_TENMATHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TENMATHANG));
            }
            if ((Original_SOLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_SOLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_DONVITINH == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_DONVITINH));
            }
            if ((Original_MALOAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_MALOAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NHAN_VIENTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NHAN_VIENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NHAN_VIEN";
            tableMapping.ColumnMappings.Add("MANHANVIEN", "MANHANVIEN");
            tableMapping.ColumnMappings.Add("TENNHANVIEN", "TENNHANVIEN");
            tableMapping.ColumnMappings.Add("SODIENTHOAI", "SODIENTHOAI");
            tableMapping.ColumnMappings.Add("NgayVaoCongTy", "NgayVaoCongTy");
            tableMapping.ColumnMappings.Add("MaLoaiNhanVien", "MaLoaiNhanVien");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `NHAN_VIEN` WHERE ((`MANHANVIEN` = ?) AND ((? = 1 AND `TENNHANVIEN` IS NULL) OR (`TENNHANVIEN` = ?)) AND ((? = 1 AND `SODIENTHOAI` IS NULL) OR (`SODIENTHOAI` = ?)) AND ((? = 1 AND `NgayVaoCongTy` IS NULL) OR (`NgayVaoCongTy` = ?)) AND ((? = 1 AND `MaLoaiNhanVien` IS NULL) OR (`MaLoaiNhanVien` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIEN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENNHANVIEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENNHANVIEN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENNHANVIEN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENNHANVIEN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SODIENTHOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NgayVaoCongTy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NgayVaoCongTy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NgayVaoCongTy", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NgayVaoCongTy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MaLoaiNhanVien", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaLoaiNhanVien", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MaLoaiNhanVien", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaLoaiNhanVien", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `NHAN_VIEN` (`TENNHANVIEN`, `SODIENTHOAI`, `NgayVaoCongTy`, `MaLoaiNh" +
                "anVien`) VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENNHANVIEN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENNHANVIEN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SODIENTHOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NgayVaoCongTy", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NgayVaoCongTy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MaLoaiNhanVien", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaLoaiNhanVien", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `NHAN_VIEN` SET `TENNHANVIEN` = ?, `SODIENTHOAI` = ?, `NgayVaoCongTy` = ?, `MaLoaiNhanVien` = ? WHERE ((`MANHANVIEN` = ?) AND ((? = 1 AND `TENNHANVIEN` IS NULL) OR (`TENNHANVIEN` = ?)) AND ((? = 1 AND `SODIENTHOAI` IS NULL) OR (`SODIENTHOAI` = ?)) AND ((? = 1 AND `NgayVaoCongTy` IS NULL) OR (`NgayVaoCongTy` = ?)) AND ((? = 1 AND `MaLoaiNhanVien` IS NULL) OR (`MaLoaiNhanVien` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENNHANVIEN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENNHANVIEN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SODIENTHOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NgayVaoCongTy", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NgayVaoCongTy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MaLoaiNhanVien", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaLoaiNhanVien", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIEN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENNHANVIEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENNHANVIEN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENNHANVIEN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENNHANVIEN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SODIENTHOAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SODIENTHOAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SODIENTHOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NgayVaoCongTy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NgayVaoCongTy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NgayVaoCongTy", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NgayVaoCongTy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MaLoaiNhanVien", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaLoaiNhanVien", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MaLoaiNhanVien", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MaLoaiNhanVien", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MANHANVIEN, TENNHANVIEN, SODIENTHOAI, NgayVaoCongTy, MaLoaiNhanVien FROM N" +
                "HAN_VIEN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.NHAN_VIENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.NHAN_VIENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.NHAN_VIENDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.NHAN_VIENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.NHAN_VIENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NHAN_VIEN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MANHANVIEN, string Original_TENNHANVIEN, string Original_SODIENTHOAI, global::System.Nullable<global::System.DateTime> Original_NgayVaoCongTy, global::System.Nullable<int> Original_MaLoaiNhanVien) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MANHANVIEN));
            if ((Original_TENNHANVIEN == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENNHANVIEN));
            }
            if ((Original_SODIENTHOAI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SODIENTHOAI));
            }
            if ((Original_NgayVaoCongTy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_NgayVaoCongTy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_MaLoaiNhanVien.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MaLoaiNhanVien.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENNHANVIEN, string SODIENTHOAI, global::System.Nullable<global::System.DateTime> NgayVaoCongTy, global::System.Nullable<int> MaLoaiNhanVien) {
            if ((TENNHANVIEN == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENNHANVIEN));
            }
            if ((SODIENTHOAI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SODIENTHOAI));
            }
            if ((NgayVaoCongTy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(NgayVaoCongTy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MaLoaiNhanVien.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MaLoaiNhanVien.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENNHANVIEN, string SODIENTHOAI, global::System.Nullable<global::System.DateTime> NgayVaoCongTy, global::System.Nullable<int> MaLoaiNhanVien, int Original_MANHANVIEN, string Original_TENNHANVIEN, string Original_SODIENTHOAI, global::System.Nullable<global::System.DateTime> Original_NgayVaoCongTy, global::System.Nullable<int> Original_MaLoaiNhanVien) {
            if ((TENNHANVIEN == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENNHANVIEN));
            }
            if ((SODIENTHOAI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SODIENTHOAI));
            }
            if ((NgayVaoCongTy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(NgayVaoCongTy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MaLoaiNhanVien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MaLoaiNhanVien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_MANHANVIEN));
            if ((Original_TENNHANVIEN == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TENNHANVIEN));
            }
            if ((Original_SODIENTHOAI == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SODIENTHOAI));
            }
            if ((Original_NgayVaoCongTy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_NgayVaoCongTy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_MaLoaiNhanVien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_MaLoaiNhanVien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHANCONGXE_TAIXETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHANCONGXE_TAIXETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHANCONGXE_TAIXE";
            tableMapping.ColumnMappings.Add("MAPHANCONG", "MAPHANCONG");
            tableMapping.ColumnMappings.Add("NGAYPHANCONG", "NGAYPHANCONG");
            tableMapping.ColumnMappings.Add("MANHANVIENPHANCONG", "MANHANVIENPHANCONG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `PHANCONGXE_TAIXE` WHERE ((`MAPHANCONG` = ?) AND ((? = 1 AND `NGAYPHA" +
                "NCONG` IS NULL) OR (`NGAYPHANCONG` = ?)) AND ((? = 1 AND `MANHANVIENPHANCONG` IS" +
                " NULL) OR (`MANHANVIENPHANCONG` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYPHANCONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYPHANCONG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MANHANVIENPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENPHANCONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIENPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PHANCONGXE_TAIXE` (`NGAYPHANCONG`, `MANHANVIENPHANCONG`) VALUES (?, " +
                "?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYPHANCONG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYPHANCONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MANHANVIENPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENPHANCONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `PHANCONGXE_TAIXE` SET `NGAYPHANCONG` = ?, `MANHANVIENPHANCONG` = ? WHERE " +
                "((`MAPHANCONG` = ?) AND ((? = 1 AND `NGAYPHANCONG` IS NULL) OR (`NGAYPHANCONG` =" +
                " ?)) AND ((? = 1 AND `MANHANVIENPHANCONG` IS NULL) OR (`MANHANVIENPHANCONG` = ?)" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYPHANCONG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYPHANCONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MANHANVIENPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENPHANCONG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYPHANCONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYPHANCONG", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MANHANVIENPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENPHANCONG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIENPHANCONG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENPHANCONG", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAPHANCONG, NGAYPHANCONG, MANHANVIENPHANCONG FROM PHANCONGXE_TAIXE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.PHANCONGXE_TAIXEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.PHANCONGXE_TAIXEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.PHANCONGXE_TAIXEDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.PHANCONGXE_TAIXEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.PHANCONGXE_TAIXEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PHANCONGXE_TAIXE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MAPHANCONG, global::System.Nullable<global::System.DateTime> Original_NGAYPHANCONG, global::System.Nullable<int> Original_MANHANVIENPHANCONG) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MAPHANCONG));
            if ((Original_NGAYPHANCONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_NGAYPHANCONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MANHANVIENPHANCONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MANHANVIENPHANCONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> NGAYPHANCONG, global::System.Nullable<int> MANHANVIENPHANCONG) {
            if ((NGAYPHANCONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(NGAYPHANCONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MANHANVIENPHANCONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MANHANVIENPHANCONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> NGAYPHANCONG, global::System.Nullable<int> MANHANVIENPHANCONG, int Original_MAPHANCONG, global::System.Nullable<global::System.DateTime> Original_NGAYPHANCONG, global::System.Nullable<int> Original_MANHANVIENPHANCONG) {
            if ((NGAYPHANCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(NGAYPHANCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MANHANVIENPHANCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MANHANVIENPHANCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_MAPHANCONG));
            if ((Original_NGAYPHANCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_NGAYPHANCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MANHANVIENPHANCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_MANHANVIENPHANCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THAMSOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public THAMSOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THAMSO";
            tableMapping.ColumnMappings.Add("Ma", "Ma");
            tableMapping.ColumnMappings.Add("TENTHAMSO", "TENTHAMSO");
            tableMapping.ColumnMappings.Add("GiaTri", "GiaTri");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `THAMSO` WHERE ((`Ma` = ?) AND ((? = 1 AND `TENTHAMSO` IS NULL) OR (`" +
                "TENTHAMSO` = ?)) AND ((? = 1 AND `GiaTri` IS NULL) OR (`GiaTri` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ma", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ma", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENTHAMSO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTHAMSO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENTHAMSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTHAMSO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GiaTri", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GiaTri", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GiaTri", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GiaTri", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `THAMSO` (`TENTHAMSO`, `GiaTri`) VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENTHAMSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTHAMSO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GiaTri", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GiaTri", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `THAMSO` SET `TENTHAMSO` = ?, `GiaTri` = ? WHERE ((`Ma` = ?) AND ((? = 1 A" +
                "ND `TENTHAMSO` IS NULL) OR (`TENTHAMSO` = ?)) AND ((? = 1 AND `GiaTri` IS NULL) " +
                "OR (`GiaTri` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENTHAMSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTHAMSO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GiaTri", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GiaTri", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ma", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ma", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENTHAMSO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTHAMSO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENTHAMSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTHAMSO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GiaTri", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GiaTri", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GiaTri", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GiaTri", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ma, TENTHAMSO, GiaTri FROM THAMSO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.THAMSODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.THAMSODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.THAMSODataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.THAMSODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.THAMSODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "THAMSO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Ma, string Original_TENTHAMSO, string Original_GiaTri) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Ma));
            if ((Original_TENTHAMSO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENTHAMSO));
            }
            if ((Original_GiaTri == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GiaTri));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENTHAMSO, string GiaTri) {
            if ((TENTHAMSO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENTHAMSO));
            }
            if ((GiaTri == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GiaTri));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENTHAMSO, string GiaTri, int Original_Ma, string Original_TENTHAMSO, string Original_GiaTri) {
            if ((TENTHAMSO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENTHAMSO));
            }
            if ((GiaTri == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GiaTri));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Ma));
            if ((Original_TENTHAMSO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TENTHAMSO));
            }
            if ((Original_GiaTri == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_GiaTri));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRANG_THAITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TRANG_THAITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRANG_THAI";
            tableMapping.ColumnMappings.Add("MATRANGTHAI", "MATRANGTHAI");
            tableMapping.ColumnMappings.Add("TENTRANGTHAI", "TENTRANGTHAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `TRANG_THAI` WHERE ((`MATRANGTHAI` = ?) AND ((? = 1 AND `TENTRANGTHAI" +
                "` IS NULL) OR (`TENTRANGTHAI` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENTRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTRANGTHAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENTRANGTHAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTRANGTHAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `TRANG_THAI` (`TENTRANGTHAI`) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENTRANGTHAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTRANGTHAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `TRANG_THAI` SET `TENTRANGTHAI` = ? WHERE ((`MATRANGTHAI` = ?) AND ((? = 1" +
                " AND `TENTRANGTHAI` IS NULL) OR (`TENTRANGTHAI` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TENTRANGTHAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTRANGTHAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRANGTHAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TENTRANGTHAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTRANGTHAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TENTRANGTHAI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TENTRANGTHAI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MATRANGTHAI, TENTRANGTHAI FROM TRANG_THAI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.TRANG_THAIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.TRANG_THAIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.TRANG_THAIDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.TRANG_THAIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.TRANG_THAIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TRANG_THAI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MATRANGTHAI, string Original_TENTRANGTHAI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MATRANGTHAI));
            if ((Original_TENTRANGTHAI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TENTRANGTHAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TENTRANGTHAI) {
            if ((TENTRANGTHAI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TENTRANGTHAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENTRANGTHAI, int Original_MATRANGTHAI, string Original_TENTRANGTHAI) {
            if ((TENTRANGTHAI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TENTRANGTHAI));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_MATRANGTHAI));
            if ((Original_TENTRANGTHAI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TENTRANGTHAI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRONG_TAITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TRONG_TAITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRONG_TAI";
            tableMapping.ColumnMappings.Add("MATRONGTAI", "MATRONGTAI");
            tableMapping.ColumnMappings.Add("GIATRI", "GIATRI");
            tableMapping.ColumnMappings.Add("DONVI", "DONVI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `TRONG_TAI` WHERE ((`MATRONGTAI` = ?) AND ((? = 1 AND `GIATRI` IS NUL" +
                "L) OR (`GIATRI` = ?)) AND ((? = 1 AND `DONVI` IS NULL) OR (`DONVI` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GIATRI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GIATRI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GIATRI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GIATRI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DONVI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DONVI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `TRONG_TAI` (`GIATRI`, `DONVI`) VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GIATRI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GIATRI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DONVI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `TRONG_TAI` SET `GIATRI` = ?, `DONVI` = ? WHERE ((`MATRONGTAI` = ?) AND ((" +
                "? = 1 AND `GIATRI` IS NULL) OR (`GIATRI` = ?)) AND ((? = 1 AND `DONVI` IS NULL) " +
                "OR (`DONVI` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GIATRI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GIATRI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DONVI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GIATRI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GIATRI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GIATRI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GIATRI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DONVI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DONVI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DONVI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MATRONGTAI, GIATRI, DONVI FROM TRONG_TAI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.TRONG_TAIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.TRONG_TAIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.TRONG_TAIDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.TRONG_TAIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.TRONG_TAIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TRONG_TAI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MATRONGTAI, global::System.Nullable<int> Original_GIATRI, string Original_DONVI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MATRONGTAI));
            if ((Original_GIATRI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_GIATRI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_DONVI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DONVI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> GIATRI, string DONVI) {
            if ((GIATRI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(GIATRI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DONVI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DONVI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> GIATRI, string DONVI, int Original_MATRONGTAI, global::System.Nullable<int> Original_GIATRI, string Original_DONVI) {
            if ((GIATRI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(GIATRI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DONVI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DONVI));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_MATRONGTAI));
            if ((Original_GIATRI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_GIATRI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DONVI == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_DONVI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class XETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public XETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "XE";
            tableMapping.ColumnMappings.Add("BIENSO", "BIENSO");
            tableMapping.ColumnMappings.Add("NGAYTIEPNHAN", "NGAYTIEPNHAN");
            tableMapping.ColumnMappings.Add("NAMSANXUAT", "NAMSANXUAT");
            tableMapping.ColumnMappings.Add("MAHANGXE", "MAHANGXE");
            tableMapping.ColumnMappings.Add("NGAYDANGKIEM", "NGAYDANGKIEM");
            tableMapping.ColumnMappings.Add("HIEUXE", "HIEUXE");
            tableMapping.ColumnMappings.Add("SOKHUNG", "SOKHUNG");
            tableMapping.ColumnMappings.Add("SOMAY", "SOMAY");
            tableMapping.ColumnMappings.Add("MATRONGTAI", "MATRONGTAI");
            tableMapping.ColumnMappings.Add("MALOAIHANG", "MALOAIHANG");
            tableMapping.ColumnMappings.Add("MANHANVIENTIEPNHAN", "MANHANVIENTIEPNHAN");
            tableMapping.ColumnMappings.Add("DINHMUC", "DINHMUC");
            tableMapping.ColumnMappings.Add("DUNGTICHBINH", "DUNGTICHBINH");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `XE` WHERE ((`BIENSO` = ?) AND ((? = 1 AND `NGAYTIEPNHAN` IS NULL) OR (`NGAYTIEPNHAN` = ?)) AND ((? = 1 AND `NAMSANXUAT` IS NULL) OR (`NAMSANXUAT` = ?)) AND ((? = 1 AND `MAHANGXE` IS NULL) OR (`MAHANGXE` = ?)) AND ((? = 1 AND `NGAYDANGKIEM` IS NULL) OR (`NGAYDANGKIEM` = ?)) AND ((? = 1 AND `HIEUXE` IS NULL) OR (`HIEUXE` = ?)) AND ((? = 1 AND `SOKHUNG` IS NULL) OR (`SOKHUNG` = ?)) AND ((? = 1 AND `SOMAY` IS NULL) OR (`SOMAY` = ?)) AND ((? = 1 AND `MATRONGTAI` IS NULL) OR (`MATRONGTAI` = ?)) AND ((? = 1 AND `MALOAIHANG` IS NULL) OR (`MALOAIHANG` = ?)) AND ((? = 1 AND `MANHANVIENTIEPNHAN` IS NULL) OR (`MANHANVIENTIEPNHAN` = ?)) AND ((? = 1 AND `DINHMUC` IS NULL) OR (`DINHMUC` = ?)) AND ((? = 1 AND `DUNGTICHBINH` IS NULL) OR (`DUNGTICHBINH` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BIENSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYTIEPNHAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYTIEPNHAN", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYTIEPNHAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NAMSANXUAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMSANXUAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NAMSANXUAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMSANXUAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAHANGXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANGXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHANGXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANGXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYDANGKIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYDANGKIEM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYDANGKIEM", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYDANGKIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HIEUXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIEUXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HIEUXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIEUXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOKHUNG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOKHUNG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOKHUNG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOKHUNG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOMAY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOMAY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOMAY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOMAY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MALOAIHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAIHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAIHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAIHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MANHANVIENTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENTIEPNHAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIENTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENTIEPNHAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DINHMUC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DINHMUC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DINHMUC", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DINHMUC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DUNGTICHBINH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DUNGTICHBINH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DUNGTICHBINH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DUNGTICHBINH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `XE` (`BIENSO`, `NGAYTIEPNHAN`, `NAMSANXUAT`, `MAHANGXE`, `NGAYDANGKI" +
                "EM`, `HIEUXE`, `SOKHUNG`, `SOMAY`, `MATRONGTAI`, `MALOAIHANG`, `MANHANVIENTIEPNH" +
                "AN`, `DINHMUC`, `DUNGTICHBINH`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BIENSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYTIEPNHAN", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYTIEPNHAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NAMSANXUAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMSANXUAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAHANGXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANGXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYDANGKIEM", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYDANGKIEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HIEUXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIEUXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOKHUNG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOKHUNG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOMAY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOMAY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MALOAIHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAIHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MANHANVIENTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENTIEPNHAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DINHMUC", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DINHMUC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DUNGTICHBINH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DUNGTICHBINH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `XE` SET `BIENSO` = ?, `NGAYTIEPNHAN` = ?, `NAMSANXUAT` = ?, `MAHANGXE` = ?, `NGAYDANGKIEM` = ?, `HIEUXE` = ?, `SOKHUNG` = ?, `SOMAY` = ?, `MATRONGTAI` = ?, `MALOAIHANG` = ?, `MANHANVIENTIEPNHAN` = ?, `DINHMUC` = ?, `DUNGTICHBINH` = ? WHERE ((`BIENSO` = ?) AND ((? = 1 AND `NGAYTIEPNHAN` IS NULL) OR (`NGAYTIEPNHAN` = ?)) AND ((? = 1 AND `NAMSANXUAT` IS NULL) OR (`NAMSANXUAT` = ?)) AND ((? = 1 AND `MAHANGXE` IS NULL) OR (`MAHANGXE` = ?)) AND ((? = 1 AND `NGAYDANGKIEM` IS NULL) OR (`NGAYDANGKIEM` = ?)) AND ((? = 1 AND `HIEUXE` IS NULL) OR (`HIEUXE` = ?)) AND ((? = 1 AND `SOKHUNG` IS NULL) OR (`SOKHUNG` = ?)) AND ((? = 1 AND `SOMAY` IS NULL) OR (`SOMAY` = ?)) AND ((? = 1 AND `MATRONGTAI` IS NULL) OR (`MATRONGTAI` = ?)) AND ((? = 1 AND `MALOAIHANG` IS NULL) OR (`MALOAIHANG` = ?)) AND ((? = 1 AND `MANHANVIENTIEPNHAN` IS NULL) OR (`MANHANVIENTIEPNHAN` = ?)) AND ((? = 1 AND `DINHMUC` IS NULL) OR (`DINHMUC` = ?)) AND ((? = 1 AND `DUNGTICHBINH` IS NULL) OR (`DUNGTICHBINH` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BIENSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYTIEPNHAN", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYTIEPNHAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NAMSANXUAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMSANXUAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAHANGXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANGXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NGAYDANGKIEM", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYDANGKIEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HIEUXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIEUXE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOKHUNG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOKHUNG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOMAY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOMAY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MALOAIHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAIHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MANHANVIENTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENTIEPNHAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DINHMUC", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DINHMUC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DUNGTICHBINH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DUNGTICHBINH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BIENSO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BIENSO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYTIEPNHAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYTIEPNHAN", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYTIEPNHAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NAMSANXUAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMSANXUAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NAMSANXUAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMSANXUAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAHANGXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANGXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAHANGXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAHANGXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NGAYDANGKIEM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYDANGKIEM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NGAYDANGKIEM", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NGAYDANGKIEM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HIEUXE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIEUXE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HIEUXE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HIEUXE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOKHUNG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOKHUNG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOKHUNG", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOKHUNG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOMAY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOMAY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOMAY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOMAY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MATRONGTAI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MATRONGTAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MALOAIHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAIHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MALOAIHANG", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MALOAIHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MANHANVIENTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENTIEPNHAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MANHANVIENTIEPNHAN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MANHANVIENTIEPNHAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DINHMUC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DINHMUC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DINHMUC", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DINHMUC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DUNGTICHBINH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DUNGTICHBINH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DUNGTICHBINH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DUNGTICHBINH", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.Db_QuanLyDoiXeVinamilkConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BIENSO, NGAYTIEPNHAN, NAMSANXUAT, MAHANGXE, NGAYDANGKIEM, HIEUXE, SOKHUNG," +
                " SOMAY, MATRONGTAI, MALOAIHANG, MANHANVIENTIEPNHAN, DINHMUC, DUNGTICHBINH FROM X" +
                "E";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Db_QuanLyDoiXeVinamilkDataSet.XEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Db_QuanLyDoiXeVinamilkDataSet.XEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Db_QuanLyDoiXeVinamilkDataSet.XEDataTable dataTable = new Db_QuanLyDoiXeVinamilkDataSet.XEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet.XEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            return this.Adapter.Update(dataSet, "XE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_BIENSO, global::System.Nullable<global::System.DateTime> Original_NGAYTIEPNHAN, global::System.Nullable<int> Original_NAMSANXUAT, global::System.Nullable<int> Original_MAHANGXE, global::System.Nullable<global::System.DateTime> Original_NGAYDANGKIEM, string Original_HIEUXE, string Original_SOKHUNG, string Original_SOMAY, global::System.Nullable<int> Original_MATRONGTAI, global::System.Nullable<int> Original_MALOAIHANG, global::System.Nullable<int> Original_MANHANVIENTIEPNHAN, global::System.Nullable<double> Original_DINHMUC, global::System.Nullable<double> Original_DUNGTICHBINH) {
            if ((Original_BIENSO == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BIENSO));
            }
            if ((Original_NGAYTIEPNHAN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_NGAYTIEPNHAN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_NAMSANXUAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_NAMSANXUAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MAHANGXE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_MAHANGXE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_NGAYDANGKIEM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_NGAYDANGKIEM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_HIEUXE == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_HIEUXE));
            }
            if ((Original_SOKHUNG == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_SOKHUNG));
            }
            if ((Original_SOMAY == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SOMAY));
            }
            if ((Original_MATRONGTAI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_MATRONGTAI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_MALOAIHANG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_MALOAIHANG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_MANHANVIENTIEPNHAN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_MANHANVIENTIEPNHAN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_DINHMUC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_DINHMUC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_DUNGTICHBINH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_DUNGTICHBINH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BIENSO, global::System.Nullable<global::System.DateTime> NGAYTIEPNHAN, global::System.Nullable<int> NAMSANXUAT, global::System.Nullable<int> MAHANGXE, global::System.Nullable<global::System.DateTime> NGAYDANGKIEM, string HIEUXE, string SOKHUNG, string SOMAY, global::System.Nullable<int> MATRONGTAI, global::System.Nullable<int> MALOAIHANG, global::System.Nullable<int> MANHANVIENTIEPNHAN, global::System.Nullable<double> DINHMUC, global::System.Nullable<double> DUNGTICHBINH) {
            if ((BIENSO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BIENSO));
            }
            if ((NGAYTIEPNHAN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(NGAYTIEPNHAN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((NAMSANXUAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(NAMSANXUAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MAHANGXE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MAHANGXE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NGAYDANGKIEM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(NGAYDANGKIEM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HIEUXE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(HIEUXE));
            }
            if ((SOKHUNG == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SOKHUNG));
            }
            if ((SOMAY == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SOMAY));
            }
            if ((MATRONGTAI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(MATRONGTAI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((MALOAIHANG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(MALOAIHANG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MANHANVIENTIEPNHAN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(MANHANVIENTIEPNHAN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DINHMUC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(DINHMUC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DUNGTICHBINH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(DUNGTICHBINH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BIENSO, 
                    global::System.Nullable<global::System.DateTime> NGAYTIEPNHAN, 
                    global::System.Nullable<int> NAMSANXUAT, 
                    global::System.Nullable<int> MAHANGXE, 
                    global::System.Nullable<global::System.DateTime> NGAYDANGKIEM, 
                    string HIEUXE, 
                    string SOKHUNG, 
                    string SOMAY, 
                    global::System.Nullable<int> MATRONGTAI, 
                    global::System.Nullable<int> MALOAIHANG, 
                    global::System.Nullable<int> MANHANVIENTIEPNHAN, 
                    global::System.Nullable<double> DINHMUC, 
                    global::System.Nullable<double> DUNGTICHBINH, 
                    string Original_BIENSO, 
                    global::System.Nullable<global::System.DateTime> Original_NGAYTIEPNHAN, 
                    global::System.Nullable<int> Original_NAMSANXUAT, 
                    global::System.Nullable<int> Original_MAHANGXE, 
                    global::System.Nullable<global::System.DateTime> Original_NGAYDANGKIEM, 
                    string Original_HIEUXE, 
                    string Original_SOKHUNG, 
                    string Original_SOMAY, 
                    global::System.Nullable<int> Original_MATRONGTAI, 
                    global::System.Nullable<int> Original_MALOAIHANG, 
                    global::System.Nullable<int> Original_MANHANVIENTIEPNHAN, 
                    global::System.Nullable<double> Original_DINHMUC, 
                    global::System.Nullable<double> Original_DUNGTICHBINH) {
            if ((BIENSO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BIENSO));
            }
            if ((NGAYTIEPNHAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(NGAYTIEPNHAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((NAMSANXUAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(NAMSANXUAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MAHANGXE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MAHANGXE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NGAYDANGKIEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(NGAYDANGKIEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HIEUXE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(HIEUXE));
            }
            if ((SOKHUNG == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SOKHUNG));
            }
            if ((SOMAY == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SOMAY));
            }
            if ((MATRONGTAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(MATRONGTAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((MALOAIHANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(MALOAIHANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MANHANVIENTIEPNHAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(MANHANVIENTIEPNHAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DINHMUC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(DINHMUC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DUNGTICHBINH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(DUNGTICHBINH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_BIENSO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_BIENSO));
            }
            if ((Original_NGAYTIEPNHAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_NGAYTIEPNHAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_NAMSANXUAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_NAMSANXUAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_MAHANGXE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_MAHANGXE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_NGAYDANGKIEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_NGAYDANGKIEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_HIEUXE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_HIEUXE));
            }
            if ((Original_SOKHUNG == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_SOKHUNG));
            }
            if ((Original_SOMAY == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_SOMAY));
            }
            if ((Original_MATRONGTAI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_MATRONGTAI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_MALOAIHANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_MALOAIHANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_MANHANVIENTIEPNHAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_MANHANVIENTIEPNHAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_DINHMUC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_DINHMUC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_DUNGTICHBINH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_DUNGTICHBINH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> NGAYTIEPNHAN, 
                    global::System.Nullable<int> NAMSANXUAT, 
                    global::System.Nullable<int> MAHANGXE, 
                    global::System.Nullable<global::System.DateTime> NGAYDANGKIEM, 
                    string HIEUXE, 
                    string SOKHUNG, 
                    string SOMAY, 
                    global::System.Nullable<int> MATRONGTAI, 
                    global::System.Nullable<int> MALOAIHANG, 
                    global::System.Nullable<int> MANHANVIENTIEPNHAN, 
                    global::System.Nullable<double> DINHMUC, 
                    global::System.Nullable<double> DUNGTICHBINH, 
                    string Original_BIENSO, 
                    global::System.Nullable<global::System.DateTime> Original_NGAYTIEPNHAN, 
                    global::System.Nullable<int> Original_NAMSANXUAT, 
                    global::System.Nullable<int> Original_MAHANGXE, 
                    global::System.Nullable<global::System.DateTime> Original_NGAYDANGKIEM, 
                    string Original_HIEUXE, 
                    string Original_SOKHUNG, 
                    string Original_SOMAY, 
                    global::System.Nullable<int> Original_MATRONGTAI, 
                    global::System.Nullable<int> Original_MALOAIHANG, 
                    global::System.Nullable<int> Original_MANHANVIENTIEPNHAN, 
                    global::System.Nullable<double> Original_DINHMUC, 
                    global::System.Nullable<double> Original_DUNGTICHBINH) {
            return this.Update(Original_BIENSO, NGAYTIEPNHAN, NAMSANXUAT, MAHANGXE, NGAYDANGKIEM, HIEUXE, SOKHUNG, SOMAY, MATRONGTAI, MALOAIHANG, MANHANVIENTIEPNHAN, DINHMUC, DUNGTICHBINH, Original_BIENSO, Original_NGAYTIEPNHAN, Original_NAMSANXUAT, Original_MAHANGXE, Original_NGAYDANGKIEM, Original_HIEUXE, Original_SOKHUNG, Original_SOMAY, Original_MATRONGTAI, Original_MALOAIHANG, Original_MANHANVIENTIEPNHAN, Original_DINHMUC, Original_DUNGTICHBINH);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CAP_NHIEN_LIEUTableAdapter _cAP_NHIEN_LIEUTableAdapter;
        
        private CHITIET_CAPNHIENLIEUTableAdapter _cHITIET_CAPNHIENLIEUTableAdapter;
        
        private CHITIET_HOADONTableAdapter _cHITIET_HOADONTableAdapter;
        
        private CHITIETPCXE_TAIXETableAdapter _cHITIETPCXE_TAIXETableAdapter;
        
        private DIA_DIEMTableAdapter _dIA_DIEMTableAdapter;
        
        private HANG_XETableAdapter _hANG_XETableAdapter;
        
        private HOA_DONTableAdapter _hOA_DONTableAdapter;
        
        private LOAI_DIA_DIEMTableAdapter _lOAI_DIA_DIEMTableAdapter;
        
        private LOAI_HANGTableAdapter _lOAI_HANGTableAdapter;
        
        private LOAI_NHAN_VIENTableAdapter _lOAI_NHAN_VIENTableAdapter;
        
        private MAT_HANGTableAdapter _mAT_HANGTableAdapter;
        
        private NHAN_VIENTableAdapter _nHAN_VIENTableAdapter;
        
        private PHANCONGXE_TAIXETableAdapter _pHANCONGXE_TAIXETableAdapter;
        
        private THAMSOTableAdapter _tHAMSOTableAdapter;
        
        private TRANG_THAITableAdapter _tRANG_THAITableAdapter;
        
        private TRONG_TAITableAdapter _tRONG_TAITableAdapter;
        
        private XETableAdapter _xETableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CAP_NHIEN_LIEUTableAdapter CAP_NHIEN_LIEUTableAdapter {
            get {
                return this._cAP_NHIEN_LIEUTableAdapter;
            }
            set {
                this._cAP_NHIEN_LIEUTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CHITIET_CAPNHIENLIEUTableAdapter CHITIET_CAPNHIENLIEUTableAdapter {
            get {
                return this._cHITIET_CAPNHIENLIEUTableAdapter;
            }
            set {
                this._cHITIET_CAPNHIENLIEUTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CHITIET_HOADONTableAdapter CHITIET_HOADONTableAdapter {
            get {
                return this._cHITIET_HOADONTableAdapter;
            }
            set {
                this._cHITIET_HOADONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CHITIETPCXE_TAIXETableAdapter CHITIETPCXE_TAIXETableAdapter {
            get {
                return this._cHITIETPCXE_TAIXETableAdapter;
            }
            set {
                this._cHITIETPCXE_TAIXETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DIA_DIEMTableAdapter DIA_DIEMTableAdapter {
            get {
                return this._dIA_DIEMTableAdapter;
            }
            set {
                this._dIA_DIEMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HANG_XETableAdapter HANG_XETableAdapter {
            get {
                return this._hANG_XETableAdapter;
            }
            set {
                this._hANG_XETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HOA_DONTableAdapter HOA_DONTableAdapter {
            get {
                return this._hOA_DONTableAdapter;
            }
            set {
                this._hOA_DONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LOAI_DIA_DIEMTableAdapter LOAI_DIA_DIEMTableAdapter {
            get {
                return this._lOAI_DIA_DIEMTableAdapter;
            }
            set {
                this._lOAI_DIA_DIEMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LOAI_HANGTableAdapter LOAI_HANGTableAdapter {
            get {
                return this._lOAI_HANGTableAdapter;
            }
            set {
                this._lOAI_HANGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LOAI_NHAN_VIENTableAdapter LOAI_NHAN_VIENTableAdapter {
            get {
                return this._lOAI_NHAN_VIENTableAdapter;
            }
            set {
                this._lOAI_NHAN_VIENTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MAT_HANGTableAdapter MAT_HANGTableAdapter {
            get {
                return this._mAT_HANGTableAdapter;
            }
            set {
                this._mAT_HANGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public NHAN_VIENTableAdapter NHAN_VIENTableAdapter {
            get {
                return this._nHAN_VIENTableAdapter;
            }
            set {
                this._nHAN_VIENTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PHANCONGXE_TAIXETableAdapter PHANCONGXE_TAIXETableAdapter {
            get {
                return this._pHANCONGXE_TAIXETableAdapter;
            }
            set {
                this._pHANCONGXE_TAIXETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public THAMSOTableAdapter THAMSOTableAdapter {
            get {
                return this._tHAMSOTableAdapter;
            }
            set {
                this._tHAMSOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TRANG_THAITableAdapter TRANG_THAITableAdapter {
            get {
                return this._tRANG_THAITableAdapter;
            }
            set {
                this._tRANG_THAITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TRONG_TAITableAdapter TRONG_TAITableAdapter {
            get {
                return this._tRONG_TAITableAdapter;
            }
            set {
                this._tRONG_TAITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public XETableAdapter XETableAdapter {
            get {
                return this._xETableAdapter;
            }
            set {
                this._xETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cAP_NHIEN_LIEUTableAdapter != null) 
                            && (this._cAP_NHIEN_LIEUTableAdapter.Connection != null))) {
                    return this._cAP_NHIEN_LIEUTableAdapter.Connection;
                }
                if (((this._cHITIET_CAPNHIENLIEUTableAdapter != null) 
                            && (this._cHITIET_CAPNHIENLIEUTableAdapter.Connection != null))) {
                    return this._cHITIET_CAPNHIENLIEUTableAdapter.Connection;
                }
                if (((this._cHITIET_HOADONTableAdapter != null) 
                            && (this._cHITIET_HOADONTableAdapter.Connection != null))) {
                    return this._cHITIET_HOADONTableAdapter.Connection;
                }
                if (((this._cHITIETPCXE_TAIXETableAdapter != null) 
                            && (this._cHITIETPCXE_TAIXETableAdapter.Connection != null))) {
                    return this._cHITIETPCXE_TAIXETableAdapter.Connection;
                }
                if (((this._dIA_DIEMTableAdapter != null) 
                            && (this._dIA_DIEMTableAdapter.Connection != null))) {
                    return this._dIA_DIEMTableAdapter.Connection;
                }
                if (((this._hANG_XETableAdapter != null) 
                            && (this._hANG_XETableAdapter.Connection != null))) {
                    return this._hANG_XETableAdapter.Connection;
                }
                if (((this._hOA_DONTableAdapter != null) 
                            && (this._hOA_DONTableAdapter.Connection != null))) {
                    return this._hOA_DONTableAdapter.Connection;
                }
                if (((this._lOAI_DIA_DIEMTableAdapter != null) 
                            && (this._lOAI_DIA_DIEMTableAdapter.Connection != null))) {
                    return this._lOAI_DIA_DIEMTableAdapter.Connection;
                }
                if (((this._lOAI_HANGTableAdapter != null) 
                            && (this._lOAI_HANGTableAdapter.Connection != null))) {
                    return this._lOAI_HANGTableAdapter.Connection;
                }
                if (((this._lOAI_NHAN_VIENTableAdapter != null) 
                            && (this._lOAI_NHAN_VIENTableAdapter.Connection != null))) {
                    return this._lOAI_NHAN_VIENTableAdapter.Connection;
                }
                if (((this._mAT_HANGTableAdapter != null) 
                            && (this._mAT_HANGTableAdapter.Connection != null))) {
                    return this._mAT_HANGTableAdapter.Connection;
                }
                if (((this._nHAN_VIENTableAdapter != null) 
                            && (this._nHAN_VIENTableAdapter.Connection != null))) {
                    return this._nHAN_VIENTableAdapter.Connection;
                }
                if (((this._pHANCONGXE_TAIXETableAdapter != null) 
                            && (this._pHANCONGXE_TAIXETableAdapter.Connection != null))) {
                    return this._pHANCONGXE_TAIXETableAdapter.Connection;
                }
                if (((this._tHAMSOTableAdapter != null) 
                            && (this._tHAMSOTableAdapter.Connection != null))) {
                    return this._tHAMSOTableAdapter.Connection;
                }
                if (((this._tRANG_THAITableAdapter != null) 
                            && (this._tRANG_THAITableAdapter.Connection != null))) {
                    return this._tRANG_THAITableAdapter.Connection;
                }
                if (((this._tRONG_TAITableAdapter != null) 
                            && (this._tRONG_TAITableAdapter.Connection != null))) {
                    return this._tRONG_TAITableAdapter.Connection;
                }
                if (((this._xETableAdapter != null) 
                            && (this._xETableAdapter.Connection != null))) {
                    return this._xETableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cAP_NHIEN_LIEUTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cHITIET_CAPNHIENLIEUTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cHITIET_HOADONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cHITIETPCXE_TAIXETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dIA_DIEMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hANG_XETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hOA_DONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOAI_DIA_DIEMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOAI_HANGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOAI_NHAN_VIENTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mAT_HANGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nHAN_VIENTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pHANCONGXE_TAIXETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tHAMSOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRANG_THAITableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRONG_TAITableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._xETableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(Db_QuanLyDoiXeVinamilkDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lOAI_NHAN_VIENTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOAI_NHAN_VIEN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOAI_NHAN_VIENTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lOAI_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOAI_HANG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOAI_HANGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hANG_XETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HANG_XE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hANG_XETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRONG_TAITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRONG_TAI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRONG_TAITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nHAN_VIENTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NHAN_VIEN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nHAN_VIENTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lOAI_DIA_DIEMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOAI_DIA_DIEM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOAI_DIA_DIEMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._xETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.XE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._xETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mAT_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MAT_HANG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mAT_HANGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pHANCONGXE_TAIXETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PHANCONGXE_TAIXE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pHANCONGXE_TAIXETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRANG_THAITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRANG_THAI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRANG_THAITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dIA_DIEMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DIA_DIEM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dIA_DIEMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hOA_DONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HOA_DON.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hOA_DONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAP_NHIEN_LIEUTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAP_NHIEN_LIEU.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAP_NHIEN_LIEUTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cHITIET_CAPNHIENLIEUTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CHITIET_CAPNHIENLIEU.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cHITIET_CAPNHIENLIEUTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cHITIETPCXE_TAIXETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CHITIETPCXE_TAIXE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cHITIETPCXE_TAIXETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cHITIET_HOADONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CHITIET_HOADON.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cHITIET_HOADONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tHAMSOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.THAMSO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tHAMSOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(Db_QuanLyDoiXeVinamilkDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lOAI_NHAN_VIENTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOAI_NHAN_VIEN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOAI_NHAN_VIENTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lOAI_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOAI_HANG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOAI_HANGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hANG_XETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HANG_XE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hANG_XETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRONG_TAITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRONG_TAI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRONG_TAITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nHAN_VIENTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NHAN_VIEN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nHAN_VIENTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lOAI_DIA_DIEMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOAI_DIA_DIEM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOAI_DIA_DIEMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._xETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.XE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._xETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mAT_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MAT_HANG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mAT_HANGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pHANCONGXE_TAIXETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PHANCONGXE_TAIXE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pHANCONGXE_TAIXETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRANG_THAITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRANG_THAI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRANG_THAITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dIA_DIEMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DIA_DIEM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dIA_DIEMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hOA_DONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HOA_DON.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hOA_DONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAP_NHIEN_LIEUTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAP_NHIEN_LIEU.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAP_NHIEN_LIEUTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cHITIET_CAPNHIENLIEUTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CHITIET_CAPNHIENLIEU.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cHITIET_CAPNHIENLIEUTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cHITIETPCXE_TAIXETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CHITIETPCXE_TAIXE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cHITIETPCXE_TAIXETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cHITIET_HOADONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CHITIET_HOADON.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cHITIET_HOADONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tHAMSOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.THAMSO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tHAMSOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(Db_QuanLyDoiXeVinamilkDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tHAMSOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.THAMSO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tHAMSOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cHITIET_HOADONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CHITIET_HOADON.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cHITIET_HOADONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cHITIETPCXE_TAIXETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CHITIETPCXE_TAIXE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cHITIETPCXE_TAIXETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cHITIET_CAPNHIENLIEUTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CHITIET_CAPNHIENLIEU.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cHITIET_CAPNHIENLIEUTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAP_NHIEN_LIEUTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAP_NHIEN_LIEU.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAP_NHIEN_LIEUTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hOA_DONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HOA_DON.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hOA_DONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dIA_DIEMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DIA_DIEM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dIA_DIEMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRANG_THAITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRANG_THAI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRANG_THAITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pHANCONGXE_TAIXETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PHANCONGXE_TAIXE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pHANCONGXE_TAIXETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mAT_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MAT_HANG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mAT_HANGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._xETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.XE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._xETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOAI_DIA_DIEMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOAI_DIA_DIEM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOAI_DIA_DIEMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nHAN_VIENTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NHAN_VIEN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nHAN_VIENTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRONG_TAITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRONG_TAI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRONG_TAITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hANG_XETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HANG_XE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hANG_XETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOAI_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOAI_HANG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOAI_HANGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOAI_NHAN_VIENTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOAI_NHAN_VIEN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOAI_NHAN_VIENTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(Db_QuanLyDoiXeVinamilkDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cAP_NHIEN_LIEUTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAP_NHIEN_LIEUTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cHITIET_CAPNHIENLIEUTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cHITIET_CAPNHIENLIEUTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cHITIET_HOADONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cHITIET_HOADONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cHITIETPCXE_TAIXETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cHITIETPCXE_TAIXETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dIA_DIEMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dIA_DIEMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hANG_XETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hANG_XETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hOA_DONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hOA_DONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOAI_DIA_DIEMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOAI_DIA_DIEMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOAI_HANGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOAI_HANGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOAI_NHAN_VIENTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOAI_NHAN_VIENTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mAT_HANGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mAT_HANGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nHAN_VIENTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nHAN_VIENTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pHANCONGXE_TAIXETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pHANCONGXE_TAIXETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tHAMSOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tHAMSOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tRANG_THAITableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRANG_THAITableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tRONG_TAITableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRONG_TAITableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._xETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._xETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cAP_NHIEN_LIEUTableAdapter != null)) {
                    revertConnections.Add(this._cAP_NHIEN_LIEUTableAdapter, this._cAP_NHIEN_LIEUTableAdapter.Connection);
                    this._cAP_NHIEN_LIEUTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._cAP_NHIEN_LIEUTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._cAP_NHIEN_LIEUTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAP_NHIEN_LIEUTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAP_NHIEN_LIEUTableAdapter.Adapter);
                    }
                }
                if ((this._cHITIET_CAPNHIENLIEUTableAdapter != null)) {
                    revertConnections.Add(this._cHITIET_CAPNHIENLIEUTableAdapter, this._cHITIET_CAPNHIENLIEUTableAdapter.Connection);
                    this._cHITIET_CAPNHIENLIEUTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._cHITIET_CAPNHIENLIEUTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._cHITIET_CAPNHIENLIEUTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cHITIET_CAPNHIENLIEUTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cHITIET_CAPNHIENLIEUTableAdapter.Adapter);
                    }
                }
                if ((this._cHITIET_HOADONTableAdapter != null)) {
                    revertConnections.Add(this._cHITIET_HOADONTableAdapter, this._cHITIET_HOADONTableAdapter.Connection);
                    this._cHITIET_HOADONTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._cHITIET_HOADONTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._cHITIET_HOADONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cHITIET_HOADONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cHITIET_HOADONTableAdapter.Adapter);
                    }
                }
                if ((this._cHITIETPCXE_TAIXETableAdapter != null)) {
                    revertConnections.Add(this._cHITIETPCXE_TAIXETableAdapter, this._cHITIETPCXE_TAIXETableAdapter.Connection);
                    this._cHITIETPCXE_TAIXETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._cHITIETPCXE_TAIXETableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._cHITIETPCXE_TAIXETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cHITIETPCXE_TAIXETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cHITIETPCXE_TAIXETableAdapter.Adapter);
                    }
                }
                if ((this._dIA_DIEMTableAdapter != null)) {
                    revertConnections.Add(this._dIA_DIEMTableAdapter, this._dIA_DIEMTableAdapter.Connection);
                    this._dIA_DIEMTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._dIA_DIEMTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._dIA_DIEMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dIA_DIEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dIA_DIEMTableAdapter.Adapter);
                    }
                }
                if ((this._hANG_XETableAdapter != null)) {
                    revertConnections.Add(this._hANG_XETableAdapter, this._hANG_XETableAdapter.Connection);
                    this._hANG_XETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._hANG_XETableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._hANG_XETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hANG_XETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hANG_XETableAdapter.Adapter);
                    }
                }
                if ((this._hOA_DONTableAdapter != null)) {
                    revertConnections.Add(this._hOA_DONTableAdapter, this._hOA_DONTableAdapter.Connection);
                    this._hOA_DONTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._hOA_DONTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._hOA_DONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hOA_DONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hOA_DONTableAdapter.Adapter);
                    }
                }
                if ((this._lOAI_DIA_DIEMTableAdapter != null)) {
                    revertConnections.Add(this._lOAI_DIA_DIEMTableAdapter, this._lOAI_DIA_DIEMTableAdapter.Connection);
                    this._lOAI_DIA_DIEMTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._lOAI_DIA_DIEMTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._lOAI_DIA_DIEMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOAI_DIA_DIEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOAI_DIA_DIEMTableAdapter.Adapter);
                    }
                }
                if ((this._lOAI_HANGTableAdapter != null)) {
                    revertConnections.Add(this._lOAI_HANGTableAdapter, this._lOAI_HANGTableAdapter.Connection);
                    this._lOAI_HANGTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._lOAI_HANGTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._lOAI_HANGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOAI_HANGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOAI_HANGTableAdapter.Adapter);
                    }
                }
                if ((this._lOAI_NHAN_VIENTableAdapter != null)) {
                    revertConnections.Add(this._lOAI_NHAN_VIENTableAdapter, this._lOAI_NHAN_VIENTableAdapter.Connection);
                    this._lOAI_NHAN_VIENTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._lOAI_NHAN_VIENTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._lOAI_NHAN_VIENTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOAI_NHAN_VIENTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOAI_NHAN_VIENTableAdapter.Adapter);
                    }
                }
                if ((this._mAT_HANGTableAdapter != null)) {
                    revertConnections.Add(this._mAT_HANGTableAdapter, this._mAT_HANGTableAdapter.Connection);
                    this._mAT_HANGTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._mAT_HANGTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._mAT_HANGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mAT_HANGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mAT_HANGTableAdapter.Adapter);
                    }
                }
                if ((this._nHAN_VIENTableAdapter != null)) {
                    revertConnections.Add(this._nHAN_VIENTableAdapter, this._nHAN_VIENTableAdapter.Connection);
                    this._nHAN_VIENTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._nHAN_VIENTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._nHAN_VIENTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nHAN_VIENTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nHAN_VIENTableAdapter.Adapter);
                    }
                }
                if ((this._pHANCONGXE_TAIXETableAdapter != null)) {
                    revertConnections.Add(this._pHANCONGXE_TAIXETableAdapter, this._pHANCONGXE_TAIXETableAdapter.Connection);
                    this._pHANCONGXE_TAIXETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._pHANCONGXE_TAIXETableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._pHANCONGXE_TAIXETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pHANCONGXE_TAIXETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pHANCONGXE_TAIXETableAdapter.Adapter);
                    }
                }
                if ((this._tHAMSOTableAdapter != null)) {
                    revertConnections.Add(this._tHAMSOTableAdapter, this._tHAMSOTableAdapter.Connection);
                    this._tHAMSOTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._tHAMSOTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._tHAMSOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tHAMSOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tHAMSOTableAdapter.Adapter);
                    }
                }
                if ((this._tRANG_THAITableAdapter != null)) {
                    revertConnections.Add(this._tRANG_THAITableAdapter, this._tRANG_THAITableAdapter.Connection);
                    this._tRANG_THAITableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._tRANG_THAITableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._tRANG_THAITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRANG_THAITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRANG_THAITableAdapter.Adapter);
                    }
                }
                if ((this._tRONG_TAITableAdapter != null)) {
                    revertConnections.Add(this._tRONG_TAITableAdapter, this._tRONG_TAITableAdapter.Connection);
                    this._tRONG_TAITableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._tRONG_TAITableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._tRONG_TAITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRONG_TAITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRONG_TAITableAdapter.Adapter);
                    }
                }
                if ((this._xETableAdapter != null)) {
                    revertConnections.Add(this._xETableAdapter, this._xETableAdapter.Connection);
                    this._xETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._xETableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._xETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._xETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._xETableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cAP_NHIEN_LIEUTableAdapter != null)) {
                    this._cAP_NHIEN_LIEUTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._cAP_NHIEN_LIEUTableAdapter]));
                    this._cAP_NHIEN_LIEUTableAdapter.Transaction = null;
                }
                if ((this._cHITIET_CAPNHIENLIEUTableAdapter != null)) {
                    this._cHITIET_CAPNHIENLIEUTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._cHITIET_CAPNHIENLIEUTableAdapter]));
                    this._cHITIET_CAPNHIENLIEUTableAdapter.Transaction = null;
                }
                if ((this._cHITIET_HOADONTableAdapter != null)) {
                    this._cHITIET_HOADONTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._cHITIET_HOADONTableAdapter]));
                    this._cHITIET_HOADONTableAdapter.Transaction = null;
                }
                if ((this._cHITIETPCXE_TAIXETableAdapter != null)) {
                    this._cHITIETPCXE_TAIXETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._cHITIETPCXE_TAIXETableAdapter]));
                    this._cHITIETPCXE_TAIXETableAdapter.Transaction = null;
                }
                if ((this._dIA_DIEMTableAdapter != null)) {
                    this._dIA_DIEMTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._dIA_DIEMTableAdapter]));
                    this._dIA_DIEMTableAdapter.Transaction = null;
                }
                if ((this._hANG_XETableAdapter != null)) {
                    this._hANG_XETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._hANG_XETableAdapter]));
                    this._hANG_XETableAdapter.Transaction = null;
                }
                if ((this._hOA_DONTableAdapter != null)) {
                    this._hOA_DONTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._hOA_DONTableAdapter]));
                    this._hOA_DONTableAdapter.Transaction = null;
                }
                if ((this._lOAI_DIA_DIEMTableAdapter != null)) {
                    this._lOAI_DIA_DIEMTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._lOAI_DIA_DIEMTableAdapter]));
                    this._lOAI_DIA_DIEMTableAdapter.Transaction = null;
                }
                if ((this._lOAI_HANGTableAdapter != null)) {
                    this._lOAI_HANGTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._lOAI_HANGTableAdapter]));
                    this._lOAI_HANGTableAdapter.Transaction = null;
                }
                if ((this._lOAI_NHAN_VIENTableAdapter != null)) {
                    this._lOAI_NHAN_VIENTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._lOAI_NHAN_VIENTableAdapter]));
                    this._lOAI_NHAN_VIENTableAdapter.Transaction = null;
                }
                if ((this._mAT_HANGTableAdapter != null)) {
                    this._mAT_HANGTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._mAT_HANGTableAdapter]));
                    this._mAT_HANGTableAdapter.Transaction = null;
                }
                if ((this._nHAN_VIENTableAdapter != null)) {
                    this._nHAN_VIENTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._nHAN_VIENTableAdapter]));
                    this._nHAN_VIENTableAdapter.Transaction = null;
                }
                if ((this._pHANCONGXE_TAIXETableAdapter != null)) {
                    this._pHANCONGXE_TAIXETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._pHANCONGXE_TAIXETableAdapter]));
                    this._pHANCONGXE_TAIXETableAdapter.Transaction = null;
                }
                if ((this._tHAMSOTableAdapter != null)) {
                    this._tHAMSOTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._tHAMSOTableAdapter]));
                    this._tHAMSOTableAdapter.Transaction = null;
                }
                if ((this._tRANG_THAITableAdapter != null)) {
                    this._tRANG_THAITableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._tRANG_THAITableAdapter]));
                    this._tRANG_THAITableAdapter.Transaction = null;
                }
                if ((this._tRONG_TAITableAdapter != null)) {
                    this._tRONG_TAITableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._tRONG_TAITableAdapter]));
                    this._tRONG_TAITableAdapter.Transaction = null;
                }
                if ((this._xETableAdapter != null)) {
                    this._xETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._xETableAdapter]));
                    this._xETableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591